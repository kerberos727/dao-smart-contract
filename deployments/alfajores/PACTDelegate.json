{
  "address": "0xD90227285391950b3d82ceba3134d97f6aCa2196",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "NewAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldImplementation",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "NewImplementation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldPendingAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPendingAdmin",
          "type": "address"
        }
      ],
      "name": "NewPendingAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "indexed": false,
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "ProposalQueued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldProposalThreshold",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newProposalThreshold",
          "type": "uint256"
        }
      ],
      "name": "ProposalThresholdSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldQuorumVotes",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newQuorumVotes",
          "type": "uint256"
        }
      ],
      "name": "QuorumVotesSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TransferERC20",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "VoteCast",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldVotingDelay",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newVotingDelay",
          "type": "uint256"
        }
      ],
      "name": "VotingDelaySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldVotingPeriod",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newVotingPeriod",
          "type": "uint256"
        }
      ],
      "name": "VotingPeriodSet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BALLOT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_PROPOSAL_THRESHOLD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_VOTING_DELAY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_VOTING_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_PROPOSAL_THRESHOLD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_VOTING_DELAY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_VOTING_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NAME",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PROPOSAL_MAX_OPERATIONS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newProposalThreshold",
          "type": "uint256"
        }
      ],
      "name": "_setProposalThreshold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newQuorumVotes",
          "type": "uint256"
        }
      ],
      "name": "_setQuorumVotes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newVotingDelay",
          "type": "uint256"
        }
      ],
      "name": "_setVotingDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newVotingPeriod",
          "type": "uint256"
        }
      ],
      "name": "_setVotingPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_support",
          "type": "uint8"
        }
      ],
      "name": "castVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_support",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "_v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "_r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_s",
          "type": "bytes32"
        }
      ],
      "name": "castVoteBySig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_support",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "_reason",
          "type": "string"
        }
      ],
      "name": "castVoteWithReason",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        }
      ],
      "name": "getActions",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_voter",
          "type": "address"
        }
      ],
      "name": "getReceipt",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "hasVoted",
              "type": "bool"
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8"
            },
            {
              "internalType": "uint96",
              "name": "votes",
              "type": "uint96"
            }
          ],
          "internalType": "struct PACTDelegateStorageV1.Receipt",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_timelock",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_releaseToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_votingPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_votingDelay",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_proposalThreshold",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quorumVotes",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "latestProposalIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalCalldatas",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "proposalReceipts",
      "outputs": [
        {
          "internalType": "bool",
          "name": "hasVoted",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "uint96",
          "name": "votes",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalSignatures",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalTargets",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalValues",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "abstainVotes",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "canceled",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_values",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "_signatures",
          "type": "string[]"
        },
        {
          "internalType": "bytes[]",
          "name": "_calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "propose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        }
      ],
      "name": "queue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quorumVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "releaseToken",
      "outputs": [
        {
          "internalType": "contract IHasVotes",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        }
      ],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum PACTDelegateStorageV1.ProposalState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timelock",
      "outputs": [
        {
          "internalType": "contract TimelockInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IHasVotes",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x09bb8651c6070f9fee5b32c78082db1b7a1304465f9d2e4c3e8fd37d138f3e12",
  "receipt": {
    "to": null,
    "from": "0x2F3340435E283A3d479dF091F913B6EFf96becF5",
    "contractAddress": "0xD90227285391950b3d82ceba3134d97f6aCa2196",
    "transactionIndex": 0,
    "gasUsed": "4088805",
    "logsBloom": "0x
    "blockHash": "0xdd090640f10305ae00642f631936f04a327ea41f168bcc50f21f1933b3985e4b",
    "transactionHash": "0x09bb8651c6070f9fee5b32c78082db1b7a1304465f9d2e4c3e8fd37d138f3e12",
    "logs": [],
    "blockNumber": 8995679,
    "cumulativeGasUsed": "4088805",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "bc78398ad6ba86cebe8213030fed1011",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldImplementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"NewImplementation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPendingAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"NewPendingAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"ProposalQueued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldProposalThreshold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newProposalThreshold\",\"type\":\"uint256\"}],\"name\":\"ProposalThresholdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldQuorumVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newQuorumVotes\",\"type\":\"uint256\"}],\"name\":\"QuorumVotesSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferERC20\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingDelay\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingDelay\",\"type\":\"uint256\"}],\"name\":\"VotingDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"VotingPeriodSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_PROPOSAL_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_VOTING_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_VOTING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_PROPOSAL_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_VOTING_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_VOTING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROPOSAL_MAX_OPERATIONS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newProposalThreshold\",\"type\":\"uint256\"}],\"name\":\"_setProposalThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newQuorumVotes\",\"type\":\"uint256\"}],\"name\":\"_setQuorumVotes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newVotingDelay\",\"type\":\"uint256\"}],\"name\":\"_setVotingDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"_setVotingPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_support\",\"type\":\"uint8\"}],\"name\":\"castVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_support\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"castVoteBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_reason\",\"type\":\"string\"}],\"name\":\"castVoteWithReason\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"getActions\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"getReceipt\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint96\",\"name\":\"votes\",\"type\":\"uint96\"}],\"internalType\":\"struct PACTDelegateStorageV1.Receipt\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_timelock\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_releaseToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_votingPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_votingDelay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_proposalThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quorumVotes\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"latestProposalIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalCalldatas\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"proposalReceipts\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint96\",\"name\":\"votes\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalSignatures\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalTargets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"abstainVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"canceled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"_signatures\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"queue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorumVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releaseToken\",\"outputs\":[{\"internalType\":\"contract IHasVotes\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum PACTDelegateStorageV1.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelock\",\"outputs\":[{\"internalType\":\"contract TimelockInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IHasVotes\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"_setProposalThreshold(uint256)\":{\"details\":\"_newProposalThreshold must be greater than the hardcoded min\",\"params\":{\"_newProposalThreshold\":\"new proposal threshold\"}},\"_setQuorumVotes(uint256)\":{\"params\":{\"_newQuorumVotes\":\"new quorum votes\"}},\"_setVotingDelay(uint256)\":{\"params\":{\"_newVotingDelay\":\"new voting delay, in blocks\"}},\"_setVotingPeriod(uint256)\":{\"params\":{\"_newVotingPeriod\":\"new voting period, in blocks\"}},\"cancel(uint256)\":{\"params\":{\"_proposalId\":\"The id of the proposal to cancel\"}},\"castVote(uint256,uint8)\":{\"params\":{\"_proposalId\":\"The id of the proposal to vote on\",\"_support\":\"The support value for the vote. 0=against, 1=for, 2=abstain\"}},\"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)\":{\"details\":\"External function that accepts EIP-712 signatures for voting on proposals.\"},\"castVoteWithReason(uint256,uint8,string)\":{\"params\":{\"_proposalId\":\"The id of the proposal to vote on\",\"_reason\":\"The reason given for the vote by the voter\",\"_support\":\"The support value for the vote. 0=against, 1=for, 2=abstain\"}},\"execute(uint256)\":{\"params\":{\"_proposalId\":\"The id of the proposal to execute\"}},\"getActions(uint256)\":{\"params\":{\"_proposalId\":\"Proposal to query.\"},\"returns\":{\"calldatas\":\"Calldatas for proposal calls.\",\"signatures\":\"Function signatures for proposal calls.\",\"targets\":\"Target addresses for proposal calls.\",\"values\":\"Eth values for proposal calls.\"}},\"getReceipt(uint256,address)\":{\"params\":{\"_proposalId\":\"the id of proposal\",\"_voter\":\"The address of the voter\"},\"returns\":{\"_0\":\"The voting receipt\"}},\"initialize(address,address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"_proposalThreshold\":\"The initial proposal threshold\",\"_quorumVotes\":\"The initial quorum votes\",\"_releaseToken\":\"The address of the \\\"Release\\\" voting token. If none, specify the zero address.\",\"_timelock\":\"The address of the Timelock\",\"_token\":\"The address of the voting token\",\"_votingDelay\":\"The initial voting delay\",\"_votingPeriod\":\"The initial voting period\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"propose(address[],uint256[],string[],bytes[],string)\":{\"params\":{\"_calldatas\":\"Calldatas for proposal calls.\",\"_description\":\"String description of the proposal.\",\"_signatures\":\"Function signatures for proposal calls.\",\"_targets\":\"Target addresses for proposal calls.\",\"_values\":\"Eth values for proposal calls.\"},\"returns\":{\"_0\":\"Proposal id of new proposal.\"}},\"queue(uint256)\":{\"params\":{\"_proposalId\":\"The id of the proposal to queue\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"state(uint256)\":{\"params\":{\"_proposalId\":\"The id of the proposal\"},\"returns\":{\"_0\":\"Proposal state\"}},\"transfer(address,address,uint256)\":{\"params\":{\"_amount\":\"amount of the transaction\",\"_to\":\"address of the receiver\",\"_token\":\"address of the ERC20 token\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"NewAdmin(address,address)\":{\"notice\":\"Emitted when pendingAdmin is accepted, which means admin is updated\"},\"NewImplementation(address,address)\":{\"notice\":\"Emitted when implementation is changed\"},\"NewPendingAdmin(address,address)\":{\"notice\":\"Emitted when pendingAdmin is changed\"},\"ProposalCanceled(uint256)\":{\"notice\":\"An event emitted when a proposal has been canceled\"},\"ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)\":{\"notice\":\"An event emitted when a new proposal is created\"},\"ProposalExecuted(uint256)\":{\"notice\":\"An event emitted when a proposal has been executed in the Timelock\"},\"ProposalQueued(uint256,uint256)\":{\"notice\":\"An event emitted when a proposal has been queued in the Timelock\"},\"ProposalThresholdSet(uint256,uint256)\":{\"notice\":\"Emitted when proposal threshold is set\"},\"QuorumVotesSet(uint256,uint256)\":{\"notice\":\"An event emitted when the quorum votes is set\"},\"TransferERC20(address,address,uint256)\":{\"notice\":\"Triggered when an amount of an ERC20 has been transferred from this contract to an address\"},\"VoteCast(address,uint256,uint8,uint256,string)\":{\"notice\":\"An event emitted when a vote has been cast on a proposal\"},\"VotingDelaySet(uint256,uint256)\":{\"notice\":\"An event emitted when the voting delay is set\"},\"VotingPeriodSet(uint256,uint256)\":{\"notice\":\"An event emitted when the voting period is set\"}},\"kind\":\"user\",\"methods\":{\"BALLOT_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the ballot struct used by the contract\"},\"DOMAIN_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the contract's domain\"},\"MAX_PROPOSAL_THRESHOLD()\":{\"notice\":\"The maximum setable proposal threshold\"},\"MAX_VOTING_DELAY()\":{\"notice\":\"The max setable voting delay\"},\"MAX_VOTING_PERIOD()\":{\"notice\":\"The max setable voting period\"},\"MIN_PROPOSAL_THRESHOLD()\":{\"notice\":\"The minimum setable proposal threshold\"},\"MIN_VOTING_DELAY()\":{\"notice\":\"The min setable voting delay\"},\"MIN_VOTING_PERIOD()\":{\"notice\":\"The minimum setable voting period\"},\"NAME()\":{\"notice\":\"The name of this contract\"},\"PROPOSAL_MAX_OPERATIONS()\":{\"notice\":\"The maximum number of actions that can be included in a proposal\"},\"_setProposalThreshold(uint256)\":{\"notice\":\"Owner function for setting the proposal threshold\"},\"_setQuorumVotes(uint256)\":{\"notice\":\"Owner function for setting the quorum votes\"},\"_setVotingDelay(uint256)\":{\"notice\":\"Owner function for setting the voting delay\"},\"_setVotingPeriod(uint256)\":{\"notice\":\"Owner function for setting the voting period\"},\"cancel(uint256)\":{\"notice\":\"Cancels a proposal only if sender is the proposer, or proposer delegates dropped below proposal threshold\"},\"castVote(uint256,uint8)\":{\"notice\":\"Cast a vote for a proposal\"},\"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)\":{\"notice\":\"Cast a vote for a proposal by signature\"},\"castVoteWithReason(uint256,uint8,string)\":{\"notice\":\"Cast a vote for a proposal with a reason\"},\"execute(uint256)\":{\"notice\":\"Executes a queued proposal if eta has passed\"},\"getActions(uint256)\":{\"notice\":\"Gets actions of a proposal.\"},\"getReceipt(uint256,address)\":{\"notice\":\"Gets the receipt for a voter on a given proposal\"},\"initialize(address,address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Used to initialize the contract during delegator contructor\"},\"latestProposalIds(address)\":{\"notice\":\"The latest proposal for each proposer\"},\"proposalCalldatas(uint256,uint256)\":{\"notice\":\"The official each proposal's calldatas: An ordered list of calldata to be passed to each call\"},\"proposalCount()\":{\"notice\":\"The total number of proposals\"},\"proposalReceipts(uint256,address)\":{\"notice\":\"The official each proposal's receipts: Receipts of ballots for the entire set of voters\"},\"proposalSignatures(uint256,uint256)\":{\"notice\":\"The official each proposal's signatures: An ordered list of function signatures to be called\"},\"proposalTargets(uint256,uint256)\":{\"notice\":\"The official each proposal's targets: An ordered list of target addresses for calls to be made\"},\"proposalThreshold()\":{\"notice\":\"The number of votes required in order for a voter to become a proposer\"},\"proposalValues(uint256,uint256)\":{\"notice\":\"The official each proposal's values: An ordered list of values (i.e. msg.value) to be passed to the calls to be made\"},\"proposals(uint256)\":{\"notice\":\"The official record of all proposals ever proposed\"},\"propose(address[],uint256[],string[],bytes[],string)\":{\"notice\":\"Function used to propose a new proposal. Sender must have delegates above the proposal threshold.\"},\"queue(uint256)\":{\"notice\":\"Queues a proposal of state succeeded\"},\"quorumVotes()\":{\"notice\":\"The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed\"},\"releaseToken()\":{\"notice\":\"The address of the \\\"Release\\\" governance token\"},\"state(uint256)\":{\"notice\":\"Gets the state of a proposal\"},\"timelock()\":{\"notice\":\"The address of the Governance Timelock\"},\"token()\":{\"notice\":\"The address of the governance token\"},\"transfer(address,address,uint256)\":{\"notice\":\"Transfers an amount of an ERC20 from this contract to an address\"},\"votingDelay()\":{\"notice\":\"The delay before voting on a proposal may take place, once proposed, in blocks\"},\"votingPeriod()\":{\"notice\":\"The duration of voting on a proposal, in blocks\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/governor/PACTDelegate.sol\":\"PACTDelegate\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal initializer {\\n        __Context_init_unchained();\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal initializer {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x35b09b69aca3bc2633da8f47382a81ecf367efe57167a2114f60f9ec81988afa\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8b2abd85d0ece7e866e100e9d47ca9cbec93c87cf71a8d267b2b93eb81f7d5e9\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuardUpgradeable is Initializable {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    function __ReentrancyGuard_init() internal initializer {\\n        __ReentrancyGuard_init_unchained();\\n    }\\n\\n    function __ReentrancyGuard_init_unchained() internal initializer {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x89fa60d14355f7ae06af11e28fce2bb90c5c6186645d681a30e1b36234a4c210\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal initializer {\\n        __Context_init_unchained();\\n    }\\n\\n    function __Context_init_unchained() internal initializer {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x062b5a0f7cc6b0528fa350033759f3a15ba42afb57423d7c593753860f2c82e0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) private pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\"},\"@ubeswap/governance/contracts/interfaces/IHasVotes.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.3;\\n\\n/**\\n * Reads the votes that an account has.\\n */\\ninterface IHasVotes {\\n    /**\\n     * @notice Gets the current votes balance for `account`\\n     * @param account The address to get votes balance\\n     * @return The number of current votes for `account`\\n     */\\n    function getCurrentVotes(address account) external view returns (uint96);\\n\\n    /**\\n     * @notice Determine the prior number of votes for an account as of a block number\\n     * @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\\n     * @param account The address of the account to check\\n     * @param blockNumber The block number to get the vote balance at\\n     * @return The number of votes the account had as of the given block\\n     */\\n    function getPriorVotes(address account, uint256 blockNumber)\\n        external\\n        view\\n        returns (uint96);\\n}\\n\",\"keccak256\":\"0x5ef48a77f18f580eab395335e8ec85ec9ad49ec7ce813515bd4aa73dfe0e8bf8\",\"license\":\"MIT\"},\"contracts/governor/PACTDelegate.sol\":{\"content\":\"//SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.4;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"./interfaces/PACTDelegateStorageV1.sol\\\";\\nimport \\\"./interfaces/PACTEvents.sol\\\";\\n\\ncontract PACTDelegate is\\nPACTEvents,\\nInitializable,\\nOwnableUpgradeable,\\nReentrancyGuardUpgradeable,\\nPACTDelegateStorageV1\\n{\\n    using SafeERC20 for IERC20;\\n\\n    /// @notice The name of this contract\\n    string public constant NAME = \\\"PACT\\\";\\n\\n    /// @notice The minimum setable proposal threshold\\n    uint256 public constant MIN_PROPOSAL_THRESHOLD = 100_000_000e18; // 100,000,000 Tokens\\n\\n    /// @notice The maximum setable proposal threshold\\n    uint256 public constant MAX_PROPOSAL_THRESHOLD = 500_000_000e18; // 500,000,000 Tokens\\n\\n    /// @notice The minimum setable voting period\\n    uint256 public constant MIN_VOTING_PERIOD = 720; // About 1 hour\\n\\n    /// @notice The max setable voting period\\n    uint256 public constant MAX_VOTING_PERIOD = 241920; // About 2 weeks\\n\\n    /// @notice The min setable voting delay\\n    uint256 public constant MIN_VOTING_DELAY = 1;\\n\\n    /// @notice The max setable voting delay\\n    uint256 public constant MAX_VOTING_DELAY = 120960; // About 1 week\\n\\n    /// @notice The maximum number of actions that can be included in a proposal\\n    uint256 public constant PROPOSAL_MAX_OPERATIONS = 10; // 10 actions\\n\\n    /// @notice The EIP-712 typehash for the contract's domain\\n    bytes32 public constant DOMAIN_TYPEHASH =\\n    keccak256(\\\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\\\");\\n\\n    /// @notice The EIP-712 typehash for the ballot struct used by the contract\\n    bytes32 public constant BALLOT_TYPEHASH = keccak256(\\\"Ballot(uint256 proposalId,uint8 support)\\\");\\n\\n    /**\\n     * @notice Used to initialize the contract during delegator contructor\\n     * @param _timelock The address of the Timelock\\n     * @param _token The address of the voting token\\n     * @param _releaseToken The address of the \\\"Release\\\" voting token. If none, specify the zero address.\\n     * @param _votingPeriod The initial voting period\\n     * @param _votingDelay The initial voting delay\\n     * @param _proposalThreshold The initial proposal threshold\\n     * @param _quorumVotes The initial quorum votes\\n     */\\n    function initialize(\\n        address _timelock,\\n        address _token,\\n        address _releaseToken,\\n        uint256 _votingPeriod,\\n        uint256 _votingDelay,\\n        uint256 _proposalThreshold,\\n        uint256 _quorumVotes\\n    ) public initializer {\\n        require(\\n            TimelockInterface(_timelock).admin() == address(this),\\n            \\\"PACT::initialize: timelock admin is not assigned to PACTDelegate\\\"\\n        );\\n        require(\\n            _votingPeriod >= MIN_VOTING_PERIOD && _votingPeriod <= MAX_VOTING_PERIOD,\\n            \\\"PACT::initialize: invalid voting period\\\"\\n        );\\n        require(\\n            _votingDelay >= MIN_VOTING_DELAY && _votingDelay <= MAX_VOTING_DELAY,\\n            \\\"PACT::initialize: invalid voting delay\\\"\\n        );\\n        require(\\n            _proposalThreshold >= MIN_PROPOSAL_THRESHOLD &&\\n            _proposalThreshold <= MAX_PROPOSAL_THRESHOLD,\\n            \\\"PACT::initialize: invalid proposal threshold\\\"\\n        );\\n        require(_quorumVotes >= _proposalThreshold, \\\"PACT::initialize: invalid quorum votes\\\");\\n        timelock = TimelockInterface(_timelock);\\n        require(\\n            timelock.admin() == address(this),\\n            \\\"PACT::initialize: timelock admin is not assigned to PACTDelegate\\\"\\n        );\\n\\n        __Ownable_init();\\n        __ReentrancyGuard_init();\\n\\n        token = IHasVotes(_token);\\n        releaseToken = IHasVotes(_releaseToken);\\n        votingPeriod = _votingPeriod;\\n        votingDelay = _votingDelay;\\n        proposalThreshold = _proposalThreshold;\\n        quorumVotes = _quorumVotes;\\n\\n        // Create dummy proposal\\n        Proposal memory _dummyProposal = Proposal({\\n        id: proposalCount,\\n        proposer: address(this),\\n        eta: 0,\\n        startBlock: 0,\\n        endBlock: 0,\\n        forVotes: 0,\\n        againstVotes: 0,\\n        abstainVotes: 0,\\n        canceled: true,\\n        executed: false\\n        });\\n        proposalCount++;\\n\\n        proposals[_dummyProposal.id] = _dummyProposal;\\n        latestProposalIds[_dummyProposal.proposer] = _dummyProposal.id;\\n\\n        emit ProposalCreated(\\n            _dummyProposal.id,\\n            address(this),\\n            proposalTargets[_dummyProposal.id],\\n            proposalValues[_dummyProposal.id],\\n            proposalSignatures[_dummyProposal.id],\\n            proposalCalldatas[_dummyProposal.id],\\n            0,\\n            0,\\n            \\\"\\\"\\n        );\\n    }\\n\\n    /**\\n     * @notice Function used to propose a new proposal. Sender must have delegates above the proposal threshold.\\n     * @param _targets Target addresses for proposal calls.\\n     * @param _values Eth values for proposal calls.\\n     * @param _signatures Function signatures for proposal calls.\\n     * @param _calldatas Calldatas for proposal calls.\\n     * @param _description String description of the proposal.\\n     * @return Proposal id of new proposal.\\n     */\\n    function propose(\\n        address[] memory _targets,\\n        uint256[] memory _values,\\n        string[] memory _signatures,\\n        bytes[] memory _calldatas,\\n        string memory _description\\n    ) public returns (uint256) {\\n        require(\\n            getPriorVotes(msg.sender, sub256(block.number, 1)) > proposalThreshold,\\n            \\\"PACT::propose: proposer votes below proposal threshold\\\"\\n        );\\n        require(\\n            _targets.length == _values.length &&\\n            _targets.length == _signatures.length &&\\n            _targets.length == _calldatas.length,\\n            \\\"PACT::propose: proposal function information arity mismatch\\\"\\n        );\\n        require(_targets.length != 0, \\\"PACT::propose: must provide actions\\\");\\n        require(_targets.length <= PROPOSAL_MAX_OPERATIONS, \\\"PACT::propose: too many actions\\\");\\n\\n        uint256 _latestProposalId = latestProposalIds[msg.sender];\\n        if (_latestProposalId != 0) {\\n            ProposalState proposersLatestProposalState = state(_latestProposalId);\\n            require(\\n                proposersLatestProposalState != ProposalState.Active,\\n                \\\"PACT::propose: one live proposal per proposer, found an already active proposal\\\"\\n            );\\n            require(\\n                proposersLatestProposalState != ProposalState.Pending,\\n                \\\"PACT::propose: one live proposal per proposer, found an already pending proposal\\\"\\n            );\\n        }\\n\\n        uint256 _startBlock = add256(block.number, votingDelay);\\n        uint256 _endBlock = add256(_startBlock, votingPeriod);\\n\\n        Proposal memory _newProposal = Proposal({\\n        id: proposalCount,\\n        proposer: msg.sender,\\n        eta: 0,\\n        startBlock: _startBlock,\\n        endBlock: _endBlock,\\n        forVotes: 0,\\n        againstVotes: 0,\\n        abstainVotes: 0,\\n        canceled: false,\\n        executed: false\\n        });\\n        proposalCount++;\\n\\n        proposals[_newProposal.id] = _newProposal;\\n        proposalTargets[_newProposal.id] = _targets;\\n        proposalValues[_newProposal.id] = _values;\\n        proposalSignatures[_newProposal.id] = _signatures;\\n        proposalCalldatas[_newProposal.id] = _calldatas;\\n        latestProposalIds[_newProposal.proposer] = _newProposal.id;\\n\\n        emit ProposalCreated(\\n            _newProposal.id,\\n            msg.sender,\\n            _targets,\\n            _values,\\n            _signatures,\\n            _calldatas,\\n            _startBlock,\\n            _endBlock,\\n            _description\\n        );\\n        return _newProposal.id;\\n    }\\n\\n    /**\\n     * @notice Queues a proposal of state succeeded\\n     * @param _proposalId The id of the proposal to queue\\n     */\\n    function queue(uint256 _proposalId) external {\\n        require(\\n            state(_proposalId) == ProposalState.Succeeded,\\n            \\\"PACT::queue: proposal can only be queued if it is succeeded\\\"\\n        );\\n        Proposal storage _proposal = proposals[_proposalId];\\n        uint256 _eta = add256(block.timestamp, timelock.delay());\\n        for (uint256 i = 0; i < proposalTargets[_proposalId].length; i++) {\\n            queueOrRevertInternal(\\n                proposalTargets[_proposalId][i],\\n                proposalValues[_proposalId][i],\\n                proposalSignatures[_proposalId][i],\\n                proposalCalldatas[_proposalId][i],\\n                _eta\\n            );\\n        }\\n        _proposal.eta = _eta;\\n        emit ProposalQueued(_proposalId, _eta);\\n    }\\n\\n    function queueOrRevertInternal(\\n        address _target,\\n        uint256 _value,\\n        string memory _signature,\\n        bytes memory _data,\\n        uint256 _eta\\n    ) internal {\\n        require(\\n            !timelock.queuedTransactions(\\n            keccak256(abi.encode(_target, _value, _signature, _data, _eta))\\n        ),\\n            \\\"PACT::queueOrRevertInternal: identical proposal action already queued at eta\\\"\\n        );\\n        timelock.queueTransaction(_target, _value, _signature, _data, _eta);\\n    }\\n\\n    /**\\n     * @notice Executes a queued proposal if eta has passed\\n     * @param _proposalId The id of the proposal to execute\\n     */\\n    function execute(uint256 _proposalId) external payable {\\n        require(\\n            state(_proposalId) == ProposalState.Queued,\\n            \\\"PACT::execute: proposal can only be executed if it is queued\\\"\\n        );\\n        Proposal storage _proposal = proposals[_proposalId];\\n        _proposal.executed = true;\\n        for (uint256 i = 0; i < proposalTargets[_proposalId].length; i++) {\\n            timelock.executeTransaction{value: proposalValues[_proposalId][i]}(\\n                proposalTargets[_proposalId][i],\\n                proposalValues[_proposalId][i],\\n                proposalSignatures[_proposalId][i],\\n                proposalCalldatas[_proposalId][i],\\n                _proposal.eta\\n            );\\n        }\\n        emit ProposalExecuted(_proposalId);\\n    }\\n\\n    /**\\n     * @notice Cancels a proposal only if sender is the proposer, or proposer delegates dropped below proposal threshold\\n     * @param _proposalId The id of the proposal to cancel\\n     */\\n    function cancel(uint256 _proposalId) external {\\n        require(\\n            state(_proposalId) != ProposalState.Executed,\\n            \\\"PACT::cancel: cannot cancel executed proposal\\\"\\n        );\\n\\n        Proposal storage _proposal = proposals[_proposalId];\\n        require(\\n            msg.sender == _proposal.proposer ||\\n            getPriorVotes(_proposal.proposer, sub256(block.number, 1)) < proposalThreshold,\\n            \\\"PACT::cancel: proposer above threshold\\\"\\n        );\\n\\n        _proposal.canceled = true;\\n        for (uint256 i = 0; i < proposalTargets[_proposalId].length; i++) {\\n            timelock.cancelTransaction(\\n                proposalTargets[_proposalId][i],\\n                proposalValues[_proposalId][i],\\n                proposalSignatures[_proposalId][i],\\n                proposalCalldatas[_proposalId][i],\\n                _proposal.eta\\n            );\\n        }\\n\\n        emit ProposalCanceled(_proposalId);\\n    }\\n\\n    /**\\n     * @notice Gets actions of a proposal.\\n     * @param _proposalId Proposal to query.\\n     * @return targets Target addresses for proposal calls.\\n     * @return values Eth values for proposal calls.\\n     * @return signatures Function signatures for proposal calls.\\n     * @return calldatas Calldatas for proposal calls.\\n     */\\n    function getActions(uint256 _proposalId)\\n    external\\n    view\\n    returns (\\n        address[] memory targets,\\n        uint256[] memory values,\\n        string[] memory signatures,\\n        bytes[] memory calldatas\\n    )\\n    {\\n        return (\\n        proposalTargets[_proposalId],\\n        proposalValues[_proposalId],\\n        proposalSignatures[_proposalId],\\n        proposalCalldatas[_proposalId]\\n        );\\n    }\\n\\n    /**\\n     * @notice Gets the receipt for a voter on a given proposal\\n     * @param _proposalId the id of proposal\\n     * @param _voter The address of the voter\\n     * @return The voting receipt\\n     */\\n    function getReceipt(uint256 _proposalId, address _voter)\\n    external\\n    view\\n    returns (Receipt memory)\\n    {\\n        return proposalReceipts[_proposalId][_voter];\\n    }\\n\\n    /**\\n     * @notice Gets the state of a proposal\\n     * @param _proposalId The id of the proposal\\n     * @return Proposal state\\n     */\\n    function state(uint256 _proposalId) public view returns (ProposalState) {\\n        require(proposalCount > _proposalId, \\\"PACT::state: invalid proposal id\\\");\\n        Proposal storage _proposal = proposals[_proposalId];\\n\\n        if (_proposal.canceled) {\\n            return ProposalState.Canceled;\\n        } else if (block.number <= _proposal.startBlock) {\\n            return ProposalState.Pending;\\n        } else if (block.number <= _proposal.endBlock) {\\n            return ProposalState.Active;\\n        } else if (\\n            _proposal.forVotes <= _proposal.againstVotes || _proposal.forVotes < quorumVotes\\n        ) {\\n            return ProposalState.Defeated;\\n        } else if (_proposal.eta == 0) {\\n            return ProposalState.Succeeded;\\n        } else if (_proposal.executed) {\\n            return ProposalState.Executed;\\n        } else if (block.timestamp >= add256(_proposal.eta, timelock.GRACE_PERIOD())) {\\n            return ProposalState.Expired;\\n        } else {\\n            return ProposalState.Queued;\\n        }\\n    }\\n\\n    /**\\n     * @notice Cast a vote for a proposal\\n     * @param _proposalId The id of the proposal to vote on\\n     * @param _support The support value for the vote. 0=against, 1=for, 2=abstain\\n     */\\n    function castVote(uint256 _proposalId, uint8 _support) external {\\n        emit VoteCast(\\n            msg.sender,\\n            _proposalId,\\n            _support,\\n            castVoteInternal(msg.sender, _proposalId, _support),\\n            \\\"\\\"\\n        );\\n    }\\n\\n    /**\\n     * @notice Cast a vote for a proposal with a reason\\n     * @param _proposalId The id of the proposal to vote on\\n     * @param _support The support value for the vote. 0=against, 1=for, 2=abstain\\n     * @param _reason The reason given for the vote by the voter\\n     */\\n    function castVoteWithReason(\\n        uint256 _proposalId,\\n        uint8 _support,\\n        string calldata _reason\\n    ) external {\\n        emit VoteCast(\\n            msg.sender,\\n            _proposalId,\\n            _support,\\n            castVoteInternal(msg.sender, _proposalId, _support),\\n            _reason\\n        );\\n    }\\n\\n    /**\\n     * @notice Cast a vote for a proposal by signature\\n     * @dev External function that accepts EIP-712 signatures for voting on proposals.\\n     */\\n    function castVoteBySig(\\n        uint256 _proposalId,\\n        uint8 _support,\\n        uint8 _v,\\n        bytes32 _r,\\n        bytes32 _s\\n    ) external {\\n        require(_v == 27 || _v == 28, \\\"PACT::castVoteBySig: invalid v value\\\");\\n        require(\\n            _s < 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A1,\\n            \\\"PACT::castVoteBySig: invalid s value\\\"\\n        );\\n        bytes32 _domainSeparator = keccak256(\\n            abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(NAME)), getChainIdInternal(), address(this))\\n        );\\n        bytes32 _structHash = keccak256(abi.encode(BALLOT_TYPEHASH, _proposalId, _support));\\n        bytes32 _digest = keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", _domainSeparator, _structHash));\\n        address _signatory = ecrecover(_digest, _v, _r, _s);\\n        require(_signatory != address(0), \\\"PACT::castVoteBySig: invalid signature\\\");\\n        emit VoteCast(\\n            _signatory,\\n            _proposalId,\\n            _support,\\n            castVoteInternal(_signatory, _proposalId, _support),\\n            \\\"\\\"\\n        );\\n    }\\n\\n    /**\\n     * @notice Internal function that caries out voting logic\\n     * @param _voter The voter that is casting their vote\\n     * @param _proposalId The id of the proposal to vote on\\n     * @param _support The support value for the vote. 0=against, 1=for, 2=abstain\\n     * @return The number of votes cast\\n     */\\n    function castVoteInternal(\\n        address _voter,\\n        uint256 _proposalId,\\n        uint8 _support\\n    ) internal returns (uint96) {\\n        require(\\n            state(_proposalId) == ProposalState.Active,\\n            \\\"PACT::castVoteInternal: voting is closed\\\"\\n        );\\n        require(_support <= 2, \\\"PACT::castVoteInternal: invalid vote type\\\");\\n        Proposal storage _proposal = proposals[_proposalId];\\n        Receipt storage _receipt = proposalReceipts[_proposalId][_voter];\\n        require(_receipt.hasVoted == false, \\\"PACT::castVoteInternal: voter already voted\\\");\\n        uint96 _votes = getPriorVotes(_voter, _proposal.startBlock);\\n\\n        if (_support == 0) {\\n            _proposal.againstVotes = add256(_proposal.againstVotes, _votes);\\n        } else if (_support == 1) {\\n            _proposal.forVotes = add256(_proposal.forVotes, _votes);\\n        } else if (_support == 2) {\\n            _proposal.abstainVotes = add256(_proposal.abstainVotes, _votes);\\n        }\\n\\n        _receipt.hasVoted = true;\\n        _receipt.support = _support;\\n        _receipt.votes = _votes;\\n\\n        return _votes;\\n    }\\n\\n    /**\\n     * @notice Owner function for setting the voting delay\\n     * @param _newVotingDelay new voting delay, in blocks\\n     */\\n    function _setVotingDelay(uint256 _newVotingDelay) external virtual onlyOwner {\\n        require(\\n            _newVotingDelay >= MIN_VOTING_DELAY && _newVotingDelay <= MAX_VOTING_DELAY,\\n            \\\"PACT::_setVotingDelay: invalid voting delay\\\"\\n        );\\n        uint256 _oldVotingDelay = votingDelay;\\n        votingDelay = _newVotingDelay;\\n\\n        emit VotingDelaySet(_oldVotingDelay, _newVotingDelay);\\n    }\\n\\n    /**\\n     * @notice Owner function for setting the quorum votes\\n     * @param _newQuorumVotes new quorum votes\\n     */\\n    function _setQuorumVotes(uint256 _newQuorumVotes) external onlyOwner {\\n        require(\\n            _newQuorumVotes >= proposalThreshold,\\n            \\\"PACT::_setQuorumVotes: invalid quorum votes\\\"\\n        );\\n\\n        uint256 _oldQuorumVotes = votingDelay;\\n        quorumVotes = _newQuorumVotes;\\n\\n        emit QuorumVotesSet(_oldQuorumVotes, _newQuorumVotes);\\n    }\\n\\n    /**\\n     * @notice Owner function for setting the voting period\\n     * @param _newVotingPeriod new voting period, in blocks\\n     */\\n    function _setVotingPeriod(uint256 _newVotingPeriod) external virtual onlyOwner {\\n        require(\\n            _newVotingPeriod >= MIN_VOTING_PERIOD && _newVotingPeriod <= MAX_VOTING_PERIOD,\\n            \\\"PACT::_setVotingPeriod: invalid voting period\\\"\\n        );\\n        uint256 _oldVotingPeriod = votingPeriod;\\n        votingPeriod = _newVotingPeriod;\\n\\n        emit VotingPeriodSet(_oldVotingPeriod, _newVotingPeriod);\\n    }\\n\\n    /**\\n     * @notice Owner function for setting the proposal threshold\\n     * @dev _newProposalThreshold must be greater than the hardcoded min\\n     * @param _newProposalThreshold new proposal threshold\\n     */\\n    function _setProposalThreshold(uint256 _newProposalThreshold) external onlyOwner {\\n        require(\\n            _newProposalThreshold >= MIN_PROPOSAL_THRESHOLD &&\\n            _newProposalThreshold <= MAX_PROPOSAL_THRESHOLD,\\n            \\\"PACT::_setProposalThreshold: invalid proposal threshold\\\"\\n        );\\n        uint256 _oldProposalThreshold = proposalThreshold;\\n        proposalThreshold = _newProposalThreshold;\\n\\n        emit ProposalThresholdSet(_oldProposalThreshold, _newProposalThreshold);\\n    }\\n\\n    /**\\n     * @notice Transfers an amount of an ERC20 from this contract to an address\\n     *\\n     * @param _token address of the ERC20 token\\n     * @param _to address of the receiver\\n     * @param _amount amount of the transaction\\n     */\\n    function transfer(\\n        IERC20 _token,\\n        address _to,\\n        uint256 _amount\\n    ) external onlyOwner nonReentrant {\\n        _token.safeTransfer(_to, _amount);\\n\\n        emit TransferERC20(address(_token), _to, _amount);\\n    }\\n\\n    function add256(uint256 _a, uint256 _b) internal pure returns (uint256) {\\n        uint256 _c = _a + _b;\\n        require(_c >= _a, \\\"addition overflow\\\");\\n        return _c;\\n    }\\n\\n    function sub256(uint256 _a, uint256 _b) internal pure returns (uint256) {\\n        require(_b <= _a, \\\"subtraction underflow\\\");\\n        return _a - _b;\\n    }\\n\\n    function getChainIdInternal() internal view returns (uint256) {\\n        uint256 _chainId;\\n        assembly {\\n            _chainId := chainid()\\n        }\\n        return _chainId;\\n    }\\n\\n    function getPriorVotes(address _voter, uint256 _beforeBlock) internal view returns (uint96) {\\n        if (address(releaseToken) == address(0)) {\\n            return token.getPriorVotes(_voter, _beforeBlock);\\n        }\\n        return\\n        add96(\\n            token.getPriorVotes(_voter, _beforeBlock),\\n            releaseToken.getPriorVotes(_voter, _beforeBlock),\\n            \\\"getPriorVotes overflow\\\"\\n        );\\n    }\\n\\n    function add96(\\n        uint96 _a,\\n        uint96 _b,\\n        string memory _errorMessage\\n    ) internal pure returns (uint96) {\\n        uint96 _c = _a + _b;\\n        require(_c >= _a, _errorMessage);\\n        return _c;\\n    }\\n}\\n\",\"keccak256\":\"0x661f52e7335c241d7f9cfa05f333e087a2098c6ff785eba04078bbda89e39595\",\"license\":\"Apache-2.0\"},\"contracts/governor/interfaces/PACTDelegateStorageV1.sol\":{\"content\":\"//SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.4;\\n\\nimport \\\"@ubeswap/governance/contracts/interfaces/IHasVotes.sol\\\";\\nimport \\\"./TimelockInterface.sol\\\";\\n\\n/**\\n * @title Storage for Governor Delegate\\n * @notice For future upgrades, do not change PACTDelegateStorageV1. Create a new\\n * contract which implements PACTDelegateStorageV1 and following the naming convention\\n * PACTDelegateStorageVX.\\n */\\ncontract PACTDelegateStorageV1 {\\n    /// @notice The delay before voting on a proposal may take place, once proposed, in blocks\\n    uint256 public votingDelay;\\n\\n    /// @notice The duration of voting on a proposal, in blocks\\n    uint256 public votingPeriod;\\n\\n    /// @notice The number of votes required in order for a voter to become a proposer\\n    uint256 public proposalThreshold;\\n\\n    /// @notice The total number of proposals\\n    uint256 public proposalCount;\\n\\n    /// @notice The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed\\n    uint256 public quorumVotes;\\n\\n    /// @notice The address of the Governance Timelock\\n    TimelockInterface public timelock;\\n\\n    /// @notice The address of the governance token\\n    IHasVotes public token;\\n\\n    /// @notice The address of the \\\"Release\\\" governance token\\n    IHasVotes public releaseToken;\\n\\n    /// @notice The official record of all proposals ever proposed\\n    mapping(uint256 => Proposal) public proposals;\\n    /// @notice The official each proposal's targets:\\n    /// An ordered list of target addresses for calls to be made\\n    mapping(uint256 => address[]) public proposalTargets;\\n    /// @notice The official each proposal's values:\\n    /// An ordered list of values (i.e. msg.value) to be passed to the calls to be made\\n    mapping(uint256 => uint256[]) public proposalValues;\\n    /// @notice The official each proposal's signatures:\\n    /// An ordered list of function signatures to be called\\n    mapping(uint256 => string[]) public proposalSignatures;\\n    /// @notice The official each proposal's calldatas:\\n    /// An ordered list of calldata to be passed to each call\\n    mapping(uint256 => bytes[]) public proposalCalldatas;\\n    /// @notice The official each proposal's receipts:\\n    /// Receipts of ballots for the entire set of voters\\n    mapping(uint256 => mapping(address => Receipt)) public proposalReceipts;\\n\\n    /// @notice The latest proposal for each proposer\\n    mapping(address => uint256) public latestProposalIds;\\n\\n    struct Proposal {\\n        // Unique id for looking up a proposal\\n        uint256 id;\\n        // Creator of the proposal\\n        address proposer;\\n        // The timestamp that the proposal will be available for execution, set once the vote succeeds\\n        uint256 eta;\\n        // The block at which voting begins: holders must delegate their votes prior to this block\\n        uint256 startBlock;\\n        // The block at which voting ends: votes must be cast prior to this block\\n        uint256 endBlock;\\n        // Current number of votes in favor of this proposal\\n        uint256 forVotes;\\n        // Current number of votes in opposition to this proposal\\n        uint256 againstVotes;\\n        // Current number of votes for abstaining for this proposal\\n        uint256 abstainVotes;\\n        // Flag marking whether the proposal has been canceled\\n        bool canceled;\\n        // Flag marking whether the proposal has been executed\\n        bool executed;\\n    }\\n\\n    /// @notice Ballot receipt record for a voter\\n    struct Receipt {\\n        // Whether or not a vote has been cast\\n        bool hasVoted;\\n        // Whether or not the voter supports the proposal or abstains\\n        uint8 support;\\n        // The number of votes the voter had, which were cast\\n        uint96 votes;\\n    }\\n\\n    /// @notice Possible states that a proposal may be in\\n    enum ProposalState {\\n        Pending,\\n        Active,\\n        Canceled,\\n        Defeated,\\n        Succeeded,\\n        Queued,\\n        Expired,\\n        Executed\\n    }\\n}\\n\",\"keccak256\":\"0xb6f26f069d3e5b0cad40cbbe8f3887085f14280df5145a1f5934eb5a2bb7871c\",\"license\":\"Apache-2.0\"},\"contracts/governor/interfaces/PACTEvents.sol\":{\"content\":\"//SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.4;\\n\\ncontract PACTEvents {\\n    /// @notice An event emitted when a new proposal is created\\n    event ProposalCreated(\\n        uint256 id,\\n        address proposer,\\n        address[] targets,\\n        uint256[] values,\\n        string[] signatures,\\n        bytes[] calldatas,\\n        uint256 startBlock,\\n        uint256 endBlock,\\n        string description\\n    );\\n\\n    /// @notice An event emitted when a vote has been cast on a proposal\\n    /// @param voter The address which casted a vote\\n    /// @param proposalId The proposal id which was voted on\\n    /// @param support Support value for the vote. 0=against, 1=for, 2=abstain\\n    /// @param votes Number of votes which were cast by the voter\\n    /// @param reason The reason given for the vote by the voter\\n    event VoteCast(address indexed voter, uint256 proposalId, uint8 support, uint256 votes, string reason);\\n\\n    /// @notice An event emitted when a proposal has been canceled\\n    event ProposalCanceled(uint256 id);\\n\\n    /// @notice An event emitted when a proposal has been queued in the Timelock\\n    event ProposalQueued(uint256 id, uint256 eta);\\n\\n    /// @notice An event emitted when a proposal has been executed in the Timelock\\n    event ProposalExecuted(uint256 id);\\n\\n    /// @notice An event emitted when the voting delay is set\\n    event VotingDelaySet(uint256 oldVotingDelay, uint256 newVotingDelay);\\n\\n    /// @notice An event emitted when the voting period is set\\n    event VotingPeriodSet(uint256 oldVotingPeriod, uint256 newVotingPeriod);\\n\\n    /// @notice Emitted when implementation is changed\\n    event NewImplementation(address oldImplementation, address newImplementation);\\n\\n    /// @notice Emitted when proposal threshold is set\\n    event ProposalThresholdSet(uint256 oldProposalThreshold, uint256 newProposalThreshold);\\n\\n    /// @notice An event emitted when the quorum votes is set\\n    event QuorumVotesSet(uint256 oldQuorumVotes, uint256 newQuorumVotes);\\n\\n    /// @notice Emitted when pendingAdmin is changed\\n    event NewPendingAdmin(address oldPendingAdmin, address newPendingAdmin);\\n\\n    /// @notice Emitted when pendingAdmin is accepted, which means admin is updated\\n    event NewAdmin(address oldAdmin, address newAdmin);\\n\\n    /**\\n     * @notice Triggered when an amount of an ERC20 has been transferred from this contract to an address\\n     *\\n     * @param token               ERC20 token address\\n     * @param to                  Address of the receiver\\n     * @param amount              Amount of the transaction\\n     */\\n    event TransferERC20(address indexed token, address indexed to, uint256 amount);\\n}\\n\",\"keccak256\":\"0x13a82a2452eb0c1264c747ac34b3b00eb1fd3edffd87e4057bfba94a98bfedc4\",\"license\":\"Apache-2.0\"},\"contracts/governor/interfaces/TimelockInterface.sol\":{\"content\":\"//SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.4;\\n\\ninterface TimelockInterface {\\n  function admin() external view returns (address);\\n\\n  function delay() external view returns (uint256);\\n\\n  function GRACE_PERIOD() external view returns (uint256);\\n\\n  function acceptAdmin() external;\\n\\n  function queuedTransactions(bytes32 _hash) external view returns (bool);\\n\\n  function queueTransaction(\\n    address target,\\n    uint256 value,\\n    string calldata signature,\\n    bytes calldata data,\\n    uint256 eta\\n  ) external returns (bytes32);\\n\\n  function cancelTransaction(\\n    address _target,\\n    uint256 _value,\\n    string calldata _signature,\\n    bytes calldata _data,\\n    uint256 _eta\\n  ) external;\\n\\n  function executeTransaction(\\n    address _target,\\n    uint256 _value,\\n    string calldata _signature,\\n    bytes calldata _data,\\n    uint256 _eta\\n  ) external payable returns (bytes memory);\\n}\\n\",\"keccak256\":\"0xdf2d16364d93d6cbfeef0b981a1062603ea978d47d66eb7c67827b040727273a\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106102675760003560e01c80637b3c71d311610144578063d33219b4116100b6578063e23a9a521161007a578063e23a9a521461086d578063e48083fe146108bd578063ec715a31146108d2578063f2fde38b146108f2578063fc0c546a14610912578063fe0d94c11461093257600080fd5b8063d33219b4146107c3578063da35c664146107e3578063da95691a146107f9578063ddf0b00914610819578063deaaa7cc1461083957600080fd5b8063a4a53a1311610108578063a4a53a131461071f578063a64e024a1461073f578063ac67466414610756578063b112626314610776578063b58131b01461078d578063beabacc8146107a357600080fd5b80637b3c71d31461065d57806386d37e8b1461067d578063878b608d1461069d5780638da5cb5b146106bd578063a3f4df7e146106ef57600080fd5b8063328dd982116101dd57806340e58ee5116101a157806340e58ee51461053e5780634e42b06d1461055e578063567813881461058b57806366176743146105ab578063715018a614610629578063791f5d231461063e57600080fd5b8063328dd9821461049657806336e7048a146104c65780633932abb1146104db5780633bccf4fd146104f15780633e4f49e61461051157600080fd5b80631dfb1b5a1161022f5780631dfb1b5a146103d657806320606b70146103f6578063215809ca1461042a57806324bc1a641461044057806325fd935a146104565780632b4656c81461047657600080fd5b8063013cf08b1461026c57806302a251a3146103435780630ea2d98c1461036757806317977c611461038957806317ba1b8b146103b6575b600080fd5b34801561027857600080fd5b506102e8610287366004613fd2565b609f6020526000908152604090208054600182015460028301546003840154600485015460058601546006870154600788015460089098015496976001600160a01b0390961696949593949293919290919060ff808216916101009004168a565b604080519a8b526001600160a01b0390991660208b0152978901969096526060880194909452608087019290925260a086015260c085015260e084015215156101008301521515610120820152610140015b60405180910390f35b34801561034f57600080fd5b5061035960985481565b60405190815260200161033a565b34801561037357600080fd5b50610387610382366004613fd2565b610945565b005b34801561039557600080fd5b506103596103a4366004613d76565b60a56020526000908152604090205481565b3480156103c257600080fd5b506103876103d1366004613fd2565b610a35565b3480156103e257600080fd5b506103876103f1366004613fd2565b610b36565b34801561040257600080fd5b506103597f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b34801561043657600080fd5b506103596102d081565b34801561044c57600080fd5b50610359609b5481565b34801561046257600080fd5b506103596b019d971e4fe8401e7400000081565b34801561048257600080fd5b50610387610491366004613dae565b610c12565b3480156104a257600080fd5b506104b66104b1366004613fd2565b61117b565b60405161033a9493929190614405565b3480156104d257600080fd5b50610359600a81565b3480156104e757600080fd5b5061035960975481565b3480156104fd57600080fd5b5061038761050c3660046140e7565b61140c565b34801561051d57600080fd5b5061053161052c366004613fd2565b611755565b60405161033a9190614465565b34801561054a57600080fd5b50610387610559366004613fd2565b6118f2565b34801561056a57600080fd5b5061057e610579366004614019565b611c04565b60405161033a9190614452565b34801561059757600080fd5b506103876105a636600461403a565b611cbd565b3480156105b757600080fd5b506106016105c6366004613fea565b60a460209081526000928352604080842090915290825290205460ff808216916101008104909116906201000090046001600160601b031683565b60408051931515845260ff90921660208401526001600160601b03169082015260600161033a565b34801561063557600080fd5b50610387611d28565b34801561064a57600080fd5b506103596a52b7d2dcc80cd2e400000081565b34801561066957600080fd5b50610387610678366004614065565b611d5e565b34801561068957600080fd5b50610387610698366004613fd2565b611dae565b3480156106a957600080fd5b506103596106b8366004614019565b611e7c565b3480156106c957600080fd5b506033546001600160a01b03165b6040516001600160a01b03909116815260200161033a565b3480156106fb57600080fd5b5061057e60405180604001604052806004815260200163141050d560e21b81525081565b34801561072b57600080fd5b5061057e61073a366004614019565b611ead565b34801561074b57600080fd5b506103596203b10081565b34801561076257600080fd5b506106d7610771366004614019565b611ec9565b34801561078257600080fd5b506103596201d88081565b34801561079957600080fd5b5061035960995481565b3480156107af57600080fd5b506103876107be366004613f92565b611f01565b3480156107cf57600080fd5b50609c546106d7906001600160a01b031681565b3480156107ef57600080fd5b50610359609a5481565b34801561080557600080fd5b50610359610814366004613e1b565b611fee565b34801561082557600080fd5b50610387610834366004613fd2565b61256f565b34801561084557600080fd5b506103597f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f81565b34801561087957600080fd5b5061088d610888366004613fea565b6128ec565b6040805182511515815260208084015160ff1690820152918101516001600160601b03169082015260600161033a565b3480156108c957600080fd5b50610359600181565b3480156108de57600080fd5b50609e546106d7906001600160a01b031681565b3480156108fe57600080fd5b5061038761090d366004613d76565b612961565b34801561091e57600080fd5b50609d546106d7906001600160a01b031681565b610387610940366004613fd2565b6129fc565b6033546001600160a01b031633146109785760405162461bcd60e51b815260040161096f906144db565b60405180910390fd5b6102d0811015801561098d57506203b1008111155b6109ef5760405162461bcd60e51b815260206004820152602d60248201527f504143543a3a5f736574566f74696e67506572696f643a20696e76616c69642060448201526c1d9bdd1a5b99c81c195c9a5bd9609a1b606482015260840161096f565b609880549082905560408051828152602081018490527f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e882891015b60405180910390a15050565b6033546001600160a01b03163314610a5f5760405162461bcd60e51b815260040161096f906144db565b6a52b7d2dcc80cd2e40000008110158015610a8657506b019d971e4fe8401e740000008111155b610af85760405162461bcd60e51b815260206004820152603760248201527f504143543a3a5f73657450726f706f73616c5468726573686f6c643a20696e7660448201527f616c69642070726f706f73616c207468726573686f6c64000000000000000000606482015260840161096f565b609980549082905560408051828152602081018490527fccb45da8d5717e6c4544694297c4ba5cf151d455c9bb0ed4fc7a38411bc054619101610a29565b6033546001600160a01b03163314610b605760405162461bcd60e51b815260040161096f906144db565b60018110158015610b7457506201d8808111155b610bd45760405162461bcd60e51b815260206004820152602b60248201527f504143543a3a5f736574566f74696e6744656c61793a20696e76616c6964207660448201526a6f74696e672064656c617960a81b606482015260840161096f565b609780549082905560408051828152602081018490527fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a939101610a29565b600054610100900460ff1680610c2b575060005460ff16155b610c475760405162461bcd60e51b815260040161096f9061448d565b600054610100900460ff16158015610c69576000805461ffff19166101011790555b306001600160a01b0316886001600160a01b031663f851a4406040518163ffffffff1660e01b815260040160206040518083038186803b158015610cac57600080fd5b505afa158015610cc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce49190613d92565b6001600160a01b031614610d0a5760405162461bcd60e51b815260040161096f90614510565b6102d08510158015610d1f57506203b1008511155b610d7b5760405162461bcd60e51b815260206004820152602760248201527f504143543a3a696e697469616c697a653a20696e76616c696420766f74696e67604482015266081c195c9a5bd960ca1b606482015260840161096f565b60018410158015610d8f57506201d8808411155b610dea5760405162461bcd60e51b815260206004820152602660248201527f504143543a3a696e697469616c697a653a20696e76616c696420766f74696e676044820152652064656c617960d01b606482015260840161096f565b6a52b7d2dcc80cd2e40000008310158015610e1157506b019d971e4fe8401e740000008311155b610e725760405162461bcd60e51b815260206004820152602c60248201527f504143543a3a696e697469616c697a653a20696e76616c69642070726f706f7360448201526b185b081d1a1c995cda1bdb1960a21b606482015260840161096f565b82821015610ed15760405162461bcd60e51b815260206004820152602660248201527f504143543a3a696e697469616c697a653a20696e76616c69642071756f72756d60448201526520766f74657360d01b606482015260840161096f565b609c80546001600160a01b0319166001600160a01b038a16908117909155604080516303e1469160e61b8152905130929163f851a440916004808301926020929190829003018186803b158015610f2757600080fd5b505afa158015610f3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5f9190613d92565b6001600160a01b031614610f855760405162461bcd60e51b815260040161096f90614510565b610f8d612cda565b610f95612d55565b609d80546001600160a01b03808a166001600160a01b031992831617909255609e805492891692909116919091179055609885905560978490556099839055609b8290556040805161014081018252609a80548083523060208401526000938301849052606083018490526080830184905260a0830184905260c0830184905260e083018490526001610100840152610120830184905291926110378361486f565b909155505080516000908152609f602090815260408083208451808255838601516001830180546001600160a01b0319166001600160a01b039092169182179055838701516002840155606087015160038401556080870151600484015560a080880151600585015560c0880151600685015560e0880151600785015561010080890151600890950180546101208b015161ffff1990911696151561ff0019169690961795151590910294909417909355855260a584528285205584518085529083528184208551855260a184528285208651865260a285528386208751875260a390955283862093517f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e0966111569694953095929091908190614606565b60405180910390a1508015611171576000805461ff00191690555b5050505050505050565b600081815260a06020908152604080832060a1835281842060a2845282852060a385529483902082548451818702810187019095528085526060968796879687969594929390918691908301828280156111fe57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116111e0575b505050505093508280548060200260200160405190810160405280929190818152602001828054801561125057602002820191906000526020600020905b81548152602001906001019080831161123c575b5050505050925081805480602002602001604051908101604052809291908181526020016000905b828210156113245783829060005260206000200180546112979061483a565b80601f01602080910402602001604051908101604052809291908181526020018280546112c39061483a565b80156113105780601f106112e557610100808354040283529160200191611310565b820191906000526020600020905b8154815290600101906020018083116112f357829003601f168201915b505050505081526020019060010190611278565b50505050915080805480602002602001604051908101604052809291908181526020016000905b828210156113f757838290600052602060002001805461136a9061483a565b80601f01602080910402602001604051908101604052809291908181526020018280546113969061483a565b80156113e35780601f106113b8576101008083540402835291602001916113e3565b820191906000526020600020905b8154815290600101906020018083116113c657829003601f168201915b50505050508152602001906001019061134b565b50505050905093509350935093509193509193565b8260ff16601b148061142157508260ff16601c145b6114795760405162461bcd60e51b8152602060048201526024808201527f504143543a3a63617374566f746542795369673a20696e76616c696420762076604482015263616c756560e01b606482015260840161096f565b7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a181106114f45760405162461bcd60e51b8152602060048201526024808201527f504143543a3a63617374566f746542795369673a20696e76616c696420732076604482015263616c756560e01b606482015260840161096f565b6040805180820182526004815263141050d560e21b60209182015281517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866818301527f632da7bd42fd0a56ea94358769cdb5b6fb8d747d823a41e491529533c26abea581840152466060820152306080808301919091528351808303909101815260a0820184528051908301207f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f60c083015260e0820189905260ff8816610100808401919091528451808403909101815261012083019094528351939092019290922061190160f01b6101408401526101428301829052610162830181905290916000906101820160408051601f198184030181528282528051602091820120600080855291840180845281905260ff8a169284019290925260608301889052608083018790529092509060019060a0016020604051602081039080840390855afa158015611668573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166116da5760405162461bcd60e51b815260206004820152602660248201527f504143543a3a63617374566f746542795369673a20696e76616c6964207369676044820152656e617475726560d01b606482015260840161096f565b806001600160a01b03167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda48a8a611712858e8e612db4565b6040805193845260ff90921660208401526001600160601b03169082015260806060820181905260009082015260a00160405180910390a2505050505050505050565b600081609a54116117a85760405162461bcd60e51b815260206004820181905260248201527f504143543a3a73746174653a20696e76616c69642070726f706f73616c206964604482015260640161096f565b6000828152609f60205260409020600881015460ff16156117cc5750600292915050565b806003015443116117e05750600092915050565b806004015443116117f45750600192915050565b806006015481600501541115806118105750609b548160050154105b1561181e5750600392915050565b60028101546118305750600492915050565b6008810154610100900460ff161561184b5750600792915050565b6002810154609c54604080516360d143f160e11b815290516118d493926001600160a01b03169163c1a287e2916004808301926020929190829003018186803b15801561189757600080fd5b505afa1580156118ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118cf9190613f07565b613009565b42106118e35750600692915050565b50600592915050565b50919050565b60076118fd82611755565b600781111561191c57634e487b7160e01b600052602160045260246000fd5b14156119805760405162461bcd60e51b815260206004820152602d60248201527f504143543a3a63616e63656c3a2063616e6e6f742063616e63656c206578656360448201526c1d5d1959081c1c9bdc1bdcd85b609a1b606482015260840161096f565b6000818152609f6020526040902060018101546001600160a01b03163314806119d857506099546001808301546119cd916001600160a01b03909116906119c890439061305c565b6130b0565b6001600160601b0316105b611a335760405162461bcd60e51b815260206004820152602660248201527f504143543a3a63616e63656c3a2070726f706f7365722061626f766520746872604482015265195cda1bdb1960d21b606482015260840161096f565b60088101805460ff1916600117905560005b600083815260a06020526040902054811015611bd357609c54600084815260a06020526040902080546001600160a01b039092169163591fcdfe919084908110611a9f57634e487b7160e01b600052603260045260246000fd5b600091825260208083209091015487835260a1909152604090912080546001600160a01b039092169185908110611ae657634e487b7160e01b600052603260045260246000fd5b906000526020600020015460a260008881526020019081526020016000208581548110611b2357634e487b7160e01b600052603260045260246000fd5b9060005260206000200160a360008981526020019081526020016000208681548110611b5f57634e487b7160e01b600052603260045260246000fd5b9060005260206000200187600201546040518663ffffffff1660e01b8152600401611b8e9594939291906143cc565b600060405180830381600087803b158015611ba857600080fd5b505af1158015611bbc573d6000803e3d6000fd5b505050508080611bcb9061486f565b915050611a45565b506040518281527f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c90602001610a29565b60a36020528160005260406000208181548110611c2057600080fd5b90600052602060002001600091509150508054611c3c9061483a565b80601f0160208091040260200160405190810160405280929190818152602001828054611c689061483a565b8015611cb55780601f10611c8a57610100808354040283529160200191611cb5565b820191906000526020600020905b815481529060010190602001808311611c9857829003601f168201915b505050505081565b337fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda48383611cec848383612db4565b6040805193845260ff90921660208401526001600160601b03169082015260806060820181905260009082015260a00160405180910390a25050565b6033546001600160a01b03163314611d525760405162461bcd60e51b815260040161096f906144db565b611d5c600061328c565b565b337fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda48585611d8d848383612db4565b8686604051611da09594939291906146e3565b60405180910390a250505050565b6033546001600160a01b03163314611dd85760405162461bcd60e51b815260040161096f906144db565b609954811015611e3e5760405162461bcd60e51b815260206004820152602b60248201527f504143543a3a5f73657451756f72756d566f7465733a20696e76616c6964207160448201526a756f72756d20766f74657360a81b606482015260840161096f565b609754609b82905560408051828152602081018490527fffff0a251408cb8f05a4fc2ab0bdffe28e1519cb8ee5bdb6531e5d6ca51aaf759101610a29565b60a16020528160005260406000208181548110611e9857600080fd5b90600052602060002001600091509150505481565b60a26020528160005260406000208181548110611c2057600080fd5b60a06020528160005260406000208181548110611ee557600080fd5b6000918252602090912001546001600160a01b03169150829050565b6033546001600160a01b03163314611f2b5760405162461bcd60e51b815260040161096f906144db565b60026065541415611f7e5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161096f565b6002606555611f976001600160a01b03841683836132de565b816001600160a01b0316836001600160a01b03167f9b035625e569d1d2bf54830a290aefba7ab11610ba8490871dc62b86b63a895683604051611fdc91815260200190565b60405180910390a35050600160655550565b6000609954612002336119c843600161305c565b6001600160601b0316116120775760405162461bcd60e51b815260206004820152603660248201527f504143543a3a70726f706f73653a2070726f706f73657220766f7465732062656044820152751b1bddc81c1c9bdc1bdcd85b081d1a1c995cda1bdb1960521b606482015260840161096f565b84518651148015612089575083518651145b8015612096575082518651145b6121085760405162461bcd60e51b815260206004820152603b60248201527f504143543a3a70726f706f73653a2070726f706f73616c2066756e6374696f6e60448201527f20696e666f726d6174696f6e206172697479206d69736d617463680000000000606482015260840161096f565b85516121625760405162461bcd60e51b815260206004820152602360248201527f504143543a3a70726f706f73653a206d7573742070726f7669646520616374696044820152626f6e7360e81b606482015260840161096f565b600a865111156121b45760405162461bcd60e51b815260206004820152601f60248201527f504143543a3a70726f706f73653a20746f6f206d616e7920616374696f6e7300604482015260640161096f565b33600090815260a5602052604090205480156123365760006121d582611755565b905060018160078111156121f957634e487b7160e01b600052602160045260246000fd5b14156122855760405162461bcd60e51b815260206004820152604f60248201527f504143543a3a70726f706f73653a206f6e65206c6976652070726f706f73616c60448201527f207065722070726f706f7365722c20666f756e6420616e20616c72656164792060648201526e1858dd1a5d99481c1c9bdc1bdcd85b608a1b608482015260a40161096f565b60008160078111156122a757634e487b7160e01b600052602160045260246000fd5b14156123345760405162461bcd60e51b815260206004820152605060248201527f504143543a3a70726f706f73653a206f6e65206c6976652070726f706f73616c60448201527f207065722070726f706f7365722c20666f756e6420616e20616c72656164792060648201526f1c195b991a5b99c81c1c9bdc1bdcd85b60821b608482015260a40161096f565b505b600061234443609754613009565b9050600061235482609854613009565b6040805161014081018252609a80548083523360208401526000938301849052606083018790526080830185905260a0830184905260c0830184905260e08301849052610100830184905261012083018490529394509092916123b68361486f565b909155505080516000908152609f602090815260408083208451808255838601516001830180546001600160a01b0319166001600160a01b03909216919091179055828601516002830155606086015160038301556080860151600483015560a080870151600584015560c0870151600684015560e0870151600784015561010080880151600890940180546101208a015161ffff1990911695151561ff0019169590951794151590910293909317909255845282529091208b5161247d928d01906138d2565b508051600090815260a1602090815260409091208a5161249f928c0190613937565b508051600090815260a26020908152604090912089516124c1928b0190613972565b508051600090815260a36020908152604090912088516124e3928a01906139cb565b50806000015160a5600083602001516001600160a01b03166001600160a01b03168152602001908152602001600020819055507f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e08160000151338c8c8c8c89898e6040516125599998979695949392919061456e565b60405180910390a1519998505050505050505050565b600461257a82611755565b600781111561259957634e487b7160e01b600052602160045260246000fd5b1461260c5760405162461bcd60e51b815260206004820152603b60248201527f504143543a3a71756575653a2070726f706f73616c2063616e206f6e6c79206260448201527f6520717565756564206966206974206973207375636365656465640000000000606482015260840161096f565b6000818152609f60209081526040808320609c548251630d48571f60e31b815292519194936126669342936001600160a01b0390931692636a42b8f892600480840193919291829003018186803b15801561189757600080fd5b905060005b600084815260a060205260409020548110156128a657600084815260a06020526040902080546128949190839081106126b457634e487b7160e01b600052603260045260246000fd5b600091825260208083209091015487835260a1909152604090912080546001600160a01b0390921691849081106126fb57634e487b7160e01b600052603260045260246000fd5b906000526020600020015460a26000888152602001908152602001600020848154811061273857634e487b7160e01b600052603260045260246000fd5b90600052602060002001805461274d9061483a565b80601f01602080910402602001604051908101604052809291908181526020018280546127799061483a565b80156127c65780601f1061279b576101008083540402835291602001916127c6565b820191906000526020600020905b8154815290600101906020018083116127a957829003601f168201915b50505060008a815260a360205260409020805490925087915081106127fb57634e487b7160e01b600052603260045260246000fd5b9060005260206000200180546128109061483a565b80601f016020809104026020016040519081016040528092919081815260200182805461283c9061483a565b80156128895780601f1061285e57610100808354040283529160200191612889565b820191906000526020600020905b81548152906001019060200180831161286c57829003601f168201915b505050505086613335565b8061289e8161486f565b91505061266b565b506002820181905560408051848152602081018390527f9a2e42fd6722813d69113e7d0079d3d940171428df7373df9c7f7617cfda2892910160405180910390a1505050565b60408051606080820183526000808352602080840182905292840181905285815260a483528381206001600160a01b03861682528352839020835191820184525460ff8082161515835261010082041692820192909252620100009091046001600160601b0316918101919091525b92915050565b6033546001600160a01b0316331461298b5760405162461bcd60e51b815260040161096f906144db565b6001600160a01b0381166129f05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161096f565b6129f98161328c565b50565b6005612a0782611755565b6007811115612a2657634e487b7160e01b600052602160045260246000fd5b14612a995760405162461bcd60e51b815260206004820152603c60248201527f504143543a3a657865637574653a2070726f706f73616c2063616e206f6e6c7960448201527f2062652065786563757465642069662069742069732071756575656400000000606482015260840161096f565b6000818152609f6020526040812060088101805461ff001916610100179055905b600083815260a06020526040902054811015612ca957609c54600084815260a16020526040902080546001600160a01b0390921691630825f38f919084908110612b1457634e487b7160e01b600052603260045260246000fd5b906000526020600020015460a060008781526020019081526020016000208481548110612b5157634e487b7160e01b600052603260045260246000fd5b600091825260208083209091015488835260a1909152604090912080546001600160a01b039092169186908110612b9857634e487b7160e01b600052603260045260246000fd5b906000526020600020015460a260008981526020019081526020016000208681548110612bd557634e487b7160e01b600052603260045260246000fd5b9060005260206000200160a360008a81526020019081526020016000208781548110612c1157634e487b7160e01b600052603260045260246000fd5b9060005260206000200188600201546040518763ffffffff1660e01b8152600401612c409594939291906143cc565b6000604051808303818588803b158015612c5957600080fd5b505af1158015612c6d573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f19168201604052612c969190810190613f1f565b5080612ca18161486f565b915050612aba565b506040518281527f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f90602001610a29565b600054610100900460ff1680612cf3575060005460ff16155b612d0f5760405162461bcd60e51b815260040161096f9061448d565b600054610100900460ff16158015612d31576000805461ffff19166101011790555b612d39613501565b612d4161356b565b80156129f9576000805461ff001916905550565b600054610100900460ff1680612d6e575060005460ff16155b612d8a5760405162461bcd60e51b815260040161096f9061448d565b600054610100900460ff16158015612dac576000805461ffff19166101011790555b612d416135cb565b60006001612dc184611755565b6007811115612de057634e487b7160e01b600052602160045260246000fd5b14612e3e5760405162461bcd60e51b815260206004820152602860248201527f504143543a3a63617374566f7465496e7465726e616c3a20766f74696e6720696044820152671cc818db1bdcd95960c21b606482015260840161096f565b60028260ff161115612ea45760405162461bcd60e51b815260206004820152602960248201527f504143543a3a63617374566f7465496e7465726e616c3a20696e76616c696420604482015268766f7465207479706560b81b606482015260840161096f565b6000838152609f6020908152604080832060a483528184206001600160a01b0389168552909252909120805460ff1615612f345760405162461bcd60e51b815260206004820152602b60248201527f504143543a3a63617374566f7465496e7465726e616c3a20766f74657220616c60448201526a1c9958591e481d9bdd195960aa1b606482015260840161096f565b6000612f448784600301546130b0565b905060ff8516612f6f57612f658360060154826001600160601b0316613009565b6006840155612fc5565b8460ff1660011415612f9c57612f928360050154826001600160601b0316613009565b6005840155612fc5565b8460ff1660021415612fc557612fbf8360070154826001600160601b0316613009565b60078401555b8154600161ffff1990911661010060ff88160217176dffffffffffffffffffffffff00001916620100006001600160601b03831602179091559150505b9392505050565b60008061301683856147b0565b9050838110156130025760405162461bcd60e51b81526020600482015260116024820152706164646974696f6e206f766572666c6f7760781b604482015260640161096f565b6000828211156130a65760405162461bcd60e51b81526020600482015260156024820152747375627472616374696f6e20756e646572666c6f7760581b604482015260640161096f565b61300282846147f3565b609e546000906001600160a01b031661314e57609d5460405163782d6fe160e01b81526001600160a01b038581166004830152602482018590529091169063782d6fe19060440160206040518083038186803b15801561310f57600080fd5b505afa158015613123573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131479190614134565b905061295b565b609d5460405163782d6fe160e01b81526001600160a01b0385811660048301526024820185905261300292169063782d6fe19060440160206040518083038186803b15801561319c57600080fd5b505afa1580156131b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131d49190614134565b609e5460405163782d6fe160e01b81526001600160a01b038781166004830152602482018790529091169063782d6fe19060440160206040518083038186803b15801561322057600080fd5b505afa158015613234573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132589190614134565b604051806040016040528060168152602001756765745072696f72566f746573206f766572666c6f7760501b81525061363b565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052613330908490613688565b505050565b609c546040516001600160a01b039091169063f2b06537906133639088908890889088908890602001614380565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161339791815260200190565b60206040518083038186803b1580156133af57600080fd5b505afa1580156133c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133e79190613ee7565b1561346f5760405162461bcd60e51b815260206004820152604c60248201527f504143543a3a71756575654f72526576657274496e7465726e616c3a2069646560448201527f6e746963616c2070726f706f73616c20616374696f6e20616c7265616479207160648201526b75657565642061742065746160a01b608482015260a40161096f565b609c54604051633a66f90160e01b81526001600160a01b0390911690633a66f901906134a79088908890889088908890600401614380565b602060405180830381600087803b1580156134c157600080fd5b505af11580156134d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134f99190613f07565b505050505050565b600054610100900460ff168061351a575060005460ff16155b6135365760405162461bcd60e51b815260040161096f9061448d565b600054610100900460ff16158015612d41576000805461ffff191661010117905580156129f9576000805461ff001916905550565b600054610100900460ff1680613584575060005460ff16155b6135a05760405162461bcd60e51b815260040161096f9061448d565b600054610100900460ff161580156135c2576000805461ffff19166101011790555b612d413361328c565b600054610100900460ff16806135e4575060005460ff16155b6136005760405162461bcd60e51b815260040161096f9061448d565b600054610100900460ff16158015613622576000805461ffff19166101011790555b600160655580156129f9576000805461ff001916905550565b60008061364884866147c8565b9050846001600160601b0316816001600160601b03161015839061367f5760405162461bcd60e51b815260040161096f9190614452565b50949350505050565b60006136dd826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661375a9092919063ffffffff16565b80519091501561333057808060200190518101906136fb9190613ee7565b6133305760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161096f565b60606137698484600085613771565b949350505050565b6060824710156137d25760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161096f565b843b6138205760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161096f565b600080866001600160a01b0316858760405161383c9190614364565b60006040518083038185875af1925050503d8060008114613879576040519150601f19603f3d011682016040523d82523d6000602084013e61387e565b606091505b509150915061388e828286613899565b979650505050505050565b606083156138a8575081613002565b8251156138b85782518084602001fd5b8160405162461bcd60e51b815260040161096f9190614452565b828054828255906000526020600020908101928215613927579160200282015b8281111561392757825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906138f2565b50613933929150613a24565b5090565b828054828255906000526020600020908101928215613927579160200282015b82811115613927578251825591602001919060010190613957565b8280548282559060005260206000209081019282156139bf579160200282015b828111156139bf57825180516139af918491602090910190613a39565b5091602001919060010190613992565b50613933929150613aac565b828054828255906000526020600020908101928215613a18579160200282015b82811115613a185782518051613a08918491602090910190613a39565b50916020019190600101906139eb565b50613933929150613ac9565b5b808211156139335760008155600101613a25565b828054613a459061483a565b90600052602060002090601f016020900481019282613a675760008555613927565b82601f10613a8057805160ff1916838001178555613927565b828001600101855582156139275791820182811115613927578251825591602001919060010190613957565b80821115613933576000613ac08282613ae6565b50600101613aac565b80821115613933576000613add8282613ae6565b50600101613ac9565b508054613af29061483a565b6000825580601f10613b02575050565b601f0160209004906000526020600020908101906129f99190613a24565b6000613b33613b2e84614788565b614733565b9050828152838383011115613b4757600080fd5b828260208301376000602084830101529392505050565b600082601f830112613b6e578081fd5b81356020613b7e613b2e83614764565b80838252828201915082860187848660051b8901011115613b9d578586fd5b855b85811015613bc4578135613bb2816148b6565b84529284019290840190600101613b9f565b5090979650505050505050565b600082601f830112613be1578081fd5b81356020613bf1613b2e83614764565b80838252828201915082860187848660051b8901011115613c10578586fd5b855b85811015613bc457813567ffffffffffffffff811115613c30578788fd5b8801603f81018a13613c40578788fd5b613c518a8783013560408401613b20565b8552509284019290840190600101613c12565b600082601f830112613c74578081fd5b81356020613c84613b2e83614764565b80838252828201915082860187848660051b8901011115613ca3578586fd5b855b85811015613bc457813567ffffffffffffffff811115613cc3578788fd5b613cd18a87838c0101613d41565b8552509284019290840190600101613ca5565b600082601f830112613cf4578081fd5b81356020613d04613b2e83614764565b80838252828201915082860187848660051b8901011115613d23578586fd5b855b85811015613bc457813584529284019290840190600101613d25565b600082601f830112613d51578081fd5b61300283833560208501613b20565b803560ff81168114613d7157600080fd5b919050565b600060208284031215613d87578081fd5b8135613002816148b6565b600060208284031215613da3578081fd5b8151613002816148b6565b600080600080600080600060e0888a031215613dc8578283fd5b8735613dd3816148b6565b96506020880135613de3816148b6565b95506040880135613df3816148b6565b969995985095966060810135965060808101359560a0820135955060c0909101359350915050565b600080600080600060a08688031215613e32578283fd5b853567ffffffffffffffff80821115613e49578485fd5b613e5589838a01613b5e565b96506020880135915080821115613e6a578485fd5b613e7689838a01613ce4565b95506040880135915080821115613e8b578485fd5b613e9789838a01613c64565b94506060880135915080821115613eac578283fd5b613eb889838a01613bd1565b93506080880135915080821115613ecd578283fd5b50613eda88828901613d41565b9150509295509295909350565b600060208284031215613ef8578081fd5b81518015158114613002578182fd5b600060208284031215613f18578081fd5b5051919050565b600060208284031215613f30578081fd5b815167ffffffffffffffff811115613f46578182fd5b8201601f81018413613f56578182fd5b8051613f64613b2e82614788565b818152856020838501011115613f78578384fd5b613f8982602083016020860161480a565b95945050505050565b600080600060608486031215613fa6578081fd5b8335613fb1816148b6565b92506020840135613fc1816148b6565b929592945050506040919091013590565b600060208284031215613fe3578081fd5b5035919050565b60008060408385031215613ffc578182fd5b82359150602083013561400e816148b6565b809150509250929050565b6000806040838503121561402b578182fd5b50508035926020909101359150565b6000806040838503121561404c578182fd5b8235915061405c60208401613d60565b90509250929050565b6000806000806060858703121561407a578182fd5b8435935061408a60208601613d60565b9250604085013567ffffffffffffffff808211156140a6578384fd5b818701915087601f8301126140b9578384fd5b8135818111156140c7578485fd5b8860208285010111156140d8578485fd5b95989497505060200194505050565b600080600080600060a086880312156140fe578283fd5b8535945061410e60208701613d60565b935061411c60408701613d60565b94979396509394606081013594506080013592915050565b600060208284031215614145578081fd5b81516001600160601b0381168114613002578182fd5b6000815180845260208085019450808401835b838110156141935781516001600160a01b03168752958201959082019060010161416e565b509495945050505050565b600081518084526020808501808196508360051b81019150828601855b858110156141e55782840389526141d3848351614299565b988501989350908401906001016141bb565b5091979650505050505050565b6000815480845260208085019450848260051b8601858552828520855b85811015613bc457838303895261422683836142c5565b9885019892506001918201910161420f565b6000815180845260208085019450808401835b838110156141935781518752958201959082019060010161424b565b6000815480845260208085019450838352808320835b838110156141935781548752958201956001918201910161427d565b600081518084526142b181602086016020860161480a565b601f01601f19169290920160200192915050565b8054600090600181811c90808316806142df57607f831692505b60208084108214156142ff57634e487b7160e01b86526022600452602486fd5b838852818015614316576001811461432a57614358565b60ff19861689830152604089019650614358565b876000528160002060005b868110156143505781548b8201850152908501908301614335565b8a0183019750505b50505050505092915050565b6000825161437681846020870161480a565b9190910192915050565b60018060a01b038616815284602082015260a0604082015260006143a760a0830186614299565b82810360608401526143b98186614299565b9150508260808301529695505050505050565b60018060a01b038616815284602082015260a0604082015260006143f360a08301866142c5565b82810360608401526143b981866142c5565b608081526000614418608083018761415b565b828103602084015261442a8187614238565b9050828103604084015261443e818661419e565b9050828103606084015261388e818561419e565b6020815260006130026020830184614299565b602081016008831061448757634e487b7160e01b600052602160045260246000fd5b91905290565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602080825260409082018190527f504143543a3a696e697469616c697a653a2074696d656c6f636b2061646d696e908201527f206973206e6f742061737369676e656420746f205041435444656c6567617465606082015260800190565b8981526001600160a01b0389166020820152610120604082018190526000906145998382018b61415b565b905082810360608401526145ad818a614238565b905082810360808401526145c1818961419e565b905082810360a08401526145d5818861419e565b90508560c08401528460e08401528281036101008401526145f68185614299565b9c9b505050505050505050505050565b8881526001600160a01b0388811660208084019190915261012060408401819052895490840181905260008a8152918220919261014085019291845b818110156146715761466385848654166001600160a01b0316815260200190565b945060019384019301614642565b5050505082810360608401526146878189614267565b9050828103608084015261469b81886141f2565b905082810360a08401526146af81876141f2565b90508460c08401528360e08401528281036101008401526146d4816000815260200190565b9b9a5050505050505050505050565b85815260ff851660208201526001600160601b038416604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f909201601f19160101949350505050565b604051601f8201601f1916810167ffffffffffffffff8111828210171561475c5761475c6148a0565b604052919050565b600067ffffffffffffffff82111561477e5761477e6148a0565b5060051b60200190565b600067ffffffffffffffff8211156147a2576147a26148a0565b50601f01601f191660200190565b600082198211156147c3576147c361488a565b500190565b60006001600160601b038083168185168083038211156147ea576147ea61488a565b01949350505050565b6000828210156148055761480561488a565b500390565b60005b8381101561482557818101518382015260200161480d565b83811115614834576000848401525b50505050565b600181811c9082168061484e57607f821691505b602082108114156118ec57634e487b7160e01b600052602260045260246000fd5b60006000198214156148835761488361488a565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146129f957600080fdfea264697066735822122082acaf32fb40566963b2dc769bec1edaa4afb532e27b87ef452071c2a796021e64736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "_setProposalThreshold(uint256)": {
        "details": "_newProposalThreshold must be greater than the hardcoded min",
        "params": {
          "_newProposalThreshold": "new proposal threshold"
        }
      },
      "_setQuorumVotes(uint256)": {
        "params": {
          "_newQuorumVotes": "new quorum votes"
        }
      },
      "_setVotingDelay(uint256)": {
        "params": {
          "_newVotingDelay": "new voting delay, in blocks"
        }
      },
      "_setVotingPeriod(uint256)": {
        "params": {
          "_newVotingPeriod": "new voting period, in blocks"
        }
      },
      "cancel(uint256)": {
        "params": {
          "_proposalId": "The id of the proposal to cancel"
        }
      },
      "castVote(uint256,uint8)": {
        "params": {
          "_proposalId": "The id of the proposal to vote on",
          "_support": "The support value for the vote. 0=against, 1=for, 2=abstain"
        }
      },
      "castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)": {
        "details": "External function that accepts EIP-712 signatures for voting on proposals."
      },
      "castVoteWithReason(uint256,uint8,string)": {
        "params": {
          "_proposalId": "The id of the proposal to vote on",
          "_reason": "The reason given for the vote by the voter",
          "_support": "The support value for the vote. 0=against, 1=for, 2=abstain"
        }
      },
      "execute(uint256)": {
        "params": {
          "_proposalId": "The id of the proposal to execute"
        }
      },
      "getActions(uint256)": {
        "params": {
          "_proposalId": "Proposal to query."
        },
        "returns": {
          "calldatas": "Calldatas for proposal calls.",
          "signatures": "Function signatures for proposal calls.",
          "targets": "Target addresses for proposal calls.",
          "values": "Eth values for proposal calls."
        }
      },
      "getReceipt(uint256,address)": {
        "params": {
          "_proposalId": "the id of proposal",
          "_voter": "The address of the voter"
        },
        "returns": {
          "_0": "The voting receipt"
        }
      },
      "initialize(address,address,address,uint256,uint256,uint256,uint256)": {
        "params": {
          "_proposalThreshold": "The initial proposal threshold",
          "_quorumVotes": "The initial quorum votes",
          "_releaseToken": "The address of the \"Release\" voting token. If none, specify the zero address.",
          "_timelock": "The address of the Timelock",
          "_token": "The address of the voting token",
          "_votingDelay": "The initial voting delay",
          "_votingPeriod": "The initial voting period"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "propose(address[],uint256[],string[],bytes[],string)": {
        "params": {
          "_calldatas": "Calldatas for proposal calls.",
          "_description": "String description of the proposal.",
          "_signatures": "Function signatures for proposal calls.",
          "_targets": "Target addresses for proposal calls.",
          "_values": "Eth values for proposal calls."
        },
        "returns": {
          "_0": "Proposal id of new proposal."
        }
      },
      "queue(uint256)": {
        "params": {
          "_proposalId": "The id of the proposal to queue"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "state(uint256)": {
        "params": {
          "_proposalId": "The id of the proposal"
        },
        "returns": {
          "_0": "Proposal state"
        }
      },
      "transfer(address,address,uint256)": {
        "params": {
          "_amount": "amount of the transaction",
          "_to": "address of the receiver",
          "_token": "address of the ERC20 token"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "NewAdmin(address,address)": {
        "notice": "Emitted when pendingAdmin is accepted, which means admin is updated"
      },
      "NewImplementation(address,address)": {
        "notice": "Emitted when implementation is changed"
      },
      "NewPendingAdmin(address,address)": {
        "notice": "Emitted when pendingAdmin is changed"
      },
      "ProposalCanceled(uint256)": {
        "notice": "An event emitted when a proposal has been canceled"
      },
      "ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)": {
        "notice": "An event emitted when a new proposal is created"
      },
      "ProposalExecuted(uint256)": {
        "notice": "An event emitted when a proposal has been executed in the Timelock"
      },
      "ProposalQueued(uint256,uint256)": {
        "notice": "An event emitted when a proposal has been queued in the Timelock"
      },
      "ProposalThresholdSet(uint256,uint256)": {
        "notice": "Emitted when proposal threshold is set"
      },
      "QuorumVotesSet(uint256,uint256)": {
        "notice": "An event emitted when the quorum votes is set"
      },
      "TransferERC20(address,address,uint256)": {
        "notice": "Triggered when an amount of an ERC20 has been transferred from this contract to an address"
      },
      "VoteCast(address,uint256,uint8,uint256,string)": {
        "notice": "An event emitted when a vote has been cast on a proposal"
      },
      "VotingDelaySet(uint256,uint256)": {
        "notice": "An event emitted when the voting delay is set"
      },
      "VotingPeriodSet(uint256,uint256)": {
        "notice": "An event emitted when the voting period is set"
      }
    },
    "kind": "user",
    "methods": {
      "BALLOT_TYPEHASH()": {
        "notice": "The EIP-712 typehash for the ballot struct used by the contract"
      },
      "DOMAIN_TYPEHASH()": {
        "notice": "The EIP-712 typehash for the contract's domain"
      },
      "MAX_PROPOSAL_THRESHOLD()": {
        "notice": "The maximum setable proposal threshold"
      },
      "MAX_VOTING_DELAY()": {
        "notice": "The max setable voting delay"
      },
      "MAX_VOTING_PERIOD()": {
        "notice": "The max setable voting period"
      },
      "MIN_PROPOSAL_THRESHOLD()": {
        "notice": "The minimum setable proposal threshold"
      },
      "MIN_VOTING_DELAY()": {
        "notice": "The min setable voting delay"
      },
      "MIN_VOTING_PERIOD()": {
        "notice": "The minimum setable voting period"
      },
      "NAME()": {
        "notice": "The name of this contract"
      },
      "PROPOSAL_MAX_OPERATIONS()": {
        "notice": "The maximum number of actions that can be included in a proposal"
      },
      "_setProposalThreshold(uint256)": {
        "notice": "Owner function for setting the proposal threshold"
      },
      "_setQuorumVotes(uint256)": {
        "notice": "Owner function for setting the quorum votes"
      },
      "_setVotingDelay(uint256)": {
        "notice": "Owner function for setting the voting delay"
      },
      "_setVotingPeriod(uint256)": {
        "notice": "Owner function for setting the voting period"
      },
      "cancel(uint256)": {
        "notice": "Cancels a proposal only if sender is the proposer, or proposer delegates dropped below proposal threshold"
      },
      "castVote(uint256,uint8)": {
        "notice": "Cast a vote for a proposal"
      },
      "castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)": {
        "notice": "Cast a vote for a proposal by signature"
      },
      "castVoteWithReason(uint256,uint8,string)": {
        "notice": "Cast a vote for a proposal with a reason"
      },
      "execute(uint256)": {
        "notice": "Executes a queued proposal if eta has passed"
      },
      "getActions(uint256)": {
        "notice": "Gets actions of a proposal."
      },
      "getReceipt(uint256,address)": {
        "notice": "Gets the receipt for a voter on a given proposal"
      },
      "initialize(address,address,address,uint256,uint256,uint256,uint256)": {
        "notice": "Used to initialize the contract during delegator contructor"
      },
      "latestProposalIds(address)": {
        "notice": "The latest proposal for each proposer"
      },
      "proposalCalldatas(uint256,uint256)": {
        "notice": "The official each proposal's calldatas: An ordered list of calldata to be passed to each call"
      },
      "proposalCount()": {
        "notice": "The total number of proposals"
      },
      "proposalReceipts(uint256,address)": {
        "notice": "The official each proposal's receipts: Receipts of ballots for the entire set of voters"
      },
      "proposalSignatures(uint256,uint256)": {
        "notice": "The official each proposal's signatures: An ordered list of function signatures to be called"
      },
      "proposalTargets(uint256,uint256)": {
        "notice": "The official each proposal's targets: An ordered list of target addresses for calls to be made"
      },
      "proposalThreshold()": {
        "notice": "The number of votes required in order for a voter to become a proposer"
      },
      "proposalValues(uint256,uint256)": {
        "notice": "The official each proposal's values: An ordered list of values (i.e. msg.value) to be passed to the calls to be made"
      },
      "proposals(uint256)": {
        "notice": "The official record of all proposals ever proposed"
      },
      "propose(address[],uint256[],string[],bytes[],string)": {
        "notice": "Function used to propose a new proposal. Sender must have delegates above the proposal threshold."
      },
      "queue(uint256)": {
        "notice": "Queues a proposal of state succeeded"
      },
      "quorumVotes()": {
        "notice": "The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed"
      },
      "releaseToken()": {
        "notice": "The address of the \"Release\" governance token"
      },
      "state(uint256)": {
        "notice": "Gets the state of a proposal"
      },
      "timelock()": {
        "notice": "The address of the Governance Timelock"
      },
      "token()": {
        "notice": "The address of the governance token"
      },
      "transfer(address,address,uint256)": {
        "notice": "Transfers an amount of an ERC20 from this contract to an address"
      },
      "votingDelay()": {
        "notice": "The delay before voting on a proposal may take place, once proposed, in blocks"
      },
      "votingPeriod()": {
        "notice": "The duration of voting on a proposal, in blocks"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 538,
        "contract": "contracts/governor/PACTDelegate.sol:PACTDelegate",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 541,
        "contract": "contracts/governor/PACTDelegate.sol:PACTDelegate",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 792,
        "contract": "contracts/governor/PACTDelegate.sol:PACTDelegate",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 418,
        "contract": "contracts/governor/PACTDelegate.sol:PACTDelegate",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 531,
        "contract": "contracts/governor/PACTDelegate.sol:PACTDelegate",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 705,
        "contract": "contracts/governor/PACTDelegate.sol:PACTDelegate",
        "label": "_status",
        "offset": 0,
        "slot": "101",
        "type": "t_uint256"
      },
      {
        "astId": 748,
        "contract": "contracts/governor/PACTDelegate.sol:PACTDelegate",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 12302,
        "contract": "contracts/governor/PACTDelegate.sol:PACTDelegate",
        "label": "votingDelay",
        "offset": 0,
        "slot": "151",
        "type": "t_uint256"
      },
      {
        "astId": 12305,
        "contract": "contracts/governor/PACTDelegate.sol:PACTDelegate",
        "label": "votingPeriod",
        "offset": 0,
        "slot": "152",
        "type": "t_uint256"
      },
      {
        "astId": 12308,
        "contract": "contracts/governor/PACTDelegate.sol:PACTDelegate",
        "label": "proposalThreshold",
        "offset": 0,
        "slot": "153",
        "type": "t_uint256"
      },
      {
        "astId": 12311,
        "contract": "contracts/governor/PACTDelegate.sol:PACTDelegate",
        "label": "proposalCount",
        "offset": 0,
        "slot": "154",
        "type": "t_uint256"
      },
      {
        "astId": 12314,
        "contract": "contracts/governor/PACTDelegate.sol:PACTDelegate",
        "label": "quorumVotes",
        "offset": 0,
        "slot": "155",
        "type": "t_uint256"
      },
      {
        "astId": 12318,
        "contract": "contracts/governor/PACTDelegate.sol:PACTDelegate",
        "label": "timelock",
        "offset": 0,
        "slot": "156",
        "type": "t_contract(TimelockInterface)12594"
      },
      {
        "astId": 12322,
        "contract": "contracts/governor/PACTDelegate.sol:PACTDelegate",
        "label": "token",
        "offset": 0,
        "slot": "157",
        "type": "t_contract(IHasVotes)5310"
      },
      {
        "astId": 12326,
        "contract": "contracts/governor/PACTDelegate.sol:PACTDelegate",
        "label": "releaseToken",
        "offset": 0,
        "slot": "158",
        "type": "t_contract(IHasVotes)5310"
      },
      {
        "astId": 12332,
        "contract": "contracts/governor/PACTDelegate.sol:PACTDelegate",
        "label": "proposals",
        "offset": 0,
        "slot": "159",
        "type": "t_mapping(t_uint256,t_struct(Proposal)12390_storage)"
      },
      {
        "astId": 12338,
        "contract": "contracts/governor/PACTDelegate.sol:PACTDelegate",
        "label": "proposalTargets",
        "offset": 0,
        "slot": "160",
        "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 12344,
        "contract": "contracts/governor/PACTDelegate.sol:PACTDelegate",
        "label": "proposalValues",
        "offset": 0,
        "slot": "161",
        "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 12350,
        "contract": "contracts/governor/PACTDelegate.sol:PACTDelegate",
        "label": "proposalSignatures",
        "offset": 0,
        "slot": "162",
        "type": "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)"
      },
      {
        "astId": 12356,
        "contract": "contracts/governor/PACTDelegate.sol:PACTDelegate",
        "label": "proposalCalldatas",
        "offset": 0,
        "slot": "163",
        "type": "t_mapping(t_uint256,t_array(t_bytes_storage)dyn_storage)"
      },
      {
        "astId": 12364,
        "contract": "contracts/governor/PACTDelegate.sol:PACTDelegate",
        "label": "proposalReceipts",
        "offset": 0,
        "slot": "164",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Receipt)12397_storage))"
      },
      {
        "astId": 12369,
        "contract": "contracts/governor/PACTDelegate.sol:PACTDelegate",
        "label": "latestProposalIds",
        "offset": 0,
        "slot": "165",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes_storage)dyn_storage": {
        "base": "t_bytes_storage",
        "encoding": "dynamic_array",
        "label": "bytes[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(IHasVotes)5310": {
        "encoding": "inplace",
        "label": "contract IHasVotes",
        "numberOfBytes": "20"
      },
      "t_contract(TimelockInterface)12594": {
        "encoding": "inplace",
        "label": "contract TimelockInterface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(Receipt)12397_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct PACTDelegateStorageV1.Receipt)",
        "numberOfBytes": "32",
        "value": "t_struct(Receipt)12397_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_uint256,t_array(t_bytes_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bytes[])",
        "numberOfBytes": "32",
        "value": "t_array(t_bytes_storage)dyn_storage"
      },
      "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string[])",
        "numberOfBytes": "32",
        "value": "t_array(t_string_storage)dyn_storage"
      },
      "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_struct(Receipt)12397_storage))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => struct PACTDelegateStorageV1.Receipt))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_struct(Receipt)12397_storage)"
      },
      "t_mapping(t_uint256,t_struct(Proposal)12390_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct PACTDelegateStorageV1.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)12390_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Proposal)12390_storage": {
        "encoding": "inplace",
        "label": "struct PACTDelegateStorageV1.Proposal",
        "members": [
          {
            "astId": 12371,
            "contract": "contracts/governor/PACTDelegate.sol:PACTDelegate",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 12373,
            "contract": "contracts/governor/PACTDelegate.sol:PACTDelegate",
            "label": "proposer",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 12375,
            "contract": "contracts/governor/PACTDelegate.sol:PACTDelegate",
            "label": "eta",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 12377,
            "contract": "contracts/governor/PACTDelegate.sol:PACTDelegate",
            "label": "startBlock",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 12379,
            "contract": "contracts/governor/PACTDelegate.sol:PACTDelegate",
            "label": "endBlock",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 12381,
            "contract": "contracts/governor/PACTDelegate.sol:PACTDelegate",
            "label": "forVotes",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 12383,
            "contract": "contracts/governor/PACTDelegate.sol:PACTDelegate",
            "label": "againstVotes",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 12385,
            "contract": "contracts/governor/PACTDelegate.sol:PACTDelegate",
            "label": "abstainVotes",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 12387,
            "contract": "contracts/governor/PACTDelegate.sol:PACTDelegate",
            "label": "canceled",
            "offset": 0,
            "slot": "8",
            "type": "t_bool"
          },
          {
            "astId": 12389,
            "contract": "contracts/governor/PACTDelegate.sol:PACTDelegate",
            "label": "executed",
            "offset": 1,
            "slot": "8",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_struct(Receipt)12397_storage": {
        "encoding": "inplace",
        "label": "struct PACTDelegateStorageV1.Receipt",
        "members": [
          {
            "astId": 12392,
            "contract": "contracts/governor/PACTDelegate.sol:PACTDelegate",
            "label": "hasVoted",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 12394,
            "contract": "contracts/governor/PACTDelegate.sol:PACTDelegate",
            "label": "support",
            "offset": 1,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 12396,
            "contract": "contracts/governor/PACTDelegate.sol:PACTDelegate",
            "label": "votes",
            "offset": 2,
            "slot": "0",
            "type": "t_uint96"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      },
      "t_uint96": {
        "encoding": "inplace",
        "label": "uint96",
        "numberOfBytes": "12"
      }
    }
  }
}