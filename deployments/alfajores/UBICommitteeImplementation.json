{
  "address": "0x59916829f0d01d8F05a2389928CaC6FecBAd4937",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "name": "MemberAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "name": "MemberRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldImplementation",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "NewImplementation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "indexed": false,
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldQuorumVotes",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newQuorumVotes",
          "type": "uint256"
        }
      ],
      "name": "QuorumVotesSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TransferERC20",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "VoteCast",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX_VOTING_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PROPOSAL_MAX_OPERATIONS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_member",
          "type": "address"
        }
      ],
      "name": "addMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_support",
          "type": "uint8"
        }
      ],
      "name": "castVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "communityAdmin",
      "outputs": [
        {
          "internalType": "contract ICommunityAdmin",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "communityProxyAdmin",
      "outputs": [
        {
          "internalType": "contract ProxyAdmin",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        }
      ],
      "name": "getActions",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_voter",
          "type": "address"
        }
      ],
      "name": "getReceipt",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "hasVoted",
              "type": "bool"
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8"
            },
            {
              "internalType": "uint96",
              "name": "votes",
              "type": "uint96"
            }
          ],
          "internalType": "struct UBICommitteeStorageV1.Receipt",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_quorumVotes",
          "type": "uint256"
        },
        {
          "internalType": "contract ICommunityAdmin",
          "name": "_communityAdmin",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_members",
          "type": "address[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "latestProposalIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "members",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalCalldatas",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "proposalReceipts",
      "outputs": [
        {
          "internalType": "bool",
          "name": "hasVoted",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "uint96",
          "name": "votes",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalSignatures",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "abstainVotes",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "canceled",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "_signatures",
          "type": "string[]"
        },
        {
          "internalType": "bytes[]",
          "name": "_calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "propose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quorumVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_member",
          "type": "address"
        }
      ],
      "name": "removeMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newQuorumVotes",
          "type": "uint256"
        }
      ],
      "name": "setQuorumVotes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        }
      ],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum UBICommitteeStorageV1.ProposalState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x16dfe5b5fdbb34d952122020dbfadad80ba2f6a0139d8ac67ca7270657ac7b15",
  "receipt": {
    "to": null,
    "from": "0xa34737409091eBD0726A3Ab5863Fc7Ee9243Edab",
    "contractAddress": "0x59916829f0d01d8F05a2389928CaC6FecBAd4937",
    "transactionIndex": 0,
    "gasUsed": "2960802",
    "logsBloom": "0x
    "blockHash": "0xd196588d93f6408e00d6cae534a8b6071eac8dd06316330ae4f03a5d622a8735",
    "transactionHash": "0x16dfe5b5fdbb34d952122020dbfadad80ba2f6a0139d8ac67ca7270657ac7b15",
    "logs": [],
    "blockNumber": 11016094,
    "cumulativeGasUsed": "2960802",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "9eb897b604538ee3c093b3f66f713a0d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"MemberAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"MemberRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldImplementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"NewImplementation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldQuorumVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newQuorumVotes\",\"type\":\"uint256\"}],\"name\":\"QuorumVotesSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferERC20\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_VOTING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROPOSAL_MAX_OPERATIONS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_member\",\"type\":\"address\"}],\"name\":\"addMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_support\",\"type\":\"uint8\"}],\"name\":\"castVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"communityAdmin\",\"outputs\":[{\"internalType\":\"contract ICommunityAdmin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"communityProxyAdmin\",\"outputs\":[{\"internalType\":\"contract ProxyAdmin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"getActions\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"getReceipt\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint96\",\"name\":\"votes\",\"type\":\"uint96\"}],\"internalType\":\"struct UBICommitteeStorageV1.Receipt\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_quorumVotes\",\"type\":\"uint256\"},{\"internalType\":\"contract ICommunityAdmin\",\"name\":\"_communityAdmin\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_members\",\"type\":\"address[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"latestProposalIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"members\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalCalldatas\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"proposalReceipts\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint96\",\"name\":\"votes\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalSignatures\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"abstainVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"canceled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"_signatures\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorumVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_member\",\"type\":\"address\"}],\"name\":\"removeMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newQuorumVotes\",\"type\":\"uint256\"}],\"name\":\"setQuorumVotes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum UBICommitteeStorageV1.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"TransferERC20(address,address,uint256)\":{\"params\":{\"amount\":\"Amount of the transaction\",\"to\":\"Address of the receiver\",\"token\":\"ERC20 token address\"}},\"VoteCast(address,uint256,uint8,uint256,string)\":{\"params\":{\"proposalId\":\"The proposal id which was voted on\",\"reason\":\"The reason given for the vote by the voter\",\"support\":\"Support value for the vote. 0=against, 1=for, 2=abstain\",\"voter\":\"The address which casted a vote\",\"votes\":\"Number of votes which were cast by the voter\"}}},\"kind\":\"dev\",\"methods\":{\"addMember(address)\":{\"params\":{\"_member\":\"Member address.\"}},\"cancel(uint256)\":{\"params\":{\"_proposalId\":\"The id of the proposal to cancel\"}},\"castVote(uint256,uint8)\":{\"params\":{\"_proposalId\":\"The id of the proposal to vote on\",\"_support\":\"The support value for the vote. 0=against, 1=for, 2=abstain\"}},\"execute(uint256)\":{\"params\":{\"_proposalId\":\"The id of the proposal to execute\"}},\"getActions(uint256)\":{\"params\":{\"_proposalId\":\"Proposal to query.\"},\"returns\":{\"calldatas\":\"Calldatas for proposal calls.\",\"signatures\":\"Function signatures for proposal calls.\"}},\"getReceipt(uint256,address)\":{\"params\":{\"_proposalId\":\"the id of proposal\",\"_voter\":\"The address of the voter\"},\"returns\":{\"_0\":\"The voting receipt\"}},\"initialize(uint256,address,address[])\":{\"params\":{\"_quorumVotes\":\"The initial quorum votes\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"propose(string[],bytes[],string)\":{\"params\":{\"_calldatas\":\"Calldatas for proposal calls.\",\"_description\":\"String description of the proposal.\",\"_signatures\":\"Function signatures for proposal calls.\"},\"returns\":{\"_0\":\"Proposal id of new proposal.\"}},\"removeMember(address)\":{\"params\":{\"_member\":\"Member address.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setQuorumVotes(uint256)\":{\"params\":{\"_newQuorumVotes\":\"new quorum votes\"}},\"state(uint256)\":{\"params\":{\"_proposalId\":\"The id of the proposal\"},\"returns\":{\"_0\":\"Proposal state\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"MemberAdded(address)\":{\"notice\":\"An event emitted when a member is added\"},\"MemberRemoved(address)\":{\"notice\":\"An event emitted when a member is removed\"},\"NewImplementation(address,address)\":{\"notice\":\"Emitted when implementation is changed\"},\"ProposalCanceled(uint256)\":{\"notice\":\"An event emitted when a proposal has been canceled\"},\"ProposalCreated(uint256,address,string[],bytes[],uint256,string)\":{\"notice\":\"An event emitted when a new proposal is created\"},\"ProposalExecuted(uint256)\":{\"notice\":\"An event emitted when a proposal has been executed in the Timelock\"},\"QuorumVotesSet(uint256,uint256)\":{\"notice\":\"An event emitted when the quorum votes is set\"},\"TransferERC20(address,address,uint256)\":{\"notice\":\"Triggered when an amount of an ERC20 has been transferred from this contract to an address\"},\"VoteCast(address,uint256,uint8,uint256,string)\":{\"notice\":\"An event emitted when a vote has been cast on a proposal\"}},\"kind\":\"user\",\"methods\":{\"MAX_VOTING_PERIOD()\":{\"notice\":\"The max setable voting period\"},\"PROPOSAL_MAX_OPERATIONS()\":{\"notice\":\"The maximum number of actions that can be included in a proposal\"},\"addMember(address)\":{\"notice\":\"Function used to add new members to the committee.\"},\"cancel(uint256)\":{\"notice\":\"Cancels a proposal only if sender is the proposer, or proposer delegates dropped below proposal threshold\"},\"castVote(uint256,uint8)\":{\"notice\":\"Cast a vote for a proposal\"},\"execute(uint256)\":{\"notice\":\"Executes a queued proposal if eta has passed\"},\"getActions(uint256)\":{\"notice\":\"Gets actions of a proposal.\"},\"getReceipt(uint256,address)\":{\"notice\":\"Gets the receipt for a voter on a given proposal\"},\"initialize(uint256,address,address[])\":{\"notice\":\"Used to initialize the contract during delegator contructor\"},\"latestProposalIds(address)\":{\"notice\":\"The latest proposal for each proposer\"},\"members(address)\":{\"notice\":\"The committee members\"},\"proposalCalldatas(uint256,uint256)\":{\"notice\":\"The official each proposal's calldatas: An ordered list of calldata to be passed to each call\"},\"proposalCount()\":{\"notice\":\"The total number of proposals\"},\"proposalReceipts(uint256,address)\":{\"notice\":\"The official each proposal's receipts: Receipts of ballots for the entire set of voters\"},\"proposalSignatures(uint256,uint256)\":{\"notice\":\"The official each proposal's signatures: An ordered list of function signatures to be called\"},\"proposals(uint256)\":{\"notice\":\"The official record of all proposals ever proposed\"},\"propose(string[],bytes[],string)\":{\"notice\":\"Function used to propose a new proposal. Sender must have delegates above the proposal threshold.\"},\"quorumVotes()\":{\"notice\":\"The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed\"},\"removeMember(address)\":{\"notice\":\"Function used to remove members from the committee.\"},\"setQuorumVotes(uint256)\":{\"notice\":\"Owner function for setting the quorum votes\"},\"state(uint256)\":{\"notice\":\"Gets the state of a proposal\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/governor/ubiCommittee/UBICommitteeImplementation.sol\":\"UBICommitteeImplementation\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControlUpgradeable {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Context_init_unchained();\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x9ffedb33e192f8821cbaead72596c79ea87fb28a73f8d3a9f5004449799f8e1b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\\n * initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() initializer {}\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, because in other contexts the\\n        // contract may have been reentered.\\n        require(_initializing ? _isConstructor() : !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} modifier, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    function _isConstructor() private view returns (bool) {\\n        return !AddressUpgradeable.isContract(address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x68861bcc80cacbd498efde75aab6c74a486cc48262660d326c8d7530d9752097\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuardUpgradeable is Initializable {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    function __ReentrancyGuard_init() internal onlyInitializing {\\n        __ReentrancyGuard_init_unchained();\\n    }\\n\\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0xf3a9b766b0d0456f79d9402db4b49bb16c414f3f9d65244475c0704b6c66dcf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f0f878c796dfc7feba6d3c4e3e526c14c7deae8b7bfc71088e3f38fab0d77b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n        __Context_init_unchained();\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x0b0d548f6381370d394f7a434f994dc678b3ef3e755de106109d61343a685ea7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/ERC1967/ERC1967Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"./ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializating the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1));\\n        _upgradeToAndCall(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal view virtual override returns (address impl) {\\n        return ERC1967Upgrade._getImplementation();\\n    }\\n}\\n\",\"keccak256\":\"0x6309f9f39dc6f4f45a24f296543867aa358e32946cd6b2874627a996d606b3a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n *\\n * @custom:oz-upgrades-unsafe-allow delegatecall\\n */\\nabstract contract ERC1967Upgrade {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallSecure(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        address oldImplementation = _getImplementation();\\n\\n        // Initial upgrade and setup call\\n        _setImplementation(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n\\n        // Perform rollback test if not already in progress\\n        StorageSlot.BooleanSlot storage rollbackTesting = StorageSlot.getBooleanSlot(_ROLLBACK_SLOT);\\n        if (!rollbackTesting.value) {\\n            // Trigger rollback using upgradeTo from the new implementation\\n            rollbackTesting.value = true;\\n            Address.functionDelegateCall(\\n                newImplementation,\\n                abi.encodeWithSignature(\\\"upgradeTo(address)\\\", oldImplementation)\\n            );\\n            rollbackTesting.value = false;\\n            // Check rollback was effective\\n            require(oldImplementation == _getImplementation(), \\\"ERC1967Upgrade: upgrade breaks further upgrades\\\");\\n            // Finally reset to the new implementation and log the upgrade\\n            _upgradeTo(newImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Emitted when the beacon is upgraded.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            Address.isContract(IBeacon(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(\\n        address newBeacon,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5f4c3eed093dfb0e4e20c1c102d2f2c6894a972f454adb308511a0afb37e6f79\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internall call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internall call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overriden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xab2556b154ceb1a11e456f2827ca8f6f65242b1b2fcc00268ab6d38fc6e64bbd\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/transparent/ProxyAdmin.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./TransparentUpgradeableProxy.sol\\\";\\nimport \\\"../../access/Ownable.sol\\\";\\n\\n/**\\n * @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\\n * explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\\n */\\ncontract ProxyAdmin is Ownable {\\n    /**\\n     * @dev Returns the current implementation of `proxy`.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the admin of `proxy`.\\n     */\\n    function getProxyImplementation(TransparentUpgradeableProxy proxy) public view virtual returns (address) {\\n        // We need to manually run the static call since the getter cannot be flagged as view\\n        // bytes4(keccak256(\\\"implementation()\\\")) == 0x5c60da1b\\n        (bool success, bytes memory returndata) = address(proxy).staticcall(hex\\\"5c60da1b\\\");\\n        require(success);\\n        return abi.decode(returndata, (address));\\n    }\\n\\n    /**\\n     * @dev Returns the current admin of `proxy`.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the admin of `proxy`.\\n     */\\n    function getProxyAdmin(TransparentUpgradeableProxy proxy) public view virtual returns (address) {\\n        // We need to manually run the static call since the getter cannot be flagged as view\\n        // bytes4(keccak256(\\\"admin()\\\")) == 0xf851a440\\n        (bool success, bytes memory returndata) = address(proxy).staticcall(hex\\\"f851a440\\\");\\n        require(success);\\n        return abi.decode(returndata, (address));\\n    }\\n\\n    /**\\n     * @dev Changes the admin of `proxy` to `newAdmin`.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the current admin of `proxy`.\\n     */\\n    function changeProxyAdmin(TransparentUpgradeableProxy proxy, address newAdmin) public virtual onlyOwner {\\n        proxy.changeAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the admin of `proxy`.\\n     */\\n    function upgrade(TransparentUpgradeableProxy proxy, address implementation) public virtual onlyOwner {\\n        proxy.upgradeTo(implementation);\\n    }\\n\\n    /**\\n     * @dev Upgrades `proxy` to `implementation` and calls a function on the new implementation. See\\n     * {TransparentUpgradeableProxy-upgradeToAndCall}.\\n     *\\n     * Requirements:\\n     *\\n     * - This contract must be the admin of `proxy`.\\n     */\\n    function upgradeAndCall(\\n        TransparentUpgradeableProxy proxy,\\n        address implementation,\\n        bytes memory data\\n    ) public payable virtual onlyOwner {\\n        proxy.upgradeToAndCall{value: msg.value}(implementation, data);\\n    }\\n}\\n\",\"keccak256\":\"0x33b8603bfbef7f33d9308b79c79aa3db7eb19525fd1addd764285e834ca275d7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/transparent/TransparentUpgradeableProxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1967/ERC1967Proxy.sol\\\";\\n\\n/**\\n * @dev This contract implements a proxy that is upgradeable by an admin.\\n *\\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\\n * clashing], which can potentially be used in an attack, this contract uses the\\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\\n * things that go hand in hand:\\n *\\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\\n * that call matches one of the admin functions exposed by the proxy itself.\\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\\n * \\\"admin cannot fallback to proxy target\\\".\\n *\\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\\n * to sudden errors when trying to call a function from the proxy implementation.\\n *\\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\\n * you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\\n */\\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\\n    /**\\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\\n     * optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\\n     */\\n    constructor(\\n        address _logic,\\n        address admin_,\\n        bytes memory _data\\n    ) payable ERC1967Proxy(_logic, _data) {\\n        assert(_ADMIN_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.admin\\\")) - 1));\\n        _changeAdmin(admin_);\\n    }\\n\\n    /**\\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\\n     */\\n    modifier ifAdmin() {\\n        if (msg.sender == _getAdmin()) {\\n            _;\\n        } else {\\n            _fallback();\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function admin() external ifAdmin returns (address admin_) {\\n        admin_ = _getAdmin();\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\\n     */\\n    function implementation() external ifAdmin returns (address implementation_) {\\n        implementation_ = _implementation();\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\\n     */\\n    function changeAdmin(address newAdmin) external virtual ifAdmin {\\n        _changeAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\\n     */\\n    function upgradeTo(address newImplementation) external ifAdmin {\\n        _upgradeToAndCall(newImplementation, bytes(\\\"\\\"), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\\n     * proxied contract.\\n     *\\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes calldata data) external payable ifAdmin {\\n        _upgradeToAndCall(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _admin() internal view virtual returns (address) {\\n        return _getAdmin();\\n    }\\n\\n    /**\\n     * @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}.\\n     */\\n    function _beforeFallback() internal virtual override {\\n        require(msg.sender != _getAdmin(), \\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\");\\n        super._beforeFallback();\\n    }\\n}\\n\",\"keccak256\":\"0x140055a64cf579d622e04f5a198595832bf2cb193cd0005f4f2d4d61ca906253\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xfe1b7a9aa2a530a9e705b220e26cd584e2fbdc9602a3a1066032b12816b46aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/structs/EnumerableSet.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping(bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (lastIndex != toDeleteIndex) {\\n                bytes32 lastvalue = set._values[lastIndex];\\n\\n                // Move the last value to the index where the value to delete is\\n                set._values[toDeleteIndex] = lastvalue;\\n                // Update the index for the moved value\\n                set._indexes[lastvalue] = valueIndex; // Replace lastvalue's index to valueIndex\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        return _values(set._inner);\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x9772845c886f87a3aab315f8d6b68aa599027c20f441b131cd4afaf65b588900\",\"license\":\"MIT\"},\"contracts/ambassadors/interfaces/IAmbassadors.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.4;\\n\\ninterface IAmbassadors {\\n    function getVersion() external returns(uint256);\\n    function isAmbassador(address _ambassador) external view returns (bool);\\n    function isAmbassadorOf(address _ambassador, address _community) external view returns (bool);\\n    function isEntityOf(address _ambassador, address _entityAddress) external view returns (bool);\\n    function isAmbassadorAt(address _ambassador, address _entityAddress) external view returns (bool);\\n\\n    function addEntity(address _entity) external;\\n    function removeEntity(address _entity) external;\\n    function replaceEntityAccount(address _entity, address _newEntity) external;\\n    function addAmbassador(address _ambassador) external;\\n    function removeAmbassador(address _ambassador) external;\\n    function replaceAmbassadorAccount(address _ambassador, address _newAmbassador) external;\\n    function replaceAmbassador(address _oldAmbassador, address _newAmbassador) external;\\n    function transferAmbassador(address _ambassador, address _toEntity, bool _keepCommunities) external;\\n    function transferCommunityToAmbassador(address _to, address _community) external;\\n    function setCommunityToAmbassador(address _ambassador, address _community) external;\\n    function removeCommunity(address _community) external;\\n}\\n\",\"keccak256\":\"0xc65f840a3ae4f30e3a579e6113080334b31300c40b56596aeb77eaed67702133\",\"license\":\"Apache-2.0\"},\"contracts/community/interfaces/ICommunity.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.4;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./ICommunityAdmin.sol\\\";\\n\\ninterface ICommunity {\\n    enum BeneficiaryState {\\n        NONE, //the beneficiary hasn't been added yet\\n        Valid,\\n        Locked,\\n        Removed\\n    }\\n\\n    struct Beneficiary {\\n        BeneficiaryState state;  //beneficiary state\\n        uint256 claims;          //total number of claims\\n        uint256 claimedAmount;   //total amount of cUSD received\\n        uint256 lastClaim;       //block number of the last claim\\n    }\\n\\n    function initialize(\\n        address[] memory _managers,\\n        uint256 _claimAmount,\\n        uint256 _maxClaim,\\n        uint256 _decreaseStep,\\n        uint256 _baseInterval,\\n        uint256 _incrementInterval,\\n        uint256 _minTranche,\\n        uint256 _maxTranche,\\n        ICommunity _previousCommunity\\n    ) external;\\n    function getVersion() external returns(uint256);\\n    function previousCommunity() external view returns(ICommunity);\\n    function claimAmount() external view returns(uint256);\\n    function baseInterval() external view returns(uint256);\\n    function incrementInterval() external view returns(uint256);\\n    function maxClaim() external view returns(uint256);\\n    function validBeneficiaryCount() external view returns(uint);\\n    function treasuryFunds() external view returns(uint);\\n    function privateFunds() external view returns(uint);\\n    function communityAdmin() external view returns(ICommunityAdmin);\\n    function cUSD() external view  returns(IERC20);\\n    function locked() external view returns(bool);\\n    function beneficiaries(address _beneficiaryAddress) external view returns(\\n        BeneficiaryState state,\\n        uint256 claims,\\n        uint256 claimedAmount,\\n        uint256 lastClaim\\n    );\\n    function decreaseStep() external view returns(uint);\\n    function beneficiaryListAt(uint256 _index) external view returns (address);\\n    function beneficiaryListLength() external view returns (uint256);\\n    function impactMarketAddress() external pure returns (address);\\n    function minTranche() external view returns(uint256);\\n    function maxTranche() external view returns(uint256);\\n    function lastFundRequest() external view returns(uint256);\\n\\n    function updateCommunityAdmin(ICommunityAdmin _communityAdmin) external;\\n    function updatePreviousCommunity(ICommunity _newPreviousCommunity) external;\\n    function updateBeneficiaryParams(\\n        uint256 _claimAmount,\\n        uint256 _maxClaim,\\n        uint256 _decreaseStep,\\n        uint256 _baseInterval,\\n        uint256 _incrementInterval\\n    ) external;\\n    function updateCommunityParams(\\n        uint256 _minTranche,\\n        uint256 _maxTranche\\n    ) external;\\n    function donate(address _sender, uint256 _amount) external;\\n    function addTreasuryFunds(uint256 _amount) external;\\n    function transfer(IERC20 _token, address _to, uint256 _amount) external;\\n    function addManager(address _managerAddress) external;\\n    function removeManager(address _managerAddress) external;\\n    function addBeneficiary(address _beneficiaryAddress) external;\\n    function lockBeneficiary(address _beneficiaryAddress) external;\\n    function unlockBeneficiary(address _beneficiaryAddress) external;\\n    function removeBeneficiary(address _beneficiaryAddress) external;\\n    function claim() external;\\n    function lastInterval(address _beneficiaryAddress) external view returns (uint256);\\n    function claimCooldown(address _beneficiaryAddress) external view returns (uint256);\\n    function lock() external;\\n    function unlock() external;\\n    function requestFunds() external;\\n    function beneficiaryJoinFromMigrated(address _beneficiaryAddress) external;\\n    function getInitialMaxClaim() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x26196a4ed9b1b04cebfd283cadcf6f02297e4c44a38a77e8f561a5698ce57a55\",\"license\":\"Apache-2.0\"},\"contracts/community/interfaces/ICommunityAdmin.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./ICommunity.sol\\\";\\nimport \\\"../../treasury/interfaces/ITreasury.sol\\\";\\nimport \\\"../../governor/ubiCommittee/interfaces/IUBICommittee.sol\\\";\\nimport \\\"../../ambassadors/interfaces/IAmbassadors.sol\\\";\\n\\ninterface ICommunityAdmin {\\n    enum CommunityState {\\n        NONE,\\n        Valid,\\n        Removed,\\n        Migrated\\n    }\\n\\n    function getVersion() external returns(uint256);\\n    function cUSD() external view returns(IERC20);\\n    function treasury() external view returns(ITreasury);\\n    function ubiCommittee() external view returns(IUBICommittee);\\n    function ambassadors() external view returns(IAmbassadors);\\n    function communityMiddleProxy() external view returns(address);\\n    function communities(address _community) external view returns(CommunityState);\\n    function communityImplementation() external view returns(ICommunity);\\n    function communityProxyAdmin() external view returns(ProxyAdmin);\\n    function communityListAt(uint256 _index) external view returns (address);\\n    function communityListLength() external view returns (uint256);\\n    function isAmbassadorOrEntityOfCommunity(address _community, address _ambassadorOrEntity) external view returns (bool);\\n\\n    function updateTreasury(ITreasury _newTreasury) external;\\n    function updateUbiCommittee(IUBICommittee _newUbiCommittee) external;\\n    function updateAmbassadors(IAmbassadors _newAmbassadors) external;\\n    function updateCommunityMiddleProxy(address _communityMiddleProxy) external;\\n    function updateCommunityImplementation(ICommunity _communityImplementation_) external;\\n    function updateBeneficiaryParams(\\n        ICommunity _community,\\n        uint256 _claimAmount,\\n        uint256 _maxClaim,\\n        uint256 _decreaseStep,\\n        uint256 _baseInterval,\\n        uint256 _incrementInterval\\n    ) external;\\n    function updateCommunityParams(\\n        ICommunity _community,\\n        uint256 _minTranche,\\n        uint256 _maxTranche\\n    ) external;\\n    function updateProxyImplementation(address _CommunityMiddleProxy, address _newLogic) external;\\n    function addCommunity(\\n        address[] memory _managers,\\n        address _ambassador,\\n        uint256 _claimAmount,\\n        uint256 _maxClaim,\\n        uint256 _decreaseStep,\\n        uint256 _baseInterval,\\n        uint256 _incrementInterval,\\n        uint256 _minTranche,\\n        uint256 _maxTranche\\n    ) external;\\n    function migrateCommunity(\\n        address[] memory _managers,\\n        ICommunity _previousCommunity\\n    ) external;\\n    function addManagerToCommunity(ICommunity _community_, address _account_) external;\\n    function removeCommunity(ICommunity _community) external;\\n    function fundCommunity() external;\\n    function transfer(IERC20 _token, address _to, uint256 _amount) external;\\n    function transferFromCommunity(\\n        ICommunity _community,\\n        IERC20 _token,\\n        address _to,\\n        uint256 _amount\\n    ) external;\\n}\\n\",\"keccak256\":\"0xaa04e37f5615545fdafe80789a45e9a2770e8ec1e9b841a9641227cae9b9c799\",\"license\":\"Apache-2.0\"},\"contracts/governor/ubiCommittee/UBICommitteeImplementation.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.4;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\\\";\\nimport \\\"./interfaces/UBICommitteeStorageV1.sol\\\";\\n\\ncontract UBICommitteeImplementation is\\n    Initializable,\\n    OwnableUpgradeable,\\n    ReentrancyGuardUpgradeable,\\n    UBICommitteeStorageV1\\n{\\n    /// @notice The max setable voting period\\n    uint256 public constant MAX_VOTING_PERIOD = 518400; // About 30 days\\n\\n    /// @notice The maximum number of actions that can be included in a proposal\\n    uint256 public constant PROPOSAL_MAX_OPERATIONS = 10; // 10 actions\\n\\n    /// @notice An event emitted when a new proposal is created\\n    event ProposalCreated(\\n        uint256 id,\\n        address proposer,\\n        string[] signatures,\\n        bytes[] calldatas,\\n        uint256 endBlock,\\n        string description\\n    );\\n\\n    /// @notice An event emitted when a vote has been cast on a proposal\\n    /// @param voter The address which casted a vote\\n    /// @param proposalId The proposal id which was voted on\\n    /// @param support Support value for the vote. 0=against, 1=for, 2=abstain\\n    /// @param votes Number of votes which were cast by the voter\\n    /// @param reason The reason given for the vote by the voter\\n    event VoteCast(\\n        address indexed voter,\\n        uint256 proposalId,\\n        uint8 support,\\n        uint256 votes,\\n        string reason\\n    );\\n\\n    /// @notice An event emitted when a proposal has been canceled\\n    event ProposalCanceled(uint256 id);\\n\\n    /// @notice An event emitted when a proposal has been executed in the Timelock\\n    event ProposalExecuted(uint256 id);\\n\\n    /// @notice Emitted when implementation is changed\\n    event NewImplementation(address oldImplementation, address newImplementation);\\n\\n    /// @notice An event emitted when the quorum votes is set\\n    event QuorumVotesSet(uint256 oldQuorumVotes, uint256 newQuorumVotes);\\n\\n    /// @notice An event emitted when a member is added\\n    event MemberAdded(address member);\\n\\n    /// @notice An event emitted when a member is removed\\n    event MemberRemoved(address member);\\n\\n    /**\\n     * @notice Triggered when an amount of an ERC20 has been transferred from this contract to an address\\n     *\\n     * @param token               ERC20 token address\\n     * @param to                  Address of the receiver\\n     * @param amount              Amount of the transaction\\n     */\\n    event TransferERC20(address indexed token, address indexed to, uint256 amount);\\n\\n    modifier onlyMember() {\\n        require(members[msg.sender] == true, \\\"PACT:: Not a member\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @notice Used to initialize the contract during delegator contructor\\n     * @param _quorumVotes The initial quorum votes\\n     */\\n    function initialize(\\n        uint256 _quorumVotes,\\n        ICommunityAdmin _communityAdmin,\\n        address[] calldata _members\\n    ) public initializer {\\n        require(_quorumVotes >= 1, \\\"PACT::initialize: invalid proposal threshold\\\");\\n        require(_quorumVotes <= _members.length, \\\"PACT::initialize: params mismatch\\\");\\n\\n        __Ownable_init();\\n        __ReentrancyGuard_init();\\n\\n        communityProxyAdmin = new ProxyAdmin();\\n        communityAdmin = _communityAdmin;\\n        quorumVotes = _quorumVotes;\\n\\n        // Create dummy proposal\\n        Proposal memory _dummyProposal = Proposal({\\n            id: proposalCount,\\n            proposer: address(this),\\n            endBlock: 0,\\n            forVotes: 0,\\n            againstVotes: 0,\\n            abstainVotes: 0,\\n            canceled: true,\\n            executed: false\\n        });\\n        proposalCount++;\\n\\n        proposals[_dummyProposal.id] = _dummyProposal;\\n        latestProposalIds[_dummyProposal.proposer] = _dummyProposal.id;\\n\\n        for (uint256 index = 0; index < _members.length; index++) {\\n            members[_members[index]] = true;\\n            emit MemberAdded(_members[index]);\\n        }\\n\\n        emit ProposalCreated(\\n            _dummyProposal.id,\\n            address(this),\\n            proposalSignatures[_dummyProposal.id],\\n            proposalCalldatas[_dummyProposal.id],\\n            0,\\n            \\\"\\\"\\n        );\\n    }\\n\\n    /**\\n     * @notice Function used to add new members to the committee.\\n     * @param _member Member address.\\n     */\\n    function addMember(address _member) external onlyOwner {\\n        require(members[_member] == false, \\\"PACT::addMember: already a member\\\");\\n\\n        members[_member] = true;\\n\\n        emit MemberAdded(_member);\\n    }\\n\\n    /**\\n     * @notice Function used to remove members from the committee.\\n     * @param _member Member address.\\n     */\\n    function removeMember(address _member) external onlyOwner {\\n        require(members[_member] == true, \\\"PACT::removeMember: not a member\\\");\\n\\n        members[_member] = false;\\n\\n        emit MemberRemoved(_member);\\n    }\\n\\n    /**\\n     * @notice Function used to propose a new proposal. Sender must have delegates above the proposal threshold.\\n     * @param _signatures Function signatures for proposal calls.\\n     * @param _calldatas Calldatas for proposal calls.\\n     * @param _description String description of the proposal.\\n     * @return Proposal id of new proposal.\\n     */\\n    function propose(\\n        string[] memory _signatures,\\n        bytes[] memory _calldatas,\\n        string memory _description\\n    ) external onlyMember returns (uint256) {\\n        require(\\n            _signatures.length == _calldatas.length,\\n            \\\"PACT::propose: proposal function information arity mismatch\\\"\\n        );\\n        require(_signatures.length != 0, \\\"PACT::propose: must provide actions\\\");\\n        require(_signatures.length <= PROPOSAL_MAX_OPERATIONS, \\\"PACT::propose: too many actions\\\");\\n\\n        uint256 _latestProposalId = latestProposalIds[msg.sender];\\n        if (_latestProposalId != 0) {\\n            ProposalState proposersLatestProposalState = state(_latestProposalId);\\n            require(\\n                proposersLatestProposalState != ProposalState.Active,\\n                \\\"PACT::propose: one live proposal per proposer, found an already active proposal\\\"\\n            );\\n            require(\\n                proposersLatestProposalState != ProposalState.Pending,\\n                \\\"PACT::propose: one live proposal per proposer, found an already pending proposal\\\"\\n            );\\n        }\\n\\n        uint256 _endBlock = add256(block.number, MAX_VOTING_PERIOD); // (518400) 30 days\\n\\n        Proposal memory _newProposal = Proposal({\\n            id: proposalCount,\\n            proposer: msg.sender,\\n            endBlock: _endBlock,\\n            forVotes: 0,\\n            againstVotes: 0,\\n            abstainVotes: 0,\\n            canceled: false,\\n            executed: false\\n        });\\n        proposalCount++;\\n\\n        proposals[_newProposal.id] = _newProposal;\\n        proposalSignatures[_newProposal.id] = _signatures;\\n        proposalCalldatas[_newProposal.id] = _calldatas;\\n        latestProposalIds[_newProposal.proposer] = _newProposal.id;\\n\\n        emit ProposalCreated(\\n            _newProposal.id,\\n            msg.sender,\\n            _signatures,\\n            _calldatas,\\n            _endBlock,\\n            _description\\n        );\\n        return _newProposal.id;\\n    }\\n\\n    /**\\n     * @notice Executes a queued proposal if eta has passed\\n     * @param _proposalId The id of the proposal to execute\\n     */\\n    function execute(uint256 _proposalId) external onlyMember payable {\\n        require(\\n            state(_proposalId) == ProposalState.Succeeded,\\n            \\\"PACT::execute: proposal can only be executed if it is succeeded\\\"\\n        );\\n        Proposal storage _proposal = proposals[_proposalId];\\n        _proposal.executed = true;\\n        for (uint256 i = 0; i < proposalCalldatas[_proposalId].length; i++) {\\n            bytes memory _callData;\\n            if (bytes(proposalSignatures[_proposalId][i]).length == 0) {\\n                _callData = proposalCalldatas[_proposalId][i];\\n            } else {\\n                _callData = abi.encodePacked(\\n                    bytes4(keccak256(bytes(proposalSignatures[_proposalId][i]))),\\n                    proposalCalldatas[_proposalId][i]\\n                );\\n            }\\n\\n            // solium-disable-next-line security/no-call-value\\n            (bool _success, ) = address(communityAdmin).call{value: 0}(_callData);\\n            require(_success, \\\"PACT::execute: Transaction execution reverted.\\\");\\n        }\\n        emit ProposalExecuted(_proposalId);\\n    }\\n\\n    /**\\n     * @notice Cancels a proposal only if sender is the proposer, or proposer delegates dropped below proposal threshold\\n     * @param _proposalId The id of the proposal to cancel\\n     */\\n    function cancel(uint256 _proposalId) external onlyMember {\\n        require(\\n            state(_proposalId) != ProposalState.Executed,\\n            \\\"PACT::cancel: cannot cancel executed proposal\\\"\\n        );\\n\\n        Proposal storage _proposal = proposals[_proposalId];\\n        require(msg.sender == _proposal.proposer, \\\"PACT::cancel: proposer not allowed\\\");\\n\\n        _proposal.canceled = true;\\n\\n        emit ProposalCanceled(_proposalId);\\n    }\\n\\n    /**\\n     * @notice Gets actions of a proposal.\\n     * @param _proposalId Proposal to query.\\n     * @return signatures Function signatures for proposal calls.\\n     * @return calldatas Calldatas for proposal calls.\\n     */\\n    function getActions(uint256 _proposalId)\\n        external\\n        view\\n        returns (string[] memory signatures, bytes[] memory calldatas)\\n    {\\n        return (proposalSignatures[_proposalId], proposalCalldatas[_proposalId]);\\n    }\\n\\n    /**\\n     * @notice Gets the receipt for a voter on a given proposal\\n     * @param _proposalId the id of proposal\\n     * @param _voter The address of the voter\\n     * @return The voting receipt\\n     */\\n    function getReceipt(uint256 _proposalId, address _voter)\\n        external\\n        view\\n        returns (Receipt memory)\\n    {\\n        return proposalReceipts[_proposalId][_voter];\\n    }\\n\\n    /**\\n     * @notice Gets the state of a proposal\\n     * @param _proposalId The id of the proposal\\n     * @return Proposal state\\n     */\\n    function state(uint256 _proposalId) public view returns (ProposalState) {\\n        require(proposalCount > _proposalId, \\\"PACT::state: invalid proposal id\\\");\\n        Proposal storage _proposal = proposals[_proposalId];\\n\\n        if (_proposal.canceled) {\\n            return ProposalState.Canceled;\\n        } else if (_proposal.executed) {\\n            return ProposalState.Executed;\\n        } else if (block.number > _proposal.endBlock) {\\n            return ProposalState.Expired;\\n        } else if (\\n            _proposal.forVotes > _proposal.againstVotes && _proposal.forVotes >= quorumVotes\\n        ) {\\n            return ProposalState.Succeeded;\\n        } else {\\n            return ProposalState.Active;\\n        }\\n    }\\n\\n    /**\\n     * @notice Cast a vote for a proposal\\n     * @param _proposalId The id of the proposal to vote on\\n     * @param _support The support value for the vote. 0=against, 1=for, 2=abstain\\n     */\\n    function castVote(uint256 _proposalId, uint8 _support) external onlyMember {\\n        emit VoteCast(\\n            msg.sender,\\n            _proposalId,\\n            _support,\\n            castVoteInternal(msg.sender, _proposalId, _support),\\n            \\\"\\\"\\n        );\\n    }\\n\\n    /**\\n     * @notice Internal function that caries out voting logic\\n     * @param _voter The voter that is casting their vote\\n     * @param _proposalId The id of the proposal to vote on\\n     * @param _support The support value for the vote. 0=against, 1=for, 2=abstain\\n     * @return The number of votes cast\\n     */\\n    function castVoteInternal(\\n        address _voter,\\n        uint256 _proposalId,\\n        uint8 _support\\n    ) internal returns (uint96) {\\n        require(\\n            state(_proposalId) == ProposalState.Active,\\n            \\\"PACT::castVoteInternal: voting is closed\\\"\\n        );\\n        require(_support <= 2, \\\"PACT::castVoteInternal: invalid vote type\\\");\\n        Proposal storage _proposal = proposals[_proposalId];\\n        Receipt storage _receipt = proposalReceipts[_proposalId][_voter];\\n        require(_receipt.hasVoted == false, \\\"PACT::castVoteInternal: voter already voted\\\");\\n        uint96 _votes = 1;\\n\\n        if (_support == 0) {\\n            _proposal.againstVotes = add256(_proposal.againstVotes, _votes);\\n        } else if (_support == 1) {\\n            _proposal.forVotes = add256(_proposal.forVotes, _votes);\\n        } else if (_support == 2) {\\n            _proposal.abstainVotes = add256(_proposal.abstainVotes, _votes);\\n        }\\n\\n        _receipt.hasVoted = true;\\n        _receipt.support = _support;\\n        _receipt.votes = _votes;\\n\\n        return _votes;\\n    }\\n\\n    /**\\n     * @notice Owner function for setting the quorum votes\\n     * @param _newQuorumVotes new quorum votes\\n     */\\n    function setQuorumVotes(uint256 _newQuorumVotes) external onlyOwner {\\n        require(_newQuorumVotes >= 1, \\\"PACT::_setQuorumVotes: invalid quorum votes\\\");\\n\\n        uint256 _oldQuorumVotes = quorumVotes;\\n        quorumVotes = _newQuorumVotes;\\n\\n        emit QuorumVotesSet(_oldQuorumVotes, _newQuorumVotes);\\n    }\\n\\n    function add256(uint256 _a, uint256 _b) internal pure returns (uint256) {\\n        uint256 _c = _a + _b;\\n        require(_c >= _a, \\\"addition overflow\\\");\\n        return _c;\\n    }\\n\\n    function sub256(uint256 _a, uint256 _b) internal pure returns (uint256) {\\n        require(_b <= _a, \\\"subtraction underflow\\\");\\n        return _a - _b;\\n    }\\n\\n    function add96(\\n        uint96 _a,\\n        uint96 _b,\\n        string memory _errorMessage\\n    ) internal pure returns (uint96) {\\n        uint96 _c = _a + _b;\\n        require(_c >= _a, _errorMessage);\\n        return _c;\\n    }\\n}\\n\",\"keccak256\":\"0x6c260d60bcf7eb6d9469d753ecffb0915267729efa6fd328a922e27a7142d719\",\"license\":\"Apache-2.0\"},\"contracts/governor/ubiCommittee/interfaces/IUBICommittee.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n// import \\\"./ICommunity.sol\\\";\\n// import \\\"../../treasury/interfaces/ITreasury.sol\\\";\\n// import \\\"../../governance/interfaces/IUBICommittee.sol\\\";\\n\\ninterface IUBICommittee {\\n    //\\n}\\n\",\"keccak256\":\"0x1a2e34ba0542587a3c615310e3beb76770e95ad358213e4a917f7a3b76014305\",\"license\":\"Apache-2.0\"},\"contracts/governor/ubiCommittee/interfaces/UBICommitteeStorageV1.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\\\";\\nimport \\\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\\\";\\nimport \\\"../../../community/interfaces/ICommunityAdmin.sol\\\";\\nimport \\\"./IUBICommittee.sol\\\";\\n\\nabstract contract UBICommitteeStorageV1 is IUBICommittee {\\n    ProxyAdmin public communityProxyAdmin;\\n    ICommunityAdmin public communityAdmin;\\n\\n    /// @notice The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed\\n    uint256 public quorumVotes;\\n\\n    /// @notice The total number of proposals\\n    uint256 public proposalCount;\\n\\n    /// @notice The committee members\\n    mapping(address => bool) public members;\\n\\n    /// @notice The official record of all proposals ever proposed\\n    mapping(uint256 => Proposal) public proposals;\\n    /// @notice The official each proposal's signatures:\\n    /// An ordered list of function signatures to be called\\n    mapping(uint256 => string[]) public proposalSignatures;\\n    /// @notice The official each proposal's calldatas:\\n    /// An ordered list of calldata to be passed to each call\\n    mapping(uint256 => bytes[]) public proposalCalldatas;\\n    /// @notice The official each proposal's receipts:\\n    /// Receipts of ballots for the entire set of voters\\n    mapping(uint256 => mapping(address => Receipt)) public proposalReceipts;\\n\\n    /// @notice The latest proposal for each proposer\\n    mapping(address => uint256) public latestProposalIds;\\n\\n    struct Proposal {\\n        // Unique id for looking up a proposal\\n        uint256 id;\\n        // Creator of the proposal\\n        address proposer;\\n        // The block at which voting ends: votes must be cast prior to this block\\n        uint256 endBlock;\\n        // Current number of votes in favor of this proposal\\n        uint256 forVotes;\\n        // Current number of votes in opposition to this proposal\\n        uint256 againstVotes;\\n        // Current number of votes for abstaining for this proposal\\n        uint256 abstainVotes;\\n        // Flag marking whether the proposal has been canceled\\n        bool canceled;\\n        // Flag marking whether the proposal has been executed\\n        bool executed;\\n    }\\n\\n    /// @notice Ballot receipt record for a voter\\n    struct Receipt {\\n        // Whether or not a vote has been cast\\n        bool hasVoted;\\n        // Whether or not the voter supports the proposal or abstains\\n        uint8 support;\\n        // The number of votes the voter had, which were cast\\n        uint96 votes;\\n    }\\n\\n    /// @notice Possible states that a proposal may be in\\n    enum ProposalState {\\n        Pending,\\n        Active,\\n        Canceled,\\n        Expired,\\n        Succeeded,\\n        Executed\\n    }\\n}\\n\",\"keccak256\":\"0xb2a352851435a73f8e28657b10f9ab38c32cda64446facc872562a67f1429434\",\"license\":\"Apache-2.0\"},\"contracts/treasury/interfaces/ITreasury.sol\":{\"content\":\"//SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"../../community/interfaces/ICommunityAdmin.sol\\\";\\nimport \\\"./IUniswapV2Router.sol\\\";\\n\\ninterface ITreasury {\\n    struct Token {\\n        uint256 rate;\\n        address[] exchangePath;\\n    }\\n\\n    function getVersion() external returns(uint256);\\n    function communityAdmin() external view returns(ICommunityAdmin);\\n    function uniswapRouter() external view returns(IUniswapV2Router);\\n    function updateCommunityAdmin(ICommunityAdmin _communityAdmin) external;\\n    function updateUniswapRouter(IUniswapV2Router _uniswapRouter) external;\\n    function transfer(IERC20 _token, address _to, uint256 _amount) external;\\n    function isToken(address _tokenAddress) external view returns (bool);\\n    function tokenListLength() external view returns (uint256);\\n    function tokenListAt(uint256 _index) external view returns (address);\\n    function tokens(address _tokenAddress) external view returns (uint256 rate, address[] memory exchangePath);\\n    function setToken(address _tokenAddress, uint256 _rate, address[] calldata _exchangePath) external;\\n    function removeToken(address _tokenAddress) external;\\n    function getConvertedAmount(address _tokenAddress, uint256 _amount) external view returns (uint256);\\n    function convertAmount(\\n        address _tokenAddress,\\n        uint256 _amountIn,\\n        uint256 _amountOutMin,\\n        address[] memory _exchangePath,\\n        uint256 _deadline\\n    ) external;\\n}\\n\",\"keccak256\":\"0x28f21d39880e3ef9bcd2422b109ac6fdc2eab02a65d3d28f154afbf2ed8b7599\",\"license\":\"Apache-2.0\"},\"contracts/treasury/interfaces/IUniswapV2Router.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.4;\\n\\ninterface IUniswapV2Router {\\n    function factory() external pure returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint amountADesired,\\n        uint amountBDesired,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB, uint liquidity);\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountA, uint amountB);\\n    function swapExactTokensForTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapTokensForExactTokens(\\n        uint amountOut,\\n        uint amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n\\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n\\n    function pairFor(address tokenA, address tokenB) external view returns (address);\\n}\\n\",\"keccak256\":\"0x5a12eebf4cf3741e1b1a30a4315096ae6d545af2e07a92e544d05739ceb811e9\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506134b7806100206000396000f3fe608060405260043610620001a15760003560e01c80635678138811620000e2578063a64e024a1162000095578063da35c664116200006c578063da35c6641462000610578063e23a9a521462000628578063f2fde38b14620006f3578063fe0d94c1146200071857600080fd5b8063a64e024a14620005ad578063c8eb690214620005c6578063ca6d56dc14620005eb57600080fd5b80635678138814620004865780635fac917a14620004ab5780636617674314620004cd578063715018a614620005505780638da5cb5b1462000568578063a4a53a13146200058857600080fd5b806324bc1a6411620001585780633e4f49e6116200012f5780633e4f49e614620003d457806340e58ee51462000408578063463e34be146200042d5780634e42b06d146200045257600080fd5b806324bc1a641462000370578063328dd982146200038857806336e7048a14620003bd57600080fd5b8063013cf08b14620001a6578063016a0416146200026457806302ec8f9e146200029f57806308ae4b0c14620002c65780630b1ca49a146200030b57806317977c611462000330575b600080fd5b348015620001b357600080fd5b5062000218620001c5366004620025e5565b609c60205260009081526040902080546001820154600283015460038401546004850154600586015460069096015494956001600160a01b03909416949293919290919060ff8082169161010090041688565b604080519889526001600160a01b039097166020890152958701949094526060860192909252608085015260a0840152151560c0830152151560e0820152610100015b60405180910390f35b3480156200027157600080fd5b5060975462000286906001600160a01b031681565b6040516001600160a01b0390911681526020016200025b565b348015620002ac57600080fd5b50620002c4620002be366004620025e5565b6200072f565b005b348015620002d357600080fd5b50620002fa620002e5366004620024be565b609b6020526000908152604090205460ff1681565b60405190151581526020016200025b565b3480156200031857600080fd5b50620002c46200032a366004620024be565b62000812565b3480156200033d57600080fd5b50620003616200034f366004620024be565b60a06020526000908152604090205481565b6040519081526020016200025b565b3480156200037d57600080fd5b506200036160995481565b3480156200039557600080fd5b50620003ad620003a7366004620025e5565b62000906565b6040516200025b92919062002971565b348015620003ca57600080fd5b5062000361600a81565b348015620003e157600080fd5b50620003f9620003f3366004620025e5565b62000ae1565b6040516200025b9190620029b8565b3480156200041557600080fd5b50620002c462000427366004620025e5565b62000bc9565b3480156200043a57600080fd5b50620002c46200044c36600462002630565b62000d4c565b3480156200045f57600080fd5b506200047762000471366004620026be565b62001193565b6040516200025b9190620029a3565b3480156200049357600080fd5b50620002c4620004a5366004620026e0565b62001255565b348015620004b857600080fd5b5060985462000286906001600160a01b031681565b348015620004da57600080fd5b5062000527620004ec366004620025fe565b609f60209081526000928352604080842090915290825290205460ff808216916101008104909116906201000090046001600160601b031683565b60408051931515845260ff90921660208401526001600160601b0316908201526060016200025b565b3480156200055d57600080fd5b50620002c4620012f9565b3480156200057557600080fd5b506033546001600160a01b031662000286565b3480156200059557600080fd5b5062000477620005a7366004620026be565b62001334565b348015620005ba57600080fd5b50620003616207e90081565b348015620005d357600080fd5b5062000361620005e5366004620024dd565b62001351565b348015620005f857600080fd5b50620002c46200060a366004620024be565b620017ed565b3480156200061d57600080fd5b5062000361609a5481565b3480156200063557600080fd5b50620006c262000647366004620025fe565b6040805160608101825260008082526020820181905291810191909152506000918252609f602090815260408084206001600160a01b03939093168452918152918190208151606081018352905460ff8082161515835261010082041693820193909352620100009092046001600160601b03169082015290565b6040805182511515815260208084015160ff1690820152918101516001600160601b0316908201526060016200025b565b3480156200070057600080fd5b50620002c462000712366004620024be565b620018e4565b620002c462000729366004620025e5565b62001986565b6033546001600160a01b03163314620007655760405162461bcd60e51b81526004016200075c90620029e1565b60405180910390fd5b6001811015620007cc5760405162461bcd60e51b815260206004820152602b60248201527f504143543a3a5f73657451756f72756d566f7465733a20696e76616c6964207160448201526a756f72756d20766f74657360a81b60648201526084016200075c565b609980549082905560408051828152602081018490527fffff0a251408cb8f05a4fc2ab0bdffe28e1519cb8ee5bdb6531e5d6ca51aaf7591015b60405180910390a15050565b6033546001600160a01b031633146200083f5760405162461bcd60e51b81526004016200075c90620029e1565b6001600160a01b0381166000908152609b602052604090205460ff161515600114620008ae5760405162461bcd60e51b815260206004820181905260248201527f504143543a3a72656d6f76654d656d6265723a206e6f742061206d656d62657260448201526064016200075c565b6001600160a01b0381166000818152609b6020908152604091829020805460ff1916905590519182527f6e76fb4c77256006d9c38ec7d82b45a8c8f3c27b1d6766fffc42dfb8de68449291015b60405180910390a150565b6000818152609d60209081526040808320609e835281842081548351818602810186019094528084526060958695939492938592919084015b82821015620009f5578382906000526020600020018054620009619062002c53565b80601f01602080910402602001604051908101604052809291908181526020018280546200098f9062002c53565b8015620009e05780601f10620009b457610100808354040283529160200191620009e0565b820191906000526020600020905b815481529060010190602001808311620009c257829003601f168201915b5050505050815260200190600101906200093f565b50505050915080805480602002602001604051908101604052809291908181526020016000905b8282101562000ad257838290600052602060002001805462000a3e9062002c53565b80601f016020809104026020016040519081016040528092919081815260200182805462000a6c9062002c53565b801562000abd5780601f1062000a915761010080835404028352916020019162000abd565b820191906000526020600020905b81548152906001019060200180831162000a9f57829003601f168201915b50505050508152602001906001019062000a1c565b50505050905091509150915091565b600081609a541162000b365760405162461bcd60e51b815260206004820181905260248201527f504143543a3a73746174653a20696e76616c69642070726f706f73616c20696460448201526064016200075c565b6000828152609c60205260409020600681015460ff161562000b5b5750600292915050565b6006810154610100900460ff161562000b775750600592915050565b806002015443111562000b8d5750600392915050565b8060040154816003015411801562000bab5750609954816003015410155b1562000bba5750600492915050565b50600192915050565b50919050565b336000908152609b602052604090205460ff16151560011462000c005760405162461bcd60e51b81526004016200075c9062002a16565b600562000c0d8262000ae1565b600581111562000c2d57634e487b7160e01b600052602160045260246000fd5b141562000c935760405162461bcd60e51b815260206004820152602d60248201527f504143543a3a63616e63656c3a2063616e6e6f742063616e63656c206578656360448201526c1d5d1959081c1c9bdc1bdcd85b609a1b60648201526084016200075c565b6000818152609c6020526040902060018101546001600160a01b0316331462000d0a5760405162461bcd60e51b815260206004820152602260248201527f504143543a3a63616e63656c3a2070726f706f736572206e6f7420616c6c6f77604482015261195960f21b60648201526084016200075c565b60068101805460ff191660011790556040517f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c90620008069084815260200190565b600054610100900460ff1662000d695760005460ff161562000d6d565b303b155b62000dd25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016200075c565b600054610100900460ff1615801562000df5576000805461ffff19166101011790555b600185101562000e5d5760405162461bcd60e51b815260206004820152602c60248201527f504143543a3a696e697469616c697a653a20696e76616c69642070726f706f7360448201526b185b081d1a1c995cda1bdb1960a21b60648201526084016200075c565b8185111562000eb95760405162461bcd60e51b815260206004820152602160248201527f504143543a3a696e697469616c697a653a20706172616d73206d69736d6174636044820152600d60fb1b60648201526084016200075c565b62000ec362001d88565b62000ecd62001dc6565b60405162000edb9062002198565b604051809103906000f08015801562000ef8573d6000803e3d6000fd5b50609780546001600160a01b03199081166001600160a01b03938416179091556098805490911691861691909117905560998590556040805161010081018252609a80548083523060208401526000938301849052606083018490526080830184905260a08301849052600160c084015260e08301849052919262000f7d8362002c8a565b909155505080516000908152609c602090815260408083208451808255838601516001830180546001600160a01b039092166001600160a01b031990921682179055838701516002840155606087015160038401556080870151600484015560a080880151600585015560c08801516006909401805460e08a015115156101000261ff00199615159690961661ffff199091161794909417909355855292528220555b8381101562001118576001609b60008787858181106200105057634e487b7160e01b600052603260045260246000fd5b9050602002016020810190620010679190620024be565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790557fb251eb052afc73ffd02ffe85ad79990a8b3fed60d76dbc2fa2fdd7123dffd914858583818110620010d157634e487b7160e01b600052603260045260246000fd5b9050602002016020810190620010e89190620024be565b6040516001600160a01b03909116815260200160405180910390a1806200110f8162002c8a565b91505062001020565b5080516000818152609d6020908152604080832085518452609e90925280832090517fd21260fef4e3a940974fea60f4f0358e0c66662bfca670bbbc844c9d6077f87994620011709490933093909290919062002af7565b60405180910390a15080156200118c576000805461ff00191690555b5050505050565b609e6020528160005260406000208181548110620011b057600080fd5b90600052602060002001600091509150508054620011ce9062002c53565b80601f0160208091040260200160405190810160405280929190818152602001828054620011fc9062002c53565b80156200124d5780601f1062001221576101008083540402835291602001916200124d565b820191906000526020600020905b8154815290600101906020018083116200122f57829003601f168201915b505050505081565b336000908152609b602052604090205460ff1615156001146200128c5760405162461bcd60e51b81526004016200075c9062002a16565b337fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda48383620012bd84838362001dfa565b6040805193845260ff90921660208401526001600160601b03169082015260806060820181905260009082015260a00160405180910390a25050565b6033546001600160a01b03163314620013265760405162461bcd60e51b81526004016200075c90620029e1565b62001332600062002058565b565b609d6020528160005260406000208181548110620011b057600080fd5b336000908152609b602052604081205460ff161515600114620013885760405162461bcd60e51b81526004016200075c9062002a16565b8251845114620014015760405162461bcd60e51b815260206004820152603b60248201527f504143543a3a70726f706f73653a2070726f706f73616c2066756e6374696f6e60448201527f20696e666f726d6174696f6e206172697479206d69736d61746368000000000060648201526084016200075c565b83516200145d5760405162461bcd60e51b815260206004820152602360248201527f504143543a3a70726f706f73653a206d7573742070726f7669646520616374696044820152626f6e7360e81b60648201526084016200075c565b600a84511115620014b15760405162461bcd60e51b815260206004820152601f60248201527f504143543a3a70726f706f73653a20746f6f206d616e7920616374696f6e730060448201526064016200075c565b33600090815260a0602052604090205480156200163c576000620014d58262000ae1565b90506001816005811115620014fa57634e487b7160e01b600052602160045260246000fd5b1415620015885760405162461bcd60e51b815260206004820152604f60248201527f504143543a3a70726f706f73653a206f6e65206c6976652070726f706f73616c60448201527f207065722070726f706f7365722c20666f756e6420616e20616c72656164792060648201526e1858dd1a5d99481c1c9bdc1bdcd85b608a1b608482015260a4016200075c565b6000816005811115620015ab57634e487b7160e01b600052602160045260246000fd5b14156200163a5760405162461bcd60e51b815260206004820152605060248201527f504143543a3a70726f706f73653a206f6e65206c6976652070726f706f73616c60448201527f207065722070726f706f7365722c20666f756e6420616e20616c72656164792060648201526f1c195b991a5b99c81c1c9bdc1bdcd85b60821b608482015260a4016200075c565b505b60006200164d436207e900620020aa565b6040805161010081018252609a80548083523360208401529282018490526000606083018190526080830181905260a0830181905260c0830181905260e083018190529394509092620016a08362002c8a565b909155505080516000908152609c602090815260408083208451808255838601516001830180546001600160a01b039092166001600160a01b0319909216919091179055828601516002830155606086015160038301556080860151600483015560a0860151600583015560c08601516006909201805460e088015115156101000261ff00199415159490941661ffff1990911617929092179091558352609d8252909120885162001755928a0190620021a6565b5080516000908152609e60209081526040909120875162001779928901906200220a565b5080516020808301516001600160a01b0316600090815260a090915260409081902091909155815190517fd21260fef4e3a940974fea60f4f0358e0c66662bfca670bbbc844c9d6077f87991620017da9133908b908b9088908c9062002a8e565b60405180910390a1519695505050505050565b6033546001600160a01b031633146200181a5760405162461bcd60e51b81526004016200075c90620029e1565b6001600160a01b0381166000908152609b602052604090205460ff16156200188f5760405162461bcd60e51b815260206004820152602160248201527f504143543a3a6164644d656d6265723a20616c72656164792061206d656d62656044820152603960f91b60648201526084016200075c565b6001600160a01b0381166000818152609b6020908152604091829020805460ff1916600117905590519182527fb251eb052afc73ffd02ffe85ad79990a8b3fed60d76dbc2fa2fdd7123dffd9149101620008fb565b6033546001600160a01b03163314620019115760405162461bcd60e51b81526004016200075c90620029e1565b6001600160a01b038116620019785760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016200075c565b620019838162002058565b50565b336000908152609b602052604090205460ff161515600114620019bd5760405162461bcd60e51b81526004016200075c9062002a16565b6004620019ca8262000ae1565b6005811115620019ea57634e487b7160e01b600052602160045260246000fd5b1462001a5f5760405162461bcd60e51b815260206004820152603f60248201527f504143543a3a657865637574653a2070726f706f73616c2063616e206f6e6c7960448201527f206265206578656375746564206966206974206973207375636365656465640060648201526084016200075c565b6000818152609c6020526040812060068101805461ff001916610100179055905b6000838152609e602052604090205481101562001d56576000838152609d602052604090208054606091908390811062001aca57634e487b7160e01b600052603260045260246000fd5b90600052602060002001805462001ae19062002c53565b1515905062001bbc576000848152609e6020526040902080548390811062001b1957634e487b7160e01b600052603260045260246000fd5b90600052602060002001805462001b309062002c53565b80601f016020809104026020016040519081016040528092919081815260200182805462001b5e9062002c53565b801562001baf5780601f1062001b835761010080835404028352916020019162001baf565b820191906000526020600020905b81548152906001019060200180831162001b9157829003601f168201915b5050505050905062001c6e565b6000848152609d6020526040902080548390811062001beb57634e487b7160e01b600052603260045260246000fd5b9060005260206000200160405162001c04919062002963565b6040518091039020609e6000868152602001908152602001600020838154811062001c3f57634e487b7160e01b600052603260045260246000fd5b9060005260206000200160405160200162001c5c9291906200291f565b60405160208183030381529060405290505b6098546040516000916001600160a01b031690829062001c9090859062002945565b60006040518083038185875af1925050503d806000811462001ccf576040519150601f19603f3d011682016040523d82523d6000602084013e62001cd4565b606091505b505090508062001d3e5760405162461bcd60e51b815260206004820152602e60248201527f504143543a3a657865637574653a205472616e73616374696f6e20657865637560448201526d3a34b7b7103932bb32b93a32b21760911b60648201526084016200075c565b5050808062001d4d9062002c8a565b91505062001a80565b506040518281527f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f9060200162000806565b600054610100900460ff1662001db25760405162461bcd60e51b81526004016200075c9062002a43565b62001dbc62002108565b6200133262002132565b600054610100900460ff1662001df05760405162461bcd60e51b81526004016200075c9062002a43565b6200133262002167565b6000600162001e098462000ae1565b600581111562001e2957634e487b7160e01b600052602160045260246000fd5b1462001e895760405162461bcd60e51b815260206004820152602860248201527f504143543a3a63617374566f7465496e7465726e616c3a20766f74696e6720696044820152671cc818db1bdcd95960c21b60648201526084016200075c565b60028260ff16111562001ef15760405162461bcd60e51b815260206004820152602960248201527f504143543a3a63617374566f7465496e7465726e616c3a20696e76616c696420604482015268766f7465207479706560b81b60648201526084016200075c565b6000838152609c60209081526040808320609f83528184206001600160a01b0389168552909252909120805460ff161562001f835760405162461bcd60e51b815260206004820152602b60248201527f504143543a3a63617374566f7465496e7465726e616c3a20766f74657220616c60448201526a1c9958591e481d9bdd195960aa1b60648201526084016200075c565b600160ff851662001fb25762001fa78360040154826001600160601b0316620020aa565b60048401556200200f565b8460ff166001141562001fe35762001fd88360030154826001600160601b0316620020aa565b60038401556200200f565b8460ff16600214156200200f57620020098360050154826001600160601b0316620020aa565b60058401555b81546001600160601b03821662010000026dffffffffffffffffffffffff00001960ff88166101000261ffff199093169290921760011791909116179091559150509392505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080620020b9838562002c05565b905083811015620021015760405162461bcd60e51b81526020600482015260116024820152706164646974696f6e206f766572666c6f7760781b60448201526064016200075c565b9392505050565b600054610100900460ff16620013325760405162461bcd60e51b81526004016200075c9062002a43565b600054610100900460ff166200215c5760405162461bcd60e51b81526004016200075c9062002a43565b620013323362002058565b600054610100900460ff16620021915760405162461bcd60e51b81526004016200075c9062002a43565b6001606555565b6107978062002ceb83390190565b828054828255906000526020600020908101928215620021f8579160200282015b82811115620021f85782518051620021e79184916020909101906200226a565b5091602001919060010190620021c7565b5062002206929150620022f5565b5090565b8280548282559060005260206000209081019282156200225c579160200282015b828111156200225c57825180516200224b9184916020909101906200226a565b50916020019190600101906200222b565b506200220692915062002316565b828054620022789062002c53565b90600052602060002090601f0160209004810192826200229c5760008555620022e7565b82601f10620022b757805160ff1916838001178555620022e7565b82800160010185558215620022e7579182015b82811115620022e7578251825591602001919060010190620022ca565b506200220692915062002337565b80821115620022065760006200230c82826200234e565b50600101620022f5565b80821115620022065760006200232d82826200234e565b5060010162002316565b5b8082111562002206576000815560010162002338565b5080546200235c9062002c53565b6000825580601f106200236d575050565b601f01602090049060005260206000209081019062001983919062002337565b600067ffffffffffffffff831115620023aa57620023aa62002cbe565b620023bf601f8401601f191660200162002baa565b9050828152838383011115620023d457600080fd5b828260208301376000602084830101529392505050565b600082601f830112620023fc578081fd5b81356020620024156200240f8362002bde565b62002baa565b80838252828201915082860187848660051b890101111562002435578586fd5b855b858110156200248f57813567ffffffffffffffff81111562002457578788fd5b8801603f81018a1362002468578788fd5b6200247b8a87830135604084016200238d565b855250928401929084019060010162002437565b5090979650505050505050565b600082601f830112620024ad578081fd5b62002101838335602085016200238d565b600060208284031215620024d0578081fd5b8135620021018162002cd4565b600080600060608486031215620024f2578182fd5b833567ffffffffffffffff808211156200250a578384fd5b818601915086601f8301126200251e578384fd5b81356020620025316200240f8362002bde565b8083825282820191508286018b848660051b890101111562002551578889fd5b885b858110156200258f578135878111156200256b578a8bfd5b6200257b8e87838c01016200249c565b855250928401929084019060010162002553565b50909850505087013592505080821115620025a8578384fd5b620025b687838801620023eb565b93506040860135915080821115620025cc578283fd5b50620025db868287016200249c565b9150509250925092565b600060208284031215620025f7578081fd5b5035919050565b6000806040838503121562002611578182fd5b823591506020830135620026258162002cd4565b809150509250929050565b6000806000806060858703121562002646578081fd5b8435935060208501356200265a8162002cd4565b9250604085013567ffffffffffffffff8082111562002677578283fd5b818701915087601f8301126200268b578283fd5b8135818111156200269a578384fd5b8860208260051b8501011115620026af578384fd5b95989497505060200194505050565b60008060408385031215620026d1578182fd5b50508035926020909101359150565b60008060408385031215620026f3578182fd5b82359150602083013560ff8116811462002625578182fd5b600081518084526020808501808196508360051b81019150828601855b858110156200275657828403895262002743848351620027fb565b9885019893509084019060010162002728565b5091979650505050505050565b600081548084526020808501808196508360051b81019150858552828520855b85811015620027565782840389526200279d8483620028a0565b9885019893506001918201910162002783565b600081518084526020808501808196508360051b81019150828601855b8581101562002756578284038952620027e8848351620027fb565b98850198935090840190600101620027cd565b600081518084526200281581602086016020860162002c20565b601f01601f19169290920160200192915050565b60008154620028388162002c53565b60018281168015620028535760018114620028655762002896565b60ff1984168752828701945062002896565b8560005260208060002060005b858110156200288d5781548a82015290840190820162002872565b50505082870194505b5050505092915050565b60008154620028af8162002c53565b808552602060018381168015620028cf5760018114620028e45762002914565b60ff1985168884015260408801955062002914565b866000528260002060005b858110156200290c5781548a8201860152908301908401620028ef565b890184019650505b505050505092915050565b6001600160e01b03198316815260006200293d600483018462002829565b949350505050565b600082516200295981846020870162002c20565b9190910192915050565b600062002101828462002829565b604081526000620029866040830185620027b0565b82810360208401526200299a81856200270b565b95945050505050565b602081526000620021016020830184620027fb565b6020810160068310620029db57634e487b7160e01b600052602160045260246000fd5b91905290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601390820152722820a1aa1d1d102737ba10309036b2b6b132b960691b604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b8681526001600160a01b038616602082015260c06040820181905260009062002aba90830187620027b0565b828103606084015262002ace81876200270b565b905084608084015282810360a084015262002aea8185620027fb565b9998505050505050505050565b600060c08201878352602060018060a01b0388168185015260c0604085015281875480845260e08601915060e08160051b8701019350888552828520855b8281101562002b665787860360df1901845262002b538683620028a0565b9550928401926001918201910162002b35565b5050505050828103606084015262002b7f818662002763565b905083608084015282810360a084015262002b9e816000815260200190565b98975050505050505050565b604051601f8201601f1916810167ffffffffffffffff8111828210171562002bd65762002bd662002cbe565b604052919050565b600067ffffffffffffffff82111562002bfb5762002bfb62002cbe565b5060051b60200190565b6000821982111562002c1b5762002c1b62002ca8565b500190565b60005b8381101562002c3d57818101518382015260200162002c23565b8381111562002c4d576000848401525b50505050565b600181811c9082168062002c6857607f821691505b6020821081141562000bc357634e487b7160e01b600052602260045260246000fd5b600060001982141562002ca15762002ca162002ca8565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146200198357600080fdfe608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6107198061007e6000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead1461016457600080fd5b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b3660046104d8565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610517565b610254565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461054f565b6102de565b34801561013057600080fd5b506100d161013f366004610517565b61036f565b34801561015057600080fd5b506100d161015f3660046104d8565b6103c7565b34801561017057600080fd5b506100a061017f3660046104d8565b610462565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d91906104fb565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f90610683565b60405180910390fd5b6102526000610488565b565b6000546001600160a01b0316331461027e5760405162461bcd60e51b815260040161023f90610683565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b1580156102c257600080fd5b505af11580156102d6573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103085760405162461bcd60e51b815260040161023f90610683565b60405163278f794360e11b81526001600160a01b03841690634f1ef2869034906103389086908690600401610620565b6000604051808303818588803b15801561035157600080fd5b505af1158015610365573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103995760405162461bcd60e51b815260040161023f90610683565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102a8565b6000546001600160a01b031633146103f15760405162461bcd60e51b815260040161023f90610683565b6001600160a01b0381166104565760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b61045f81610488565b50565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156104e9578081fd5b81356104f4816106ce565b9392505050565b60006020828403121561050c578081fd5b81516104f4816106ce565b60008060408385031215610529578081fd5b8235610534816106ce565b91506020830135610544816106ce565b809150509250929050565b600080600060608486031215610563578081fd5b833561056e816106ce565b9250602084013561057e816106ce565b9150604084013567ffffffffffffffff8082111561059a578283fd5b818601915086601f8301126105ad578283fd5b8135818111156105bf576105bf6106b8565b604051601f8201601f19908116603f011681019083821181831017156105e7576105e76106b8565b816040528281528960208487010111156105ff578586fd5b82602086016020830137856020848301015280955050505050509250925092565b60018060a01b0383168152600060206040818401528351806040850152825b8181101561065b5785810183015185820160600152820161063f565b8181111561066c5783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461045f57600080fdfea2646970667358221220e38caf5ca305d28cfea5924808a41fd6f9ab62ed165ed1becf8858d95ea882a264736f6c63430008040033a2646970667358221220351cdc72e3479b3f5b44323faeb5c7372e1fd37bff4b52aa6938eb4c6544247364736f6c63430008040033",
  "deployedBytecode": "0x608060405260043610620001a15760003560e01c80635678138811620000e2578063a64e024a1162000095578063da35c664116200006c578063da35c6641462000610578063e23a9a521462000628578063f2fde38b14620006f3578063fe0d94c1146200071857600080fd5b8063a64e024a14620005ad578063c8eb690214620005c6578063ca6d56dc14620005eb57600080fd5b80635678138814620004865780635fac917a14620004ab5780636617674314620004cd578063715018a614620005505780638da5cb5b1462000568578063a4a53a13146200058857600080fd5b806324bc1a6411620001585780633e4f49e6116200012f5780633e4f49e614620003d457806340e58ee51462000408578063463e34be146200042d5780634e42b06d146200045257600080fd5b806324bc1a641462000370578063328dd982146200038857806336e7048a14620003bd57600080fd5b8063013cf08b14620001a6578063016a0416146200026457806302ec8f9e146200029f57806308ae4b0c14620002c65780630b1ca49a146200030b57806317977c611462000330575b600080fd5b348015620001b357600080fd5b5062000218620001c5366004620025e5565b609c60205260009081526040902080546001820154600283015460038401546004850154600586015460069096015494956001600160a01b03909416949293919290919060ff8082169161010090041688565b604080519889526001600160a01b039097166020890152958701949094526060860192909252608085015260a0840152151560c0830152151560e0820152610100015b60405180910390f35b3480156200027157600080fd5b5060975462000286906001600160a01b031681565b6040516001600160a01b0390911681526020016200025b565b348015620002ac57600080fd5b50620002c4620002be366004620025e5565b6200072f565b005b348015620002d357600080fd5b50620002fa620002e5366004620024be565b609b6020526000908152604090205460ff1681565b60405190151581526020016200025b565b3480156200031857600080fd5b50620002c46200032a366004620024be565b62000812565b3480156200033d57600080fd5b50620003616200034f366004620024be565b60a06020526000908152604090205481565b6040519081526020016200025b565b3480156200037d57600080fd5b506200036160995481565b3480156200039557600080fd5b50620003ad620003a7366004620025e5565b62000906565b6040516200025b92919062002971565b348015620003ca57600080fd5b5062000361600a81565b348015620003e157600080fd5b50620003f9620003f3366004620025e5565b62000ae1565b6040516200025b9190620029b8565b3480156200041557600080fd5b50620002c462000427366004620025e5565b62000bc9565b3480156200043a57600080fd5b50620002c46200044c36600462002630565b62000d4c565b3480156200045f57600080fd5b506200047762000471366004620026be565b62001193565b6040516200025b9190620029a3565b3480156200049357600080fd5b50620002c4620004a5366004620026e0565b62001255565b348015620004b857600080fd5b5060985462000286906001600160a01b031681565b348015620004da57600080fd5b5062000527620004ec366004620025fe565b609f60209081526000928352604080842090915290825290205460ff808216916101008104909116906201000090046001600160601b031683565b60408051931515845260ff90921660208401526001600160601b0316908201526060016200025b565b3480156200055d57600080fd5b50620002c4620012f9565b3480156200057557600080fd5b506033546001600160a01b031662000286565b3480156200059557600080fd5b5062000477620005a7366004620026be565b62001334565b348015620005ba57600080fd5b50620003616207e90081565b348015620005d357600080fd5b5062000361620005e5366004620024dd565b62001351565b348015620005f857600080fd5b50620002c46200060a366004620024be565b620017ed565b3480156200061d57600080fd5b5062000361609a5481565b3480156200063557600080fd5b50620006c262000647366004620025fe565b6040805160608101825260008082526020820181905291810191909152506000918252609f602090815260408084206001600160a01b03939093168452918152918190208151606081018352905460ff8082161515835261010082041693820193909352620100009092046001600160601b03169082015290565b6040805182511515815260208084015160ff1690820152918101516001600160601b0316908201526060016200025b565b3480156200070057600080fd5b50620002c462000712366004620024be565b620018e4565b620002c462000729366004620025e5565b62001986565b6033546001600160a01b03163314620007655760405162461bcd60e51b81526004016200075c90620029e1565b60405180910390fd5b6001811015620007cc5760405162461bcd60e51b815260206004820152602b60248201527f504143543a3a5f73657451756f72756d566f7465733a20696e76616c6964207160448201526a756f72756d20766f74657360a81b60648201526084016200075c565b609980549082905560408051828152602081018490527fffff0a251408cb8f05a4fc2ab0bdffe28e1519cb8ee5bdb6531e5d6ca51aaf7591015b60405180910390a15050565b6033546001600160a01b031633146200083f5760405162461bcd60e51b81526004016200075c90620029e1565b6001600160a01b0381166000908152609b602052604090205460ff161515600114620008ae5760405162461bcd60e51b815260206004820181905260248201527f504143543a3a72656d6f76654d656d6265723a206e6f742061206d656d62657260448201526064016200075c565b6001600160a01b0381166000818152609b6020908152604091829020805460ff1916905590519182527f6e76fb4c77256006d9c38ec7d82b45a8c8f3c27b1d6766fffc42dfb8de68449291015b60405180910390a150565b6000818152609d60209081526040808320609e835281842081548351818602810186019094528084526060958695939492938592919084015b82821015620009f5578382906000526020600020018054620009619062002c53565b80601f01602080910402602001604051908101604052809291908181526020018280546200098f9062002c53565b8015620009e05780601f10620009b457610100808354040283529160200191620009e0565b820191906000526020600020905b815481529060010190602001808311620009c257829003601f168201915b5050505050815260200190600101906200093f565b50505050915080805480602002602001604051908101604052809291908181526020016000905b8282101562000ad257838290600052602060002001805462000a3e9062002c53565b80601f016020809104026020016040519081016040528092919081815260200182805462000a6c9062002c53565b801562000abd5780601f1062000a915761010080835404028352916020019162000abd565b820191906000526020600020905b81548152906001019060200180831162000a9f57829003601f168201915b50505050508152602001906001019062000a1c565b50505050905091509150915091565b600081609a541162000b365760405162461bcd60e51b815260206004820181905260248201527f504143543a3a73746174653a20696e76616c69642070726f706f73616c20696460448201526064016200075c565b6000828152609c60205260409020600681015460ff161562000b5b5750600292915050565b6006810154610100900460ff161562000b775750600592915050565b806002015443111562000b8d5750600392915050565b8060040154816003015411801562000bab5750609954816003015410155b1562000bba5750600492915050565b50600192915050565b50919050565b336000908152609b602052604090205460ff16151560011462000c005760405162461bcd60e51b81526004016200075c9062002a16565b600562000c0d8262000ae1565b600581111562000c2d57634e487b7160e01b600052602160045260246000fd5b141562000c935760405162461bcd60e51b815260206004820152602d60248201527f504143543a3a63616e63656c3a2063616e6e6f742063616e63656c206578656360448201526c1d5d1959081c1c9bdc1bdcd85b609a1b60648201526084016200075c565b6000818152609c6020526040902060018101546001600160a01b0316331462000d0a5760405162461bcd60e51b815260206004820152602260248201527f504143543a3a63616e63656c3a2070726f706f736572206e6f7420616c6c6f77604482015261195960f21b60648201526084016200075c565b60068101805460ff191660011790556040517f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c90620008069084815260200190565b600054610100900460ff1662000d695760005460ff161562000d6d565b303b155b62000dd25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016200075c565b600054610100900460ff1615801562000df5576000805461ffff19166101011790555b600185101562000e5d5760405162461bcd60e51b815260206004820152602c60248201527f504143543a3a696e697469616c697a653a20696e76616c69642070726f706f7360448201526b185b081d1a1c995cda1bdb1960a21b60648201526084016200075c565b8185111562000eb95760405162461bcd60e51b815260206004820152602160248201527f504143543a3a696e697469616c697a653a20706172616d73206d69736d6174636044820152600d60fb1b60648201526084016200075c565b62000ec362001d88565b62000ecd62001dc6565b60405162000edb9062002198565b604051809103906000f08015801562000ef8573d6000803e3d6000fd5b50609780546001600160a01b03199081166001600160a01b03938416179091556098805490911691861691909117905560998590556040805161010081018252609a80548083523060208401526000938301849052606083018490526080830184905260a08301849052600160c084015260e08301849052919262000f7d8362002c8a565b909155505080516000908152609c602090815260408083208451808255838601516001830180546001600160a01b039092166001600160a01b031990921682179055838701516002840155606087015160038401556080870151600484015560a080880151600585015560c08801516006909401805460e08a015115156101000261ff00199615159690961661ffff199091161794909417909355855292528220555b8381101562001118576001609b60008787858181106200105057634e487b7160e01b600052603260045260246000fd5b9050602002016020810190620010679190620024be565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790557fb251eb052afc73ffd02ffe85ad79990a8b3fed60d76dbc2fa2fdd7123dffd914858583818110620010d157634e487b7160e01b600052603260045260246000fd5b9050602002016020810190620010e89190620024be565b6040516001600160a01b03909116815260200160405180910390a1806200110f8162002c8a565b91505062001020565b5080516000818152609d6020908152604080832085518452609e90925280832090517fd21260fef4e3a940974fea60f4f0358e0c66662bfca670bbbc844c9d6077f87994620011709490933093909290919062002af7565b60405180910390a15080156200118c576000805461ff00191690555b5050505050565b609e6020528160005260406000208181548110620011b057600080fd5b90600052602060002001600091509150508054620011ce9062002c53565b80601f0160208091040260200160405190810160405280929190818152602001828054620011fc9062002c53565b80156200124d5780601f1062001221576101008083540402835291602001916200124d565b820191906000526020600020905b8154815290600101906020018083116200122f57829003601f168201915b505050505081565b336000908152609b602052604090205460ff1615156001146200128c5760405162461bcd60e51b81526004016200075c9062002a16565b337fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda48383620012bd84838362001dfa565b6040805193845260ff90921660208401526001600160601b03169082015260806060820181905260009082015260a00160405180910390a25050565b6033546001600160a01b03163314620013265760405162461bcd60e51b81526004016200075c90620029e1565b62001332600062002058565b565b609d6020528160005260406000208181548110620011b057600080fd5b336000908152609b602052604081205460ff161515600114620013885760405162461bcd60e51b81526004016200075c9062002a16565b8251845114620014015760405162461bcd60e51b815260206004820152603b60248201527f504143543a3a70726f706f73653a2070726f706f73616c2066756e6374696f6e60448201527f20696e666f726d6174696f6e206172697479206d69736d61746368000000000060648201526084016200075c565b83516200145d5760405162461bcd60e51b815260206004820152602360248201527f504143543a3a70726f706f73653a206d7573742070726f7669646520616374696044820152626f6e7360e81b60648201526084016200075c565b600a84511115620014b15760405162461bcd60e51b815260206004820152601f60248201527f504143543a3a70726f706f73653a20746f6f206d616e7920616374696f6e730060448201526064016200075c565b33600090815260a0602052604090205480156200163c576000620014d58262000ae1565b90506001816005811115620014fa57634e487b7160e01b600052602160045260246000fd5b1415620015885760405162461bcd60e51b815260206004820152604f60248201527f504143543a3a70726f706f73653a206f6e65206c6976652070726f706f73616c60448201527f207065722070726f706f7365722c20666f756e6420616e20616c72656164792060648201526e1858dd1a5d99481c1c9bdc1bdcd85b608a1b608482015260a4016200075c565b6000816005811115620015ab57634e487b7160e01b600052602160045260246000fd5b14156200163a5760405162461bcd60e51b815260206004820152605060248201527f504143543a3a70726f706f73653a206f6e65206c6976652070726f706f73616c60448201527f207065722070726f706f7365722c20666f756e6420616e20616c72656164792060648201526f1c195b991a5b99c81c1c9bdc1bdcd85b60821b608482015260a4016200075c565b505b60006200164d436207e900620020aa565b6040805161010081018252609a80548083523360208401529282018490526000606083018190526080830181905260a0830181905260c0830181905260e083018190529394509092620016a08362002c8a565b909155505080516000908152609c602090815260408083208451808255838601516001830180546001600160a01b039092166001600160a01b0319909216919091179055828601516002830155606086015160038301556080860151600483015560a0860151600583015560c08601516006909201805460e088015115156101000261ff00199415159490941661ffff1990911617929092179091558352609d8252909120885162001755928a0190620021a6565b5080516000908152609e60209081526040909120875162001779928901906200220a565b5080516020808301516001600160a01b0316600090815260a090915260409081902091909155815190517fd21260fef4e3a940974fea60f4f0358e0c66662bfca670bbbc844c9d6077f87991620017da9133908b908b9088908c9062002a8e565b60405180910390a1519695505050505050565b6033546001600160a01b031633146200181a5760405162461bcd60e51b81526004016200075c90620029e1565b6001600160a01b0381166000908152609b602052604090205460ff16156200188f5760405162461bcd60e51b815260206004820152602160248201527f504143543a3a6164644d656d6265723a20616c72656164792061206d656d62656044820152603960f91b60648201526084016200075c565b6001600160a01b0381166000818152609b6020908152604091829020805460ff1916600117905590519182527fb251eb052afc73ffd02ffe85ad79990a8b3fed60d76dbc2fa2fdd7123dffd9149101620008fb565b6033546001600160a01b03163314620019115760405162461bcd60e51b81526004016200075c90620029e1565b6001600160a01b038116620019785760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016200075c565b620019838162002058565b50565b336000908152609b602052604090205460ff161515600114620019bd5760405162461bcd60e51b81526004016200075c9062002a16565b6004620019ca8262000ae1565b6005811115620019ea57634e487b7160e01b600052602160045260246000fd5b1462001a5f5760405162461bcd60e51b815260206004820152603f60248201527f504143543a3a657865637574653a2070726f706f73616c2063616e206f6e6c7960448201527f206265206578656375746564206966206974206973207375636365656465640060648201526084016200075c565b6000818152609c6020526040812060068101805461ff001916610100179055905b6000838152609e602052604090205481101562001d56576000838152609d602052604090208054606091908390811062001aca57634e487b7160e01b600052603260045260246000fd5b90600052602060002001805462001ae19062002c53565b1515905062001bbc576000848152609e6020526040902080548390811062001b1957634e487b7160e01b600052603260045260246000fd5b90600052602060002001805462001b309062002c53565b80601f016020809104026020016040519081016040528092919081815260200182805462001b5e9062002c53565b801562001baf5780601f1062001b835761010080835404028352916020019162001baf565b820191906000526020600020905b81548152906001019060200180831162001b9157829003601f168201915b5050505050905062001c6e565b6000848152609d6020526040902080548390811062001beb57634e487b7160e01b600052603260045260246000fd5b9060005260206000200160405162001c04919062002963565b6040518091039020609e6000868152602001908152602001600020838154811062001c3f57634e487b7160e01b600052603260045260246000fd5b9060005260206000200160405160200162001c5c9291906200291f565b60405160208183030381529060405290505b6098546040516000916001600160a01b031690829062001c9090859062002945565b60006040518083038185875af1925050503d806000811462001ccf576040519150601f19603f3d011682016040523d82523d6000602084013e62001cd4565b606091505b505090508062001d3e5760405162461bcd60e51b815260206004820152602e60248201527f504143543a3a657865637574653a205472616e73616374696f6e20657865637560448201526d3a34b7b7103932bb32b93a32b21760911b60648201526084016200075c565b5050808062001d4d9062002c8a565b91505062001a80565b506040518281527f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f9060200162000806565b600054610100900460ff1662001db25760405162461bcd60e51b81526004016200075c9062002a43565b62001dbc62002108565b6200133262002132565b600054610100900460ff1662001df05760405162461bcd60e51b81526004016200075c9062002a43565b6200133262002167565b6000600162001e098462000ae1565b600581111562001e2957634e487b7160e01b600052602160045260246000fd5b1462001e895760405162461bcd60e51b815260206004820152602860248201527f504143543a3a63617374566f7465496e7465726e616c3a20766f74696e6720696044820152671cc818db1bdcd95960c21b60648201526084016200075c565b60028260ff16111562001ef15760405162461bcd60e51b815260206004820152602960248201527f504143543a3a63617374566f7465496e7465726e616c3a20696e76616c696420604482015268766f7465207479706560b81b60648201526084016200075c565b6000838152609c60209081526040808320609f83528184206001600160a01b0389168552909252909120805460ff161562001f835760405162461bcd60e51b815260206004820152602b60248201527f504143543a3a63617374566f7465496e7465726e616c3a20766f74657220616c60448201526a1c9958591e481d9bdd195960aa1b60648201526084016200075c565b600160ff851662001fb25762001fa78360040154826001600160601b0316620020aa565b60048401556200200f565b8460ff166001141562001fe35762001fd88360030154826001600160601b0316620020aa565b60038401556200200f565b8460ff16600214156200200f57620020098360050154826001600160601b0316620020aa565b60058401555b81546001600160601b03821662010000026dffffffffffffffffffffffff00001960ff88166101000261ffff199093169290921760011791909116179091559150509392505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080620020b9838562002c05565b905083811015620021015760405162461bcd60e51b81526020600482015260116024820152706164646974696f6e206f766572666c6f7760781b60448201526064016200075c565b9392505050565b600054610100900460ff16620013325760405162461bcd60e51b81526004016200075c9062002a43565b600054610100900460ff166200215c5760405162461bcd60e51b81526004016200075c9062002a43565b620013323362002058565b600054610100900460ff16620021915760405162461bcd60e51b81526004016200075c9062002a43565b6001606555565b6107978062002ceb83390190565b828054828255906000526020600020908101928215620021f8579160200282015b82811115620021f85782518051620021e79184916020909101906200226a565b5091602001919060010190620021c7565b5062002206929150620022f5565b5090565b8280548282559060005260206000209081019282156200225c579160200282015b828111156200225c57825180516200224b9184916020909101906200226a565b50916020019190600101906200222b565b506200220692915062002316565b828054620022789062002c53565b90600052602060002090601f0160209004810192826200229c5760008555620022e7565b82601f10620022b757805160ff1916838001178555620022e7565b82800160010185558215620022e7579182015b82811115620022e7578251825591602001919060010190620022ca565b506200220692915062002337565b80821115620022065760006200230c82826200234e565b50600101620022f5565b80821115620022065760006200232d82826200234e565b5060010162002316565b5b8082111562002206576000815560010162002338565b5080546200235c9062002c53565b6000825580601f106200236d575050565b601f01602090049060005260206000209081019062001983919062002337565b600067ffffffffffffffff831115620023aa57620023aa62002cbe565b620023bf601f8401601f191660200162002baa565b9050828152838383011115620023d457600080fd5b828260208301376000602084830101529392505050565b600082601f830112620023fc578081fd5b81356020620024156200240f8362002bde565b62002baa565b80838252828201915082860187848660051b890101111562002435578586fd5b855b858110156200248f57813567ffffffffffffffff81111562002457578788fd5b8801603f81018a1362002468578788fd5b6200247b8a87830135604084016200238d565b855250928401929084019060010162002437565b5090979650505050505050565b600082601f830112620024ad578081fd5b62002101838335602085016200238d565b600060208284031215620024d0578081fd5b8135620021018162002cd4565b600080600060608486031215620024f2578182fd5b833567ffffffffffffffff808211156200250a578384fd5b818601915086601f8301126200251e578384fd5b81356020620025316200240f8362002bde565b8083825282820191508286018b848660051b890101111562002551578889fd5b885b858110156200258f578135878111156200256b578a8bfd5b6200257b8e87838c01016200249c565b855250928401929084019060010162002553565b50909850505087013592505080821115620025a8578384fd5b620025b687838801620023eb565b93506040860135915080821115620025cc578283fd5b50620025db868287016200249c565b9150509250925092565b600060208284031215620025f7578081fd5b5035919050565b6000806040838503121562002611578182fd5b823591506020830135620026258162002cd4565b809150509250929050565b6000806000806060858703121562002646578081fd5b8435935060208501356200265a8162002cd4565b9250604085013567ffffffffffffffff8082111562002677578283fd5b818701915087601f8301126200268b578283fd5b8135818111156200269a578384fd5b8860208260051b8501011115620026af578384fd5b95989497505060200194505050565b60008060408385031215620026d1578182fd5b50508035926020909101359150565b60008060408385031215620026f3578182fd5b82359150602083013560ff8116811462002625578182fd5b600081518084526020808501808196508360051b81019150828601855b858110156200275657828403895262002743848351620027fb565b9885019893509084019060010162002728565b5091979650505050505050565b600081548084526020808501808196508360051b81019150858552828520855b85811015620027565782840389526200279d8483620028a0565b9885019893506001918201910162002783565b600081518084526020808501808196508360051b81019150828601855b8581101562002756578284038952620027e8848351620027fb565b98850198935090840190600101620027cd565b600081518084526200281581602086016020860162002c20565b601f01601f19169290920160200192915050565b60008154620028388162002c53565b60018281168015620028535760018114620028655762002896565b60ff1984168752828701945062002896565b8560005260208060002060005b858110156200288d5781548a82015290840190820162002872565b50505082870194505b5050505092915050565b60008154620028af8162002c53565b808552602060018381168015620028cf5760018114620028e45762002914565b60ff1985168884015260408801955062002914565b866000528260002060005b858110156200290c5781548a8201860152908301908401620028ef565b890184019650505b505050505092915050565b6001600160e01b03198316815260006200293d600483018462002829565b949350505050565b600082516200295981846020870162002c20565b9190910192915050565b600062002101828462002829565b604081526000620029866040830185620027b0565b82810360208401526200299a81856200270b565b95945050505050565b602081526000620021016020830184620027fb565b6020810160068310620029db57634e487b7160e01b600052602160045260246000fd5b91905290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601390820152722820a1aa1d1d102737ba10309036b2b6b132b960691b604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b8681526001600160a01b038616602082015260c06040820181905260009062002aba90830187620027b0565b828103606084015262002ace81876200270b565b905084608084015282810360a084015262002aea8185620027fb565b9998505050505050505050565b600060c08201878352602060018060a01b0388168185015260c0604085015281875480845260e08601915060e08160051b8701019350888552828520855b8281101562002b665787860360df1901845262002b538683620028a0565b9550928401926001918201910162002b35565b5050505050828103606084015262002b7f818662002763565b905083608084015282810360a084015262002b9e816000815260200190565b98975050505050505050565b604051601f8201601f1916810167ffffffffffffffff8111828210171562002bd65762002bd662002cbe565b604052919050565b600067ffffffffffffffff82111562002bfb5762002bfb62002cbe565b5060051b60200190565b6000821982111562002c1b5762002c1b62002ca8565b500190565b60005b8381101562002c3d57818101518382015260200162002c23565b8381111562002c4d576000848401525b50505050565b600181811c9082168062002c6857607f821691505b6020821081141562000bc357634e487b7160e01b600052602260045260246000fd5b600060001982141562002ca15762002ca162002ca8565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146200198357600080fdfe608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6107198061007e6000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead1461016457600080fd5b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b3660046104d8565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610517565b610254565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461054f565b6102de565b34801561013057600080fd5b506100d161013f366004610517565b61036f565b34801561015057600080fd5b506100d161015f3660046104d8565b6103c7565b34801561017057600080fd5b506100a061017f3660046104d8565b610462565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d91906104fb565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f90610683565b60405180910390fd5b6102526000610488565b565b6000546001600160a01b0316331461027e5760405162461bcd60e51b815260040161023f90610683565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b1580156102c257600080fd5b505af11580156102d6573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103085760405162461bcd60e51b815260040161023f90610683565b60405163278f794360e11b81526001600160a01b03841690634f1ef2869034906103389086908690600401610620565b6000604051808303818588803b15801561035157600080fd5b505af1158015610365573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103995760405162461bcd60e51b815260040161023f90610683565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102a8565b6000546001600160a01b031633146103f15760405162461bcd60e51b815260040161023f90610683565b6001600160a01b0381166104565760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b61045f81610488565b50565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156104e9578081fd5b81356104f4816106ce565b9392505050565b60006020828403121561050c578081fd5b81516104f4816106ce565b60008060408385031215610529578081fd5b8235610534816106ce565b91506020830135610544816106ce565b809150509250929050565b600080600060608486031215610563578081fd5b833561056e816106ce565b9250602084013561057e816106ce565b9150604084013567ffffffffffffffff8082111561059a578283fd5b818601915086601f8301126105ad578283fd5b8135818111156105bf576105bf6106b8565b604051601f8201601f19908116603f011681019083821181831017156105e7576105e76106b8565b816040528281528960208487010111156105ff578586fd5b82602086016020830137856020848301015280955050505050509250925092565b60018060a01b0383168152600060206040818401528351806040850152825b8181101561065b5785810183015185820160600152820161063f565b8181111561066c5783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461045f57600080fdfea2646970667358221220e38caf5ca305d28cfea5924808a41fd6f9ab62ed165ed1becf8858d95ea882a264736f6c63430008040033a2646970667358221220351cdc72e3479b3f5b44323faeb5c7372e1fd37bff4b52aa6938eb4c6544247364736f6c63430008040033",
  "devdoc": {
    "events": {
      "TransferERC20(address,address,uint256)": {
        "params": {
          "amount": "Amount of the transaction",
          "to": "Address of the receiver",
          "token": "ERC20 token address"
        }
      },
      "VoteCast(address,uint256,uint8,uint256,string)": {
        "params": {
          "proposalId": "The proposal id which was voted on",
          "reason": "The reason given for the vote by the voter",
          "support": "Support value for the vote. 0=against, 1=for, 2=abstain",
          "voter": "The address which casted a vote",
          "votes": "Number of votes which were cast by the voter"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "addMember(address)": {
        "params": {
          "_member": "Member address."
        }
      },
      "cancel(uint256)": {
        "params": {
          "_proposalId": "The id of the proposal to cancel"
        }
      },
      "castVote(uint256,uint8)": {
        "params": {
          "_proposalId": "The id of the proposal to vote on",
          "_support": "The support value for the vote. 0=against, 1=for, 2=abstain"
        }
      },
      "execute(uint256)": {
        "params": {
          "_proposalId": "The id of the proposal to execute"
        }
      },
      "getActions(uint256)": {
        "params": {
          "_proposalId": "Proposal to query."
        },
        "returns": {
          "calldatas": "Calldatas for proposal calls.",
          "signatures": "Function signatures for proposal calls."
        }
      },
      "getReceipt(uint256,address)": {
        "params": {
          "_proposalId": "the id of proposal",
          "_voter": "The address of the voter"
        },
        "returns": {
          "_0": "The voting receipt"
        }
      },
      "initialize(uint256,address,address[])": {
        "params": {
          "_quorumVotes": "The initial quorum votes"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "propose(string[],bytes[],string)": {
        "params": {
          "_calldatas": "Calldatas for proposal calls.",
          "_description": "String description of the proposal.",
          "_signatures": "Function signatures for proposal calls."
        },
        "returns": {
          "_0": "Proposal id of new proposal."
        }
      },
      "removeMember(address)": {
        "params": {
          "_member": "Member address."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setQuorumVotes(uint256)": {
        "params": {
          "_newQuorumVotes": "new quorum votes"
        }
      },
      "state(uint256)": {
        "params": {
          "_proposalId": "The id of the proposal"
        },
        "returns": {
          "_0": "Proposal state"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "MemberAdded(address)": {
        "notice": "An event emitted when a member is added"
      },
      "MemberRemoved(address)": {
        "notice": "An event emitted when a member is removed"
      },
      "NewImplementation(address,address)": {
        "notice": "Emitted when implementation is changed"
      },
      "ProposalCanceled(uint256)": {
        "notice": "An event emitted when a proposal has been canceled"
      },
      "ProposalCreated(uint256,address,string[],bytes[],uint256,string)": {
        "notice": "An event emitted when a new proposal is created"
      },
      "ProposalExecuted(uint256)": {
        "notice": "An event emitted when a proposal has been executed in the Timelock"
      },
      "QuorumVotesSet(uint256,uint256)": {
        "notice": "An event emitted when the quorum votes is set"
      },
      "TransferERC20(address,address,uint256)": {
        "notice": "Triggered when an amount of an ERC20 has been transferred from this contract to an address"
      },
      "VoteCast(address,uint256,uint8,uint256,string)": {
        "notice": "An event emitted when a vote has been cast on a proposal"
      }
    },
    "kind": "user",
    "methods": {
      "MAX_VOTING_PERIOD()": {
        "notice": "The max setable voting period"
      },
      "PROPOSAL_MAX_OPERATIONS()": {
        "notice": "The maximum number of actions that can be included in a proposal"
      },
      "addMember(address)": {
        "notice": "Function used to add new members to the committee."
      },
      "cancel(uint256)": {
        "notice": "Cancels a proposal only if sender is the proposer, or proposer delegates dropped below proposal threshold"
      },
      "castVote(uint256,uint8)": {
        "notice": "Cast a vote for a proposal"
      },
      "execute(uint256)": {
        "notice": "Executes a queued proposal if eta has passed"
      },
      "getActions(uint256)": {
        "notice": "Gets actions of a proposal."
      },
      "getReceipt(uint256,address)": {
        "notice": "Gets the receipt for a voter on a given proposal"
      },
      "initialize(uint256,address,address[])": {
        "notice": "Used to initialize the contract during delegator contructor"
      },
      "latestProposalIds(address)": {
        "notice": "The latest proposal for each proposer"
      },
      "members(address)": {
        "notice": "The committee members"
      },
      "proposalCalldatas(uint256,uint256)": {
        "notice": "The official each proposal's calldatas: An ordered list of calldata to be passed to each call"
      },
      "proposalCount()": {
        "notice": "The total number of proposals"
      },
      "proposalReceipts(uint256,address)": {
        "notice": "The official each proposal's receipts: Receipts of ballots for the entire set of voters"
      },
      "proposalSignatures(uint256,uint256)": {
        "notice": "The official each proposal's signatures: An ordered list of function signatures to be called"
      },
      "proposals(uint256)": {
        "notice": "The official record of all proposals ever proposed"
      },
      "propose(string[],bytes[],string)": {
        "notice": "Function used to propose a new proposal. Sender must have delegates above the proposal threshold."
      },
      "quorumVotes()": {
        "notice": "The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed"
      },
      "removeMember(address)": {
        "notice": "Function used to remove members from the committee."
      },
      "setQuorumVotes(uint256)": {
        "notice": "Owner function for setting the quorum votes"
      },
      "state(uint256)": {
        "notice": "Gets the state of a proposal"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 542,
        "contract": "contracts/governor/ubiCommittee/UBICommitteeImplementation.sol:UBICommitteeImplementation",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 545,
        "contract": "contracts/governor/ubiCommittee/UBICommitteeImplementation.sol:UBICommitteeImplementation",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 1068,
        "contract": "contracts/governor/ubiCommittee/UBICommitteeImplementation.sol:UBICommitteeImplementation",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 420,
        "contract": "contracts/governor/ubiCommittee/UBICommitteeImplementation.sol:UBICommitteeImplementation",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 534,
        "contract": "contracts/governor/ubiCommittee/UBICommitteeImplementation.sol:UBICommitteeImplementation",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 736,
        "contract": "contracts/governor/ubiCommittee/UBICommitteeImplementation.sol:UBICommitteeImplementation",
        "label": "_status",
        "offset": 0,
        "slot": "101",
        "type": "t_uint256"
      },
      {
        "astId": 779,
        "contract": "contracts/governor/ubiCommittee/UBICommitteeImplementation.sol:UBICommitteeImplementation",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 18127,
        "contract": "contracts/governor/ubiCommittee/UBICommitteeImplementation.sol:UBICommitteeImplementation",
        "label": "communityProxyAdmin",
        "offset": 0,
        "slot": "151",
        "type": "t_contract(ProxyAdmin)2567"
      },
      {
        "astId": 18130,
        "contract": "contracts/governor/ubiCommittee/UBICommitteeImplementation.sol:UBICommitteeImplementation",
        "label": "communityAdmin",
        "offset": 0,
        "slot": "152",
        "type": "t_contract(ICommunityAdmin)12085"
      },
      {
        "astId": 18133,
        "contract": "contracts/governor/ubiCommittee/UBICommitteeImplementation.sol:UBICommitteeImplementation",
        "label": "quorumVotes",
        "offset": 0,
        "slot": "153",
        "type": "t_uint256"
      },
      {
        "astId": 18136,
        "contract": "contracts/governor/ubiCommittee/UBICommitteeImplementation.sol:UBICommitteeImplementation",
        "label": "proposalCount",
        "offset": 0,
        "slot": "154",
        "type": "t_uint256"
      },
      {
        "astId": 18141,
        "contract": "contracts/governor/ubiCommittee/UBICommitteeImplementation.sol:UBICommitteeImplementation",
        "label": "members",
        "offset": 0,
        "slot": "155",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 18147,
        "contract": "contracts/governor/ubiCommittee/UBICommitteeImplementation.sol:UBICommitteeImplementation",
        "label": "proposals",
        "offset": 0,
        "slot": "156",
        "type": "t_mapping(t_uint256,t_struct(Proposal)18189_storage)"
      },
      {
        "astId": 18153,
        "contract": "contracts/governor/ubiCommittee/UBICommitteeImplementation.sol:UBICommitteeImplementation",
        "label": "proposalSignatures",
        "offset": 0,
        "slot": "157",
        "type": "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)"
      },
      {
        "astId": 18159,
        "contract": "contracts/governor/ubiCommittee/UBICommitteeImplementation.sol:UBICommitteeImplementation",
        "label": "proposalCalldatas",
        "offset": 0,
        "slot": "158",
        "type": "t_mapping(t_uint256,t_array(t_bytes_storage)dyn_storage)"
      },
      {
        "astId": 18167,
        "contract": "contracts/governor/ubiCommittee/UBICommitteeImplementation.sol:UBICommitteeImplementation",
        "label": "proposalReceipts",
        "offset": 0,
        "slot": "159",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Receipt)18196_storage))"
      },
      {
        "astId": 18172,
        "contract": "contracts/governor/ubiCommittee/UBICommitteeImplementation.sol:UBICommitteeImplementation",
        "label": "latestProposalIds",
        "offset": 0,
        "slot": "160",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes_storage)dyn_storage": {
        "base": "t_bytes_storage",
        "encoding": "dynamic_array",
        "label": "bytes[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(ICommunityAdmin)12085": {
        "encoding": "inplace",
        "label": "contract ICommunityAdmin",
        "numberOfBytes": "20"
      },
      "t_contract(ProxyAdmin)2567": {
        "encoding": "inplace",
        "label": "contract ProxyAdmin",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(Receipt)18196_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct UBICommitteeStorageV1.Receipt)",
        "numberOfBytes": "32",
        "value": "t_struct(Receipt)18196_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_array(t_bytes_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bytes[])",
        "numberOfBytes": "32",
        "value": "t_array(t_bytes_storage)dyn_storage"
      },
      "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string[])",
        "numberOfBytes": "32",
        "value": "t_array(t_string_storage)dyn_storage"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_struct(Receipt)18196_storage))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => struct UBICommitteeStorageV1.Receipt))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_struct(Receipt)18196_storage)"
      },
      "t_mapping(t_uint256,t_struct(Proposal)18189_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct UBICommitteeStorageV1.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)18189_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Proposal)18189_storage": {
        "encoding": "inplace",
        "label": "struct UBICommitteeStorageV1.Proposal",
        "members": [
          {
            "astId": 18174,
            "contract": "contracts/governor/ubiCommittee/UBICommitteeImplementation.sol:UBICommitteeImplementation",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 18176,
            "contract": "contracts/governor/ubiCommittee/UBICommitteeImplementation.sol:UBICommitteeImplementation",
            "label": "proposer",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 18178,
            "contract": "contracts/governor/ubiCommittee/UBICommitteeImplementation.sol:UBICommitteeImplementation",
            "label": "endBlock",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 18180,
            "contract": "contracts/governor/ubiCommittee/UBICommitteeImplementation.sol:UBICommitteeImplementation",
            "label": "forVotes",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 18182,
            "contract": "contracts/governor/ubiCommittee/UBICommitteeImplementation.sol:UBICommitteeImplementation",
            "label": "againstVotes",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 18184,
            "contract": "contracts/governor/ubiCommittee/UBICommitteeImplementation.sol:UBICommitteeImplementation",
            "label": "abstainVotes",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 18186,
            "contract": "contracts/governor/ubiCommittee/UBICommitteeImplementation.sol:UBICommitteeImplementation",
            "label": "canceled",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          },
          {
            "astId": 18188,
            "contract": "contracts/governor/ubiCommittee/UBICommitteeImplementation.sol:UBICommitteeImplementation",
            "label": "executed",
            "offset": 1,
            "slot": "6",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(Receipt)18196_storage": {
        "encoding": "inplace",
        "label": "struct UBICommitteeStorageV1.Receipt",
        "members": [
          {
            "astId": 18191,
            "contract": "contracts/governor/ubiCommittee/UBICommitteeImplementation.sol:UBICommitteeImplementation",
            "label": "hasVoted",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 18193,
            "contract": "contracts/governor/ubiCommittee/UBICommitteeImplementation.sol:UBICommitteeImplementation",
            "label": "support",
            "offset": 1,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 18195,
            "contract": "contracts/governor/ubiCommittee/UBICommitteeImplementation.sol:UBICommitteeImplementation",
            "label": "votes",
            "offset": 2,
            "slot": "0",
            "type": "t_uint96"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      },
      "t_uint96": {
        "encoding": "inplace",
        "label": "uint96",
        "numberOfBytes": "12"
      }
    }
  }
}