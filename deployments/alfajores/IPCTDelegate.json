{
  "address": "0x44397EF9CD393E1e3461a10f75fF35558fC1C3BC",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "NewAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldImplementation",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "NewImplementation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldPendingAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPendingAdmin",
          "type": "address"
        }
      ],
      "name": "NewPendingAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "indexed": false,
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "ProposalQueued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldProposalThreshold",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newProposalThreshold",
          "type": "uint256"
        }
      ],
      "name": "ProposalThresholdSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldQuorumVotes",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newQuorumVotes",
          "type": "uint256"
        }
      ],
      "name": "QuorumVotesSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "VoteCast",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldVotingDelay",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newVotingDelay",
          "type": "uint256"
        }
      ],
      "name": "VotingDelaySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldVotingPeriod",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newVotingPeriod",
          "type": "uint256"
        }
      ],
      "name": "VotingPeriodSet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BALLOT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_PROPOSAL_THRESHOLD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_VOTING_DELAY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_VOTING_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_PROPOSAL_THRESHOLD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_VOTING_DELAY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_VOTING_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NAME",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PROPOSAL_MAX_OPERATIONS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_acceptAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newPendingAdmin",
          "type": "address"
        }
      ],
      "name": "_setPendingAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newProposalThreshold",
          "type": "uint256"
        }
      ],
      "name": "_setProposalThreshold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newQuorumVotes",
          "type": "uint256"
        }
      ],
      "name": "_setQuorumVotes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newVotingDelay",
          "type": "uint256"
        }
      ],
      "name": "_setVotingDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newVotingPeriod",
          "type": "uint256"
        }
      ],
      "name": "_setVotingPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        }
      ],
      "name": "castVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "castVoteBySig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "castVoteWithReason",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getActions",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "voter",
          "type": "address"
        }
      ],
      "name": "getReceipt",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "hasVoted",
              "type": "bool"
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8"
            },
            {
              "internalType": "uint96",
              "name": "votes",
              "type": "uint96"
            }
          ],
          "internalType": "struct IPCTDelegateStorageV1.Receipt",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "timelock_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "releaseToken_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "votingPeriod_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votingDelay_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "proposalThreshold_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "quorumVotes_",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "latestProposalIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalCalldatas",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "proposalReceipts",
      "outputs": [
        {
          "internalType": "bool",
          "name": "hasVoted",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "uint96",
          "name": "votes",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalSignatures",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalTargets",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalValues",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "abstainVotes",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "canceled",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "propose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "queue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quorumVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "releaseToken",
      "outputs": [
        {
          "internalType": "contract IHasVotes",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum IPCTDelegateStorageV1.ProposalState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timelock",
      "outputs": [
        {
          "internalType": "contract TimelockInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IHasVotes",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xcea30cd7a5cd642e4f4e856c3bd979de04ec2dc470decec3eacb44c87f1d783a",
  "receipt": {
    "to": null,
    "from": "0x2F3340435E283A3d479dF091F913B6EFf96becF5",
    "contractAddress": "0x44397EF9CD393E1e3461a10f75fF35558fC1C3BC",
    "transactionIndex": 0,
    "gasUsed": "3755668",
    "logsBloom": "0x
    "blockHash": "0x48c480b554c79348cbcc50c38828ac4f8a26acce3e0c9c9976742a6179787cec",
    "transactionHash": "0xcea30cd7a5cd642e4f4e856c3bd979de04ec2dc470decec3eacb44c87f1d783a",
    "logs": [],
    "blockNumber": 8499307,
    "cumulativeGasUsed": "3755668",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "1f1713cdb5fc30076049d6d0e6e978a6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldImplementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"NewImplementation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPendingAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"NewPendingAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"ProposalQueued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldProposalThreshold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newProposalThreshold\",\"type\":\"uint256\"}],\"name\":\"ProposalThresholdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldQuorumVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newQuorumVotes\",\"type\":\"uint256\"}],\"name\":\"QuorumVotesSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingDelay\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingDelay\",\"type\":\"uint256\"}],\"name\":\"VotingDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"VotingPeriodSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_PROPOSAL_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_VOTING_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_VOTING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_PROPOSAL_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_VOTING_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_VOTING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROPOSAL_MAX_OPERATIONS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_acceptAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"_setPendingAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newProposalThreshold\",\"type\":\"uint256\"}],\"name\":\"_setProposalThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newQuorumVotes\",\"type\":\"uint256\"}],\"name\":\"_setQuorumVotes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newVotingDelay\",\"type\":\"uint256\"}],\"name\":\"_setVotingDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"_setVotingPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"}],\"name\":\"castVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"castVoteWithReason\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getActions\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"getReceipt\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint96\",\"name\":\"votes\",\"type\":\"uint96\"}],\"internalType\":\"struct IPCTDelegateStorageV1.Receipt\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"timelock_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"releaseToken_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"votingPeriod_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingDelay_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalThreshold_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quorumVotes_\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"latestProposalIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalCalldatas\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"proposalReceipts\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint96\",\"name\":\"votes\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalSignatures\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalTargets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"abstainVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"canceled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"queue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorumVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releaseToken\",\"outputs\":[{\"internalType\":\"contract IHasVotes\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum IPCTDelegateStorageV1.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelock\",\"outputs\":[{\"internalType\":\"contract TimelockInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IHasVotes\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"_acceptAdmin()\":{\"details\":\"Admin function for pending admin to accept role and update admin\"},\"_setPendingAdmin(address)\":{\"details\":\"Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\",\"params\":{\"newPendingAdmin\":\"New pending admin.\"}},\"_setProposalThreshold(uint256)\":{\"details\":\"newProposalThreshold must be greater than the hardcoded min\",\"params\":{\"newProposalThreshold\":\"new proposal threshold\"}},\"_setQuorumVotes(uint256)\":{\"params\":{\"newQuorumVotes\":\"new quorum votes\"}},\"_setVotingDelay(uint256)\":{\"params\":{\"newVotingDelay\":\"new voting delay, in blocks\"}},\"_setVotingPeriod(uint256)\":{\"params\":{\"newVotingPeriod\":\"new voting period, in blocks\"}},\"cancel(uint256)\":{\"params\":{\"proposalId\":\"The id of the proposal to cancel\"}},\"castVote(uint256,uint8)\":{\"params\":{\"proposalId\":\"The id of the proposal to vote on\",\"support\":\"The support value for the vote. 0=against, 1=for, 2=abstain\"}},\"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)\":{\"details\":\"External function that accepts EIP-712 signatures for voting on proposals.\"},\"castVoteWithReason(uint256,uint8,string)\":{\"params\":{\"proposalId\":\"The id of the proposal to vote on\",\"reason\":\"The reason given for the vote by the voter\",\"support\":\"The support value for the vote. 0=against, 1=for, 2=abstain\"}},\"execute(uint256)\":{\"params\":{\"proposalId\":\"The id of the proposal to execute\"}},\"getActions(uint256)\":{\"params\":{\"proposalId\":\"Proposal to query.\"},\"returns\":{\"calldatas\":\"Calldatas for proposal calls.\",\"signatures\":\"Function signatures for proposal calls.\",\"targets\":\"Target addresses for proposal calls.\",\"values\":\"Eth values for proposal calls.\"}},\"getReceipt(uint256,address)\":{\"params\":{\"proposalId\":\"the id of proposal\",\"voter\":\"The address of the voter\"},\"returns\":{\"_0\":\"The voting receipt\"}},\"initialize(address,address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"proposalThreshold_\":\"The initial proposal threshold\",\"quorumVotes_\":\"The initial quorum votes\",\"releaseToken_\":\"The address of the \\\"Release\\\" voting token. If none, specify the zero address.\",\"timelock_\":\"The address of the Timelock\",\"token_\":\"The address of the voting token\",\"votingDelay_\":\"The initial voting delay\",\"votingPeriod_\":\"The initial voting period\"}},\"propose(address[],uint256[],string[],bytes[],string)\":{\"params\":{\"calldatas\":\"Calldatas for proposal calls.\",\"description\":\"String description of the proposal.\",\"signatures\":\"Function signatures for proposal calls.\",\"targets\":\"Target addresses for proposal calls.\",\"values\":\"Eth values for proposal calls.\"},\"returns\":{\"_0\":\"Proposal id of new proposal.\"}},\"queue(uint256)\":{\"params\":{\"proposalId\":\"The id of the proposal to queue\"}},\"state(uint256)\":{\"params\":{\"proposalId\":\"The id of the proposal\"},\"returns\":{\"_0\":\"Proposal state\"}}},\"version\":1},\"userdoc\":{\"events\":{\"NewAdmin(address,address)\":{\"notice\":\"Emitted when pendingAdmin is accepted, which means admin is updated\"},\"NewImplementation(address,address)\":{\"notice\":\"Emitted when implementation is changed\"},\"NewPendingAdmin(address,address)\":{\"notice\":\"Emitted when pendingAdmin is changed\"},\"ProposalCanceled(uint256)\":{\"notice\":\"An event emitted when a proposal has been canceled\"},\"ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)\":{\"notice\":\"An event emitted when a new proposal is created\"},\"ProposalExecuted(uint256)\":{\"notice\":\"An event emitted when a proposal has been executed in the Timelock\"},\"ProposalQueued(uint256,uint256)\":{\"notice\":\"An event emitted when a proposal has been queued in the Timelock\"},\"ProposalThresholdSet(uint256,uint256)\":{\"notice\":\"Emitted when proposal threshold is set\"},\"QuorumVotesSet(uint256,uint256)\":{\"notice\":\"An event emitted when the quorum votes is set\"},\"VoteCast(address,uint256,uint8,uint256,string)\":{\"notice\":\"An event emitted when a vote has been cast on a proposal\"},\"VotingDelaySet(uint256,uint256)\":{\"notice\":\"An event emitted when the voting delay is set\"},\"VotingPeriodSet(uint256,uint256)\":{\"notice\":\"An event emitted when the voting period is set\"}},\"kind\":\"user\",\"methods\":{\"BALLOT_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the ballot struct used by the contract\"},\"DOMAIN_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the contract's domain\"},\"MAX_PROPOSAL_THRESHOLD()\":{\"notice\":\"The maximum setable proposal threshold\"},\"MAX_VOTING_DELAY()\":{\"notice\":\"The max setable voting delay\"},\"MAX_VOTING_PERIOD()\":{\"notice\":\"The max setable voting period\"},\"MIN_PROPOSAL_THRESHOLD()\":{\"notice\":\"The minimum setable proposal threshold\"},\"MIN_VOTING_DELAY()\":{\"notice\":\"The min setable voting delay\"},\"MIN_VOTING_PERIOD()\":{\"notice\":\"The minimum setable voting period\"},\"NAME()\":{\"notice\":\"The name of this contract\"},\"PROPOSAL_MAX_OPERATIONS()\":{\"notice\":\"The maximum number of actions that can be included in a proposal\"},\"_acceptAdmin()\":{\"notice\":\"Accepts transfer of admin rights. msg.sender must be pendingAdmin\"},\"_setPendingAdmin(address)\":{\"notice\":\"Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\"},\"_setProposalThreshold(uint256)\":{\"notice\":\"Admin function for setting the proposal threshold\"},\"_setQuorumVotes(uint256)\":{\"notice\":\"Admin function for setting the quorum votes\"},\"_setVotingDelay(uint256)\":{\"notice\":\"Admin function for setting the voting delay\"},\"_setVotingPeriod(uint256)\":{\"notice\":\"Admin function for setting the voting period\"},\"admin()\":{\"notice\":\"Administrator for this contract\"},\"cancel(uint256)\":{\"notice\":\"Cancels a proposal only if sender is the proposer, or proposer delegates dropped below proposal threshold\"},\"castVote(uint256,uint8)\":{\"notice\":\"Cast a vote for a proposal\"},\"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)\":{\"notice\":\"Cast a vote for a proposal by signature\"},\"castVoteWithReason(uint256,uint8,string)\":{\"notice\":\"Cast a vote for a proposal with a reason\"},\"execute(uint256)\":{\"notice\":\"Executes a queued proposal if eta has passed\"},\"getActions(uint256)\":{\"notice\":\"Gets actions of a proposal.\"},\"getReceipt(uint256,address)\":{\"notice\":\"Gets the receipt for a voter on a given proposal\"},\"implementation()\":{\"notice\":\"Active brains of Governor\"},\"initialize(address,address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Used to initialize the contract during delegator contructor\"},\"latestProposalIds(address)\":{\"notice\":\"The latest proposal for each proposer\"},\"pendingAdmin()\":{\"notice\":\"Pending administrator for this contract\"},\"proposalCalldatas(uint256,uint256)\":{\"notice\":\"The official each proposal's calldatas: An ordered list of calldata to be passed to each call\"},\"proposalCount()\":{\"notice\":\"The total number of proposals\"},\"proposalReceipts(uint256,address)\":{\"notice\":\"The official each proposal's receipts: Receipts of ballots for the entire set of voters\"},\"proposalSignatures(uint256,uint256)\":{\"notice\":\"The official each proposal's signatures: An ordered list of function signatures to be called\"},\"proposalTargets(uint256,uint256)\":{\"notice\":\"The official each proposal's targets: An ordered list of target addresses for calls to be made\"},\"proposalThreshold()\":{\"notice\":\"The number of votes required in order for a voter to become a proposer\"},\"proposalValues(uint256,uint256)\":{\"notice\":\"The official each proposal's values: An ordered list of values (i.e. msg.value) to be passed to the calls to be made\"},\"proposals(uint256)\":{\"notice\":\"The official record of all proposals ever proposed\"},\"propose(address[],uint256[],string[],bytes[],string)\":{\"notice\":\"Function used to propose a new proposal. Sender must have delegates above the proposal threshold.\"},\"queue(uint256)\":{\"notice\":\"Queues a proposal of state succeeded\"},\"quorumVotes()\":{\"notice\":\"The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed\"},\"releaseToken()\":{\"notice\":\"The address of the \\\"Release\\\" governance token\"},\"state(uint256)\":{\"notice\":\"Gets the state of a proposal\"},\"timelock()\":{\"notice\":\"The address of the Governance Timelock\"},\"token()\":{\"notice\":\"The address of the governance token\"},\"votingDelay()\":{\"notice\":\"The delay before voting on a proposal may take place, once proposed, in blocks\"},\"votingPeriod()\":{\"notice\":\"The duration of voting on a proposal, in blocks\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/governor/IPCTDelegate.sol\":\"IPCTDelegate\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8b2abd85d0ece7e866e100e9d47ca9cbec93c87cf71a8d267b2b93eb81f7d5e9\",\"license\":\"MIT\"},\"@ubeswap/governance/contracts/interfaces/IHasVotes.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.3;\\n\\n/**\\n * Reads the votes that an account has.\\n */\\ninterface IHasVotes {\\n    /**\\n     * @notice Gets the current votes balance for `account`\\n     * @param account The address to get votes balance\\n     * @return The number of current votes for `account`\\n     */\\n    function getCurrentVotes(address account) external view returns (uint96);\\n\\n    /**\\n     * @notice Determine the prior number of votes for an account as of a block number\\n     * @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\\n     * @param account The address of the account to check\\n     * @param blockNumber The block number to get the vote balance at\\n     * @return The number of votes the account had as of the given block\\n     */\\n    function getPriorVotes(address account, uint256 blockNumber)\\n        external\\n        view\\n        returns (uint96);\\n}\\n\",\"keccak256\":\"0x5ef48a77f18f580eab395335e8ec85ec9ad49ec7ce813515bd4aa73dfe0e8bf8\",\"license\":\"MIT\"},\"contracts/governor/IPCTDelegate.sol\":{\"content\":\"//SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/proxy/utils/Initializable.sol\\\";\\nimport \\\"./interfaces/IPCTDelegateStorageV1.sol\\\";\\nimport \\\"./interfaces/IPCTEvents.sol\\\";\\n\\ncontract IPCTDelegate is IPCTDelegateStorageV1, IPCTEvents, Initializable {\\n    /// @notice The name of this contract\\n    string public constant NAME = \\\"IPCT\\\";\\n\\n    /// @notice The minimum setable proposal threshold\\n    uint256 public constant MIN_PROPOSAL_THRESHOLD = 100_000_000e18; // 100,000,000 Tokens\\n\\n    /// @notice The maximum setable proposal threshold\\n    uint256 public constant MAX_PROPOSAL_THRESHOLD = 500_000_000e18; // 500,000,000 Tokens\\n\\n    /// @notice The minimum setable voting period\\n    uint256 public constant MIN_VOTING_PERIOD = 17280; // About 24 hours\\n\\n    /// @notice The max setable voting period\\n    uint256 public constant MAX_VOTING_PERIOD = 241920; // About 2 weeks\\n\\n    /// @notice The min setable voting delay\\n    uint256 public constant MIN_VOTING_DELAY = 1;\\n\\n    /// @notice The max setable voting delay\\n    uint256 public constant MAX_VOTING_DELAY = 120960; // About 1 week\\n\\n    /// @notice The maximum number of actions that can be included in a proposal\\n    uint256 public constant PROPOSAL_MAX_OPERATIONS = 10; // 10 actions\\n\\n    /// @notice The EIP-712 typehash for the contract's domain\\n    bytes32 public constant DOMAIN_TYPEHASH =\\n        keccak256(\\\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\\\");\\n\\n    /// @notice The EIP-712 typehash for the ballot struct used by the contract\\n    bytes32 public constant BALLOT_TYPEHASH = keccak256(\\\"Ballot(uint256 proposalId,uint8 support)\\\");\\n\\n    modifier adminOnly() {\\n        require(msg.sender == admin, \\\"Only admin can call\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @notice Used to initialize the contract during delegator contructor\\n     * @param timelock_ The address of the Timelock\\n     * @param token_ The address of the voting token\\n     * @param releaseToken_ The address of the \\\"Release\\\" voting token. If none, specify the zero address.\\n     * @param votingPeriod_ The initial voting period\\n     * @param votingDelay_ The initial voting delay\\n     * @param proposalThreshold_ The initial proposal threshold\\n     * @param quorumVotes_ The initial quorum votes\\n     */\\n    function initialize(\\n        address timelock_,\\n        address token_,\\n        address releaseToken_,\\n        uint256 votingPeriod_,\\n        uint256 votingDelay_,\\n        uint256 proposalThreshold_,\\n        uint256 quorumVotes_\\n    ) public initializer adminOnly {\\n        require(\\n            TimelockInterface(timelock_).admin() == address(this),\\n            \\\"IPCT::initialize: timelock admin is not assigned to IPCTDelegate\\\"\\n        );\\n        require(\\n            votingPeriod_ >= MIN_VOTING_PERIOD && votingPeriod_ <= MAX_VOTING_PERIOD,\\n            \\\"IPCT::initialize: invalid voting period\\\"\\n        );\\n        require(\\n            votingDelay_ >= MIN_VOTING_DELAY && votingDelay_ <= MAX_VOTING_DELAY,\\n            \\\"IPCT::initialize: invalid voting delay\\\"\\n        );\\n        require(\\n            proposalThreshold_ >= MIN_PROPOSAL_THRESHOLD &&\\n                proposalThreshold_ <= MAX_PROPOSAL_THRESHOLD,\\n            \\\"IPCT::initialize: invalid proposal threshold\\\"\\n        );\\n        require(quorumVotes_ >= proposalThreshold_, \\\"IPCT::initialize: invalid quorum votes\\\");\\n        timelock = TimelockInterface(timelock_);\\n        require(\\n            timelock.admin() == address(this),\\n            \\\"IPCT::initialize: timelock admin is not assigned to IPCTDelegate\\\"\\n        );\\n\\n        admin = msg.sender;\\n        token = IHasVotes(token_);\\n        releaseToken = IHasVotes(releaseToken_);\\n        votingPeriod = votingPeriod_;\\n        votingDelay = votingDelay_;\\n        proposalThreshold = proposalThreshold_;\\n        quorumVotes = quorumVotes_;\\n\\n        // Create dummy proposal\\n        Proposal memory dummyProposal = Proposal({\\n            id: proposalCount,\\n            proposer: address(this),\\n            eta: 0,\\n            startBlock: 0,\\n            endBlock: 0,\\n            forVotes: 0,\\n            againstVotes: 0,\\n            abstainVotes: 0,\\n            canceled: true,\\n            executed: false\\n        });\\n        proposalCount++;\\n\\n        proposals[dummyProposal.id] = dummyProposal;\\n        latestProposalIds[dummyProposal.proposer] = dummyProposal.id;\\n\\n        emit ProposalCreated(\\n            dummyProposal.id,\\n            address(this),\\n            proposalTargets[dummyProposal.id],\\n            proposalValues[dummyProposal.id],\\n            proposalSignatures[dummyProposal.id],\\n            proposalCalldatas[dummyProposal.id],\\n            0,\\n            0,\\n            \\\"\\\"\\n        );\\n    }\\n\\n    /**\\n     * @notice Function used to propose a new proposal. Sender must have delegates above the proposal threshold.\\n     * @param targets Target addresses for proposal calls.\\n     * @param values Eth values for proposal calls.\\n     * @param signatures Function signatures for proposal calls.\\n     * @param calldatas Calldatas for proposal calls.\\n     * @param description String description of the proposal.\\n     * @return Proposal id of new proposal.\\n     */\\n    function propose(\\n        address[] memory targets,\\n        uint256[] memory values,\\n        string[] memory signatures,\\n        bytes[] memory calldatas,\\n        string memory description\\n    ) public returns (uint256) {\\n        require(\\n            getPriorVotes(msg.sender, sub256(block.number, 1)) > proposalThreshold,\\n            \\\"IPCT::propose: proposer votes below proposal threshold\\\"\\n        );\\n        require(\\n            targets.length == values.length &&\\n                targets.length == signatures.length &&\\n                targets.length == calldatas.length,\\n            \\\"IPCT::propose: proposal function information arity mismatch\\\"\\n        );\\n        require(targets.length != 0, \\\"IPCT::propose: must provide actions\\\");\\n        require(targets.length <= PROPOSAL_MAX_OPERATIONS, \\\"IPCT::propose: too many actions\\\");\\n\\n        uint256 latestProposalId = latestProposalIds[msg.sender];\\n        if (latestProposalId != 0) {\\n            ProposalState proposersLatestProposalState = state(latestProposalId);\\n            require(\\n                proposersLatestProposalState != ProposalState.Active,\\n                \\\"IPCT::propose: one live proposal per proposer, found an already active proposal\\\"\\n            );\\n            require(\\n                proposersLatestProposalState != ProposalState.Pending,\\n                \\\"IPCT::propose: one live proposal per proposer, found an already pending proposal\\\"\\n            );\\n        }\\n\\n        uint256 startBlock = add256(block.number, votingDelay);\\n        uint256 endBlock = add256(startBlock, votingPeriod);\\n\\n        Proposal memory newProposal = Proposal({\\n            id: proposalCount,\\n            proposer: msg.sender,\\n            eta: 0,\\n            startBlock: startBlock,\\n            endBlock: endBlock,\\n            forVotes: 0,\\n            againstVotes: 0,\\n            abstainVotes: 0,\\n            canceled: false,\\n            executed: false\\n        });\\n        proposalCount++;\\n\\n        proposals[newProposal.id] = newProposal;\\n        proposalTargets[newProposal.id] = targets;\\n        proposalValues[newProposal.id] = values;\\n        proposalSignatures[newProposal.id] = signatures;\\n        proposalCalldatas[newProposal.id] = calldatas;\\n        latestProposalIds[newProposal.proposer] = newProposal.id;\\n\\n        emit ProposalCreated(\\n            newProposal.id,\\n            msg.sender,\\n            targets,\\n            values,\\n            signatures,\\n            calldatas,\\n            startBlock,\\n            endBlock,\\n            description\\n        );\\n        return newProposal.id;\\n    }\\n\\n    /**\\n     * @notice Queues a proposal of state succeeded\\n     * @param proposalId The id of the proposal to queue\\n     */\\n    function queue(uint256 proposalId) external {\\n        require(\\n            state(proposalId) == ProposalState.Succeeded,\\n            \\\"IPCT::queue: proposal can only be queued if it is succeeded\\\"\\n        );\\n        Proposal storage proposal = proposals[proposalId];\\n        uint256 eta = add256(block.timestamp, timelock.delay());\\n        for (uint256 i = 0; i < proposalTargets[proposalId].length; i++) {\\n            queueOrRevertInternal(\\n                proposalTargets[proposalId][i],\\n                proposalValues[proposalId][i],\\n                proposalSignatures[proposalId][i],\\n                proposalCalldatas[proposalId][i],\\n                eta\\n            );\\n        }\\n        proposal.eta = eta;\\n        emit ProposalQueued(proposalId, eta);\\n    }\\n\\n    function queueOrRevertInternal(\\n        address target,\\n        uint256 value,\\n        string memory signature,\\n        bytes memory data,\\n        uint256 eta\\n    ) internal {\\n        require(\\n            !timelock.queuedTransactions(\\n                keccak256(abi.encode(target, value, signature, data, eta))\\n            ),\\n            \\\"IPCT::queueOrRevertInternal: identical proposal action already queued at eta\\\"\\n        );\\n        timelock.queueTransaction(target, value, signature, data, eta);\\n    }\\n\\n    /**\\n     * @notice Executes a queued proposal if eta has passed\\n     * @param proposalId The id of the proposal to execute\\n     */\\n    function execute(uint256 proposalId) external payable {\\n        require(\\n            state(proposalId) == ProposalState.Queued,\\n            \\\"IPCT::execute: proposal can only be executed if it is queued\\\"\\n        );\\n        Proposal storage proposal = proposals[proposalId];\\n        proposal.executed = true;\\n        for (uint256 i = 0; i < proposalTargets[proposalId].length; i++) {\\n            timelock.executeTransaction{value: proposalValues[proposalId][i]}(\\n                proposalTargets[proposalId][i],\\n                proposalValues[proposalId][i],\\n                proposalSignatures[proposalId][i],\\n                proposalCalldatas[proposalId][i],\\n                proposal.eta\\n            );\\n        }\\n        emit ProposalExecuted(proposalId);\\n    }\\n\\n    /**\\n     * @notice Cancels a proposal only if sender is the proposer, or proposer delegates dropped below proposal threshold\\n     * @param proposalId The id of the proposal to cancel\\n     */\\n    function cancel(uint256 proposalId) external {\\n        require(\\n            state(proposalId) != ProposalState.Executed,\\n            \\\"IPCT::cancel: cannot cancel executed proposal\\\"\\n        );\\n\\n        Proposal storage proposal = proposals[proposalId];\\n        require(\\n            msg.sender == proposal.proposer ||\\n                getPriorVotes(proposal.proposer, sub256(block.number, 1)) < proposalThreshold,\\n            \\\"IPCT::cancel: proposer above threshold\\\"\\n        );\\n\\n        proposal.canceled = true;\\n        for (uint256 i = 0; i < proposalTargets[proposalId].length; i++) {\\n            timelock.cancelTransaction(\\n                proposalTargets[proposalId][i],\\n                proposalValues[proposalId][i],\\n                proposalSignatures[proposalId][i],\\n                proposalCalldatas[proposalId][i],\\n                proposal.eta\\n            );\\n        }\\n\\n        emit ProposalCanceled(proposalId);\\n    }\\n\\n    /**\\n     * @notice Gets actions of a proposal.\\n     * @param proposalId Proposal to query.\\n     * @return targets Target addresses for proposal calls.\\n     * @return values Eth values for proposal calls.\\n     * @return signatures Function signatures for proposal calls.\\n     * @return calldatas Calldatas for proposal calls.\\n     */\\n    function getActions(uint256 proposalId)\\n        external\\n        view\\n        returns (\\n            address[] memory targets,\\n            uint256[] memory values,\\n            string[] memory signatures,\\n            bytes[] memory calldatas\\n        )\\n    {\\n        return (\\n            proposalTargets[proposalId],\\n            proposalValues[proposalId],\\n            proposalSignatures[proposalId],\\n            proposalCalldatas[proposalId]\\n        );\\n    }\\n\\n    /**\\n     * @notice Gets the receipt for a voter on a given proposal\\n     * @param proposalId the id of proposal\\n     * @param voter The address of the voter\\n     * @return The voting receipt\\n     */\\n    function getReceipt(uint256 proposalId, address voter) external view returns (Receipt memory) {\\n        return proposalReceipts[proposalId][voter];\\n    }\\n\\n    /**\\n     * @notice Gets the state of a proposal\\n     * @param proposalId The id of the proposal\\n     * @return Proposal state\\n     */\\n    function state(uint256 proposalId) public view returns (ProposalState) {\\n        require(proposalCount > proposalId, \\\"IPCT::state: invalid proposal id\\\");\\n        Proposal storage proposal = proposals[proposalId];\\n\\n        if (proposal.canceled) {\\n            return ProposalState.Canceled;\\n        } else if (block.number <= proposal.startBlock) {\\n            return ProposalState.Pending;\\n        } else if (block.number <= proposal.endBlock) {\\n            return ProposalState.Active;\\n        } else if (proposal.forVotes <= proposal.againstVotes || proposal.forVotes < quorumVotes) {\\n            return ProposalState.Defeated;\\n        } else if (proposal.eta == 0) {\\n            return ProposalState.Succeeded;\\n        } else if (proposal.executed) {\\n            return ProposalState.Executed;\\n        } else if (block.timestamp >= add256(proposal.eta, timelock.GRACE_PERIOD())) {\\n            return ProposalState.Expired;\\n        } else {\\n            return ProposalState.Queued;\\n        }\\n    }\\n\\n    /**\\n     * @notice Cast a vote for a proposal\\n     * @param proposalId The id of the proposal to vote on\\n     * @param support The support value for the vote. 0=against, 1=for, 2=abstain\\n     */\\n    function castVote(uint256 proposalId, uint8 support) external {\\n        emit VoteCast(\\n            msg.sender,\\n            proposalId,\\n            support,\\n            castVoteInternal(msg.sender, proposalId, support),\\n            \\\"\\\"\\n        );\\n    }\\n\\n    /**\\n     * @notice Cast a vote for a proposal with a reason\\n     * @param proposalId The id of the proposal to vote on\\n     * @param support The support value for the vote. 0=against, 1=for, 2=abstain\\n     * @param reason The reason given for the vote by the voter\\n     */\\n    function castVoteWithReason(\\n        uint256 proposalId,\\n        uint8 support,\\n        string calldata reason\\n    ) external {\\n        emit VoteCast(\\n            msg.sender,\\n            proposalId,\\n            support,\\n            castVoteInternal(msg.sender, proposalId, support),\\n            reason\\n        );\\n    }\\n\\n    /**\\n     * @notice Cast a vote for a proposal by signature\\n     * @dev External function that accepts EIP-712 signatures for voting on proposals.\\n     */\\n    function castVoteBySig(\\n        uint256 proposalId,\\n        uint8 support,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external {\\n        bytes32 domainSeparator = keccak256(\\n            abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(NAME)), getChainIdInternal(), address(this))\\n        );\\n        bytes32 structHash = keccak256(abi.encode(BALLOT_TYPEHASH, proposalId, support));\\n        bytes32 digest = keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash));\\n        address signatory = ecrecover(digest, v, r, s);\\n        require(signatory != address(0), \\\"IPCT::castVoteBySig: invalid signature\\\");\\n        emit VoteCast(\\n            signatory,\\n            proposalId,\\n            support,\\n            castVoteInternal(signatory, proposalId, support),\\n            \\\"\\\"\\n        );\\n    }\\n\\n    /**\\n     * @notice Internal function that caries out voting logic\\n     * @param voter The voter that is casting their vote\\n     * @param proposalId The id of the proposal to vote on\\n     * @param support The support value for the vote. 0=against, 1=for, 2=abstain\\n     * @return The number of votes cast\\n     */\\n    function castVoteInternal(\\n        address voter,\\n        uint256 proposalId,\\n        uint8 support\\n    ) internal returns (uint96) {\\n        require(\\n            state(proposalId) == ProposalState.Active,\\n            \\\"IPCT::castVoteInternal: voting is closed\\\"\\n        );\\n        require(support <= 2, \\\"IPCT::castVoteInternal: invalid vote type\\\");\\n        Proposal storage proposal = proposals[proposalId];\\n        Receipt storage receipt = proposalReceipts[proposalId][voter];\\n        require(receipt.hasVoted == false, \\\"IPCT::castVoteInternal: voter already voted\\\");\\n        uint96 votes = getPriorVotes(voter, proposal.startBlock);\\n\\n        if (support == 0) {\\n            proposal.againstVotes = add256(proposal.againstVotes, votes);\\n        } else if (support == 1) {\\n            proposal.forVotes = add256(proposal.forVotes, votes);\\n        } else if (support == 2) {\\n            proposal.abstainVotes = add256(proposal.abstainVotes, votes);\\n        }\\n\\n        receipt.hasVoted = true;\\n        receipt.support = support;\\n        receipt.votes = votes;\\n\\n        return votes;\\n    }\\n\\n    /**\\n     * @notice Admin function for setting the voting delay\\n     * @param newVotingDelay new voting delay, in blocks\\n     */\\n    function _setVotingDelay(uint256 newVotingDelay) external virtual adminOnly {\\n        require(\\n            newVotingDelay >= MIN_VOTING_DELAY && newVotingDelay <= MAX_VOTING_DELAY,\\n            \\\"IPCT::_setVotingDelay: invalid voting delay\\\"\\n        );\\n        uint256 oldVotingDelay = votingDelay;\\n        votingDelay = newVotingDelay;\\n\\n        emit VotingDelaySet(oldVotingDelay, newVotingDelay);\\n    }\\n\\n    /**\\n     * @notice Admin function for setting the quorum votes\\n     * @param newQuorumVotes new quorum votes\\n     */\\n    function _setQuorumVotes(uint256 newQuorumVotes) external adminOnly {\\n        require(newQuorumVotes >= proposalThreshold, \\\"IPCT::_setQuorumVotes: invalid quorum votes\\\");\\n\\n        uint256 oldQuorumVotes = votingDelay;\\n        quorumVotes = newQuorumVotes;\\n\\n        emit QuorumVotesSet(oldQuorumVotes, newQuorumVotes);\\n    }\\n\\n    /**\\n     * @notice Admin function for setting the voting period\\n     * @param newVotingPeriod new voting period, in blocks\\n     */\\n    function _setVotingPeriod(uint256 newVotingPeriod) external virtual adminOnly {\\n        require(\\n            newVotingPeriod >= MIN_VOTING_PERIOD && newVotingPeriod <= MAX_VOTING_PERIOD,\\n            \\\"IPCT::_setVotingPeriod: invalid voting period\\\"\\n        );\\n        uint256 oldVotingPeriod = votingPeriod;\\n        votingPeriod = newVotingPeriod;\\n\\n        emit VotingPeriodSet(oldVotingPeriod, newVotingPeriod);\\n    }\\n\\n    /**\\n     * @notice Admin function for setting the proposal threshold\\n     * @dev newProposalThreshold must be greater than the hardcoded min\\n     * @param newProposalThreshold new proposal threshold\\n     */\\n    function _setProposalThreshold(uint256 newProposalThreshold) external adminOnly {\\n        require(\\n            newProposalThreshold >= MIN_PROPOSAL_THRESHOLD &&\\n                newProposalThreshold <= MAX_PROPOSAL_THRESHOLD,\\n            \\\"IPCT::_setProposalThreshold: invalid proposal threshold\\\"\\n        );\\n        uint256 oldProposalThreshold = proposalThreshold;\\n        proposalThreshold = newProposalThreshold;\\n\\n        emit ProposalThresholdSet(oldProposalThreshold, newProposalThreshold);\\n    }\\n\\n    /**\\n     * @notice Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\\n     * @dev Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\\n     * @param newPendingAdmin New pending admin.\\n     */\\n    function _setPendingAdmin(address newPendingAdmin) external adminOnly {\\n        // Save current value, if any, for inclusion in log\\n        address oldPendingAdmin = pendingAdmin;\\n\\n        // Store pendingAdmin with value newPendingAdmin\\n        pendingAdmin = newPendingAdmin;\\n\\n        // Emit NewPendingAdmin(oldPendingAdmin, newPendingAdmin)\\n        emit NewPendingAdmin(oldPendingAdmin, newPendingAdmin);\\n    }\\n\\n    /**\\n     * @notice Accepts transfer of admin rights. msg.sender must be pendingAdmin\\n     * @dev Admin function for pending admin to accept role and update admin\\n     */\\n    function _acceptAdmin() external {\\n        // Check caller is pendingAdmin and pendingAdmin \\u2260 address(0)\\n        require(\\n            msg.sender == pendingAdmin && msg.sender != address(0),\\n            \\\"IPCT:_acceptAdmin: pending admin only\\\"\\n        );\\n\\n        // Save current values for inclusion in log\\n        address oldAdmin = admin;\\n        address oldPendingAdmin = pendingAdmin;\\n\\n        // Store admin with value pendingAdmin\\n        admin = pendingAdmin;\\n\\n        // Clear the pending value\\n        pendingAdmin = address(0);\\n\\n        emit NewAdmin(oldAdmin, admin);\\n        emit NewPendingAdmin(oldPendingAdmin, address(0));\\n    }\\n\\n    function add256(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"addition overflow\\\");\\n        return c;\\n    }\\n\\n    function sub256(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"subtraction underflow\\\");\\n        return a - b;\\n    }\\n\\n    function getChainIdInternal() internal view returns (uint256) {\\n        uint256 chainId;\\n        assembly {\\n            chainId := chainid()\\n        }\\n        return chainId;\\n    }\\n\\n    function getPriorVotes(address voter, uint256 beforeBlock) internal view returns (uint96) {\\n        if (address(releaseToken) == address(0)) {\\n            return token.getPriorVotes(voter, beforeBlock);\\n        }\\n        return\\n            add96(\\n                token.getPriorVotes(voter, beforeBlock),\\n                releaseToken.getPriorVotes(voter, beforeBlock),\\n                \\\"getPriorVotes overflow\\\"\\n            );\\n    }\\n\\n    function add96(\\n        uint96 a,\\n        uint96 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint96) {\\n        uint96 c = a + b;\\n        require(c >= a, errorMessage);\\n        return c;\\n    }\\n}\\n\",\"keccak256\":\"0x53eadab6e5fc80dc50e48f57e264cfc0d4f2acf0afacf15f143632d5dc0aaef3\",\"license\":\"Apache-2.0\"},\"contracts/governor/interfaces/IPCTDelegateStorageV1.sol\":{\"content\":\"//SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.4;\\n\\nimport \\\"@ubeswap/governance/contracts/interfaces/IHasVotes.sol\\\";\\nimport \\\"./IPCTDelegatorStorage.sol\\\";\\nimport \\\"./TimelockInterface.sol\\\";\\n\\n/**\\n * @title Storage for Governor Delegate\\n * @notice For future upgrades, do not change IPCTDelegateStorageV1. Create a new\\n * contract which implements IPCTDelegateStorageV1 and following the naming convention\\n * IPCTDelegateStorageVX.\\n */\\ncontract IPCTDelegateStorageV1 is IPCTDelegatorStorage {\\n    /// @notice The delay before voting on a proposal may take place, once proposed, in blocks\\n    uint256 public votingDelay;\\n\\n    /// @notice The duration of voting on a proposal, in blocks\\n    uint256 public votingPeriod;\\n\\n    /// @notice The number of votes required in order for a voter to become a proposer\\n    uint256 public proposalThreshold;\\n\\n    /// @notice The total number of proposals\\n    uint256 public proposalCount;\\n\\n    /// @notice The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed\\n    uint256 public quorumVotes;\\n\\n    /// @notice The address of the Governance Timelock\\n    TimelockInterface public timelock;\\n\\n    /// @notice The address of the governance token\\n    IHasVotes public token;\\n\\n    /// @notice The address of the \\\"Release\\\" governance token\\n    IHasVotes public releaseToken;\\n\\n    /// @notice The official record of all proposals ever proposed\\n    mapping(uint256 => Proposal) public proposals;\\n    /// @notice The official each proposal's targets:\\n    /// An ordered list of target addresses for calls to be made\\n    mapping(uint256 => address[]) public proposalTargets;\\n    /// @notice The official each proposal's values:\\n    /// An ordered list of values (i.e. msg.value) to be passed to the calls to be made\\n    mapping(uint256 => uint256[]) public proposalValues;\\n    /// @notice The official each proposal's signatures:\\n    /// An ordered list of function signatures to be called\\n    mapping(uint256 => string[]) public proposalSignatures;\\n    /// @notice The official each proposal's calldatas:\\n    /// An ordered list of calldata to be passed to each call\\n    mapping(uint256 => bytes[]) public proposalCalldatas;\\n    /// @notice The official each proposal's receipts:\\n    /// Receipts of ballots for the entire set of voters\\n    mapping(uint256 => mapping(address => Receipt)) public proposalReceipts;\\n\\n    /// @notice The latest proposal for each proposer\\n    mapping(address => uint256) public latestProposalIds;\\n\\n    struct Proposal {\\n        // Unique id for looking up a proposal\\n        uint256 id;\\n        // Creator of the proposal\\n        address proposer;\\n        // The timestamp that the proposal will be available for execution, set once the vote succeeds\\n        uint256 eta;\\n        // The block at which voting begins: holders must delegate their votes prior to this block\\n        uint256 startBlock;\\n        // The block at which voting ends: votes must be cast prior to this block\\n        uint256 endBlock;\\n        // Current number of votes in favor of this proposal\\n        uint256 forVotes;\\n        // Current number of votes in opposition to this proposal\\n        uint256 againstVotes;\\n        // Current number of votes for abstaining for this proposal\\n        uint256 abstainVotes;\\n        // Flag marking whether the proposal has been canceled\\n        bool canceled;\\n        // Flag marking whether the proposal has been executed\\n        bool executed;\\n    }\\n\\n    /// @notice Ballot receipt record for a voter\\n    struct Receipt {\\n        // Whether or not a vote has been cast\\n        bool hasVoted;\\n        // Whether or not the voter supports the proposal or abstains\\n        uint8 support;\\n        // The number of votes the voter had, which were cast\\n        uint96 votes;\\n    }\\n\\n    /// @notice Possible states that a proposal may be in\\n    enum ProposalState {\\n        Pending,\\n        Active,\\n        Canceled,\\n        Defeated,\\n        Succeeded,\\n        Queued,\\n        Expired,\\n        Executed\\n    }\\n}\\n\",\"keccak256\":\"0xf7004b393a10eaf3133eca1b894b63aaddbd42fbd702c79ec7140cf7e1862c67\",\"license\":\"Apache-2.0\"},\"contracts/governor/interfaces/IPCTDelegatorStorage.sol\":{\"content\":\"//SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.4;\\n\\ncontract IPCTDelegatorStorage {\\n  /// @notice Administrator for this contract\\n  address public admin;\\n\\n  /// @notice Pending administrator for this contract\\n  address public pendingAdmin;\\n\\n  /// @notice Active brains of Governor\\n  address public implementation;\\n}\\n\",\"keccak256\":\"0xb71cac9f33722552ab98c45699aa602edee7e865f65bf37bda3f3dff31152b0c\",\"license\":\"Apache-2.0\"},\"contracts/governor/interfaces/IPCTEvents.sol\":{\"content\":\"//SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.4;\\n\\ncontract IPCTEvents {\\n    /// @notice An event emitted when a new proposal is created\\n    event ProposalCreated(\\n        uint256 id,\\n        address proposer,\\n        address[] targets,\\n        uint256[] values,\\n        string[] signatures,\\n        bytes[] calldatas,\\n        uint256 startBlock,\\n        uint256 endBlock,\\n        string description\\n    );\\n\\n    /// @notice An event emitted when a vote has been cast on a proposal\\n    /// @param voter The address which casted a vote\\n    /// @param proposalId The proposal id which was voted on\\n    /// @param support Support value for the vote. 0=against, 1=for, 2=abstain\\n    /// @param votes Number of votes which were cast by the voter\\n    /// @param reason The reason given for the vote by the voter\\n    event VoteCast(address indexed voter, uint256 proposalId, uint8 support, uint256 votes, string reason);\\n\\n    /// @notice An event emitted when a proposal has been canceled\\n    event ProposalCanceled(uint256 id);\\n\\n    /// @notice An event emitted when a proposal has been queued in the Timelock\\n    event ProposalQueued(uint256 id, uint256 eta);\\n\\n    /// @notice An event emitted when a proposal has been executed in the Timelock\\n    event ProposalExecuted(uint256 id);\\n\\n    /// @notice An event emitted when the voting delay is set\\n    event VotingDelaySet(uint256 oldVotingDelay, uint256 newVotingDelay);\\n\\n    /// @notice An event emitted when the voting period is set\\n    event VotingPeriodSet(uint256 oldVotingPeriod, uint256 newVotingPeriod);\\n\\n    /// @notice Emitted when implementation is changed\\n    event NewImplementation(address oldImplementation, address newImplementation);\\n\\n    /// @notice Emitted when proposal threshold is set\\n    event ProposalThresholdSet(uint256 oldProposalThreshold, uint256 newProposalThreshold);\\n\\n    /// @notice An event emitted when the quorum votes is set\\n    event QuorumVotesSet(uint256 oldQuorumVotes, uint256 newQuorumVotes);\\n\\n    /// @notice Emitted when pendingAdmin is changed\\n    event NewPendingAdmin(address oldPendingAdmin, address newPendingAdmin);\\n\\n    /// @notice Emitted when pendingAdmin is accepted, which means admin is updated\\n    event NewAdmin(address oldAdmin, address newAdmin);\\n}\\n\",\"keccak256\":\"0x360ecd2ce68f9f334ab2c199b3335aeab3d9d741292f9d1e96101ea5636bbb15\",\"license\":\"Apache-2.0\"},\"contracts/governor/interfaces/TimelockInterface.sol\":{\"content\":\"//SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.4;\\n\\ninterface TimelockInterface {\\n  function admin() external view returns (address);\\n\\n  function delay() external view returns (uint256);\\n\\n  function GRACE_PERIOD() external view returns (uint256);\\n\\n  function acceptAdmin() external;\\n\\n  function queuedTransactions(bytes32 hash) external view returns (bool);\\n\\n  function queueTransaction(\\n    address target,\\n    uint256 value,\\n    string calldata signature,\\n    bytes calldata data,\\n    uint256 eta\\n  ) external returns (bytes32);\\n\\n  function cancelTransaction(\\n    address target,\\n    uint256 value,\\n    string calldata signature,\\n    bytes calldata data,\\n    uint256 eta\\n  ) external;\\n\\n  function executeTransaction(\\n    address target,\\n    uint256 value,\\n    string calldata signature,\\n    bytes calldata data,\\n    uint256 eta\\n  ) external payable returns (bytes memory);\\n}\\n\",\"keccak256\":\"0x896cff85ed0d09f5a94edb4672b32ec40547acb4425c374166c0535c1a07b43b\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106102725760003560e01c8063791f5d231161014f578063d33219b4116100c1578063e48083fe1161007a578063e48083fe146108d9578063e9c714f2146108ee578063ec715a3114610903578063f851a44014610923578063fc0c546a14610943578063fe0d94c11461096357600080fd5b8063d33219b4146107df578063da35c664146107ff578063da95691a14610815578063ddf0b00914610835578063deaaa7cc14610855578063e23a9a521461088957600080fd5b8063a4a53a1311610113578063a4a53a131461073b578063a64e024a1461075b578063ac67466414610772578063b112626314610792578063b58131b0146107a9578063b71d1a0c146107bf57600080fd5b8063791f5d231461068c5780637b3c71d3146106ab57806386d37e8b146106cb578063878b608d146106eb578063a3f4df7e1461070b57600080fd5b80632b4656c8116101e85780633e4f49e6116101ac5780633e4f49e61461055457806340e58ee5146105815780634e42b06d146105a157806356781388146105ce5780635c60da1b146105ee578063661767431461060e57600080fd5b80632b4656c8146104b9578063328dd982146104d957806336e7048a146105095780633932abb11461051e5780633bccf4fd1461053457600080fd5b80631dfb1b5a1161023a5780631dfb1b5a146103e157806320606b7014610401578063215809ca1461043557806324bc1a641461044b57806325fd935a14610461578063267822471461048157600080fd5b8063013cf08b1461027757806302a251a31461034e5780630ea2d98c1461037257806317977c611461039457806317ba1b8b146103c1575b600080fd5b34801561028357600080fd5b506102f3610292366004613a2f565b600b6020526000908152604090208054600182015460028301546003840154600485015460058601546006870154600788015460089098015496976001600160a01b0390961696949593949293919290919060ff808216916101009004168a565b604080519a8b526001600160a01b0390991660208b0152978901969096526060880194909452608087019290925260a086015260c085015260e084015215156101008301521515610120820152610140015b60405180910390f35b34801561035a57600080fd5b5061036460045481565b604051908152602001610345565b34801561037e57600080fd5b5061039261038d366004613a2f565b610976565b005b3480156103a057600080fd5b506103646103af366004613813565b60116020526000908152604090205481565b3480156103cd57600080fd5b506103926103dc366004613a2f565b610a66565b3480156103ed57600080fd5b506103926103fc366004613a2f565b610b67565b34801561040d57600080fd5b506103647f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b34801561044157600080fd5b5061036461438081565b34801561045757600080fd5b5061036460075481565b34801561046d57600080fd5b506103646b019d971e4fe8401e7400000081565b34801561048d57600080fd5b506001546104a1906001600160a01b031681565b6040516001600160a01b039091168152602001610345565b3480156104c557600080fd5b506103926104d436600461384b565b610c43565b3480156104e557600080fd5b506104f96104f4366004613a2f565b611215565b6040516103459493929190613e49565b34801561051557600080fd5b50610364600a81565b34801561052a57600080fd5b5061036460035481565b34801561054057600080fd5b5061039261054f366004613b44565b6114a6565b34801561056057600080fd5b5061057461056f366004613a2f565b611707565b6040516103459190613eb4565b34801561058d57600080fd5b5061039261059c366004613a2f565b6118a4565b3480156105ad57600080fd5b506105c16105bc366004613a76565b611bb6565b6040516103459190613ea1565b3480156105da57600080fd5b506103926105e9366004613a97565b611c6f565b3480156105fa57600080fd5b506002546104a1906001600160a01b031681565b34801561061a57600080fd5b50610664610629366004613a47565b601060209081526000928352604080842090915290825290205460ff808216916101008104909116906201000090046001600160601b031683565b60408051931515845260ff90921660208401526001600160601b031690820152606001610345565b34801561069857600080fd5b506103646a52b7d2dcc80cd2e400000081565b3480156106b757600080fd5b506103926106c6366004613ac2565b611cda565b3480156106d757600080fd5b506103926106e6366004613a2f565b611d2a565b3480156106f757600080fd5b50610364610706366004613a76565b611df8565b34801561071757600080fd5b506105c160405180604001604052806004815260200163125410d560e21b81525081565b34801561074757600080fd5b506105c1610756366004613a76565b611e29565b34801561076757600080fd5b506103646203b10081565b34801561077e57600080fd5b506104a161078d366004613a76565b611e45565b34801561079e57600080fd5b506103646201d88081565b3480156107b557600080fd5b5061036460055481565b3480156107cb57600080fd5b506103926107da366004613813565b611e7d565b3480156107eb57600080fd5b506008546104a1906001600160a01b031681565b34801561080b57600080fd5b5061036460065481565b34801561082157600080fd5b506103646108303660046138b8565b611f01565b34801561084157600080fd5b50610392610850366004613a2f565b612483565b34801561086157600080fd5b506103647f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f81565b34801561089557600080fd5b506108a96108a4366004613a47565b612800565b6040805182511515815260208084015160ff1690820152918101516001600160601b031690820152606001610345565b3480156108e557600080fd5b50610364600181565b3480156108fa57600080fd5b50610392612875565b34801561090f57600080fd5b50600a546104a1906001600160a01b031681565b34801561092f57600080fd5b506000546104a1906001600160a01b031681565b34801561094f57600080fd5b506009546104a1906001600160a01b031681565b610392610971366004613a2f565b612991565b6000546001600160a01b031633146109a95760405162461bcd60e51b81526004016109a090613f3a565b60405180910390fd5b61438081101580156109be57506203b1008111155b610a205760405162461bcd60e51b815260206004820152602d60248201527f495043543a3a5f736574566f74696e67506572696f643a20696e76616c69642060448201526c1d9bdd1a5b99c81c195c9a5bd9609a1b60648201526084016109a0565b600480549082905560408051828152602081018490527f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e882891015b60405180910390a15050565b6000546001600160a01b03163314610a905760405162461bcd60e51b81526004016109a090613f3a565b6a52b7d2dcc80cd2e40000008110158015610ab757506b019d971e4fe8401e740000008111155b610b295760405162461bcd60e51b815260206004820152603760248201527f495043543a3a5f73657450726f706f73616c5468726573686f6c643a20696e7660448201527f616c69642070726f706f73616c207468726573686f6c6400000000000000000060648201526084016109a0565b600580549082905560408051828152602081018490527fccb45da8d5717e6c4544694297c4ba5cf151d455c9bb0ed4fc7a38411bc054619101610a5a565b6000546001600160a01b03163314610b915760405162461bcd60e51b81526004016109a090613f3a565b60018110158015610ba557506201d8808111155b610c055760405162461bcd60e51b815260206004820152602b60248201527f495043543a3a5f736574566f74696e6744656c61793a20696e76616c6964207660448201526a6f74696e672064656c617960a81b60648201526084016109a0565b600380549082905560408051828152602081018490527fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a939101610a5a565b601254610100900460ff1680610c5c575060125460ff16155b610cbf5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016109a0565b601254610100900460ff16158015610ce1576012805461ffff19166101011790555b6000546001600160a01b03163314610d0b5760405162461bcd60e51b81526004016109a090613f3a565b306001600160a01b0316886001600160a01b031663f851a4406040518163ffffffff1660e01b815260040160206040518083038186803b158015610d4e57600080fd5b505afa158015610d62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d86919061382f565b6001600160a01b031614610dac5760405162461bcd60e51b81526004016109a090613edc565b6143808510158015610dc157506203b1008511155b610e1d5760405162461bcd60e51b815260206004820152602760248201527f495043543a3a696e697469616c697a653a20696e76616c696420766f74696e67604482015266081c195c9a5bd960ca1b60648201526084016109a0565b60018410158015610e3157506201d8808411155b610e8c5760405162461bcd60e51b815260206004820152602660248201527f495043543a3a696e697469616c697a653a20696e76616c696420766f74696e676044820152652064656c617960d01b60648201526084016109a0565b6a52b7d2dcc80cd2e40000008310158015610eb357506b019d971e4fe8401e740000008311155b610f145760405162461bcd60e51b815260206004820152602c60248201527f495043543a3a696e697469616c697a653a20696e76616c69642070726f706f7360448201526b185b081d1a1c995cda1bdb1960a21b60648201526084016109a0565b82821015610f735760405162461bcd60e51b815260206004820152602660248201527f495043543a3a696e697469616c697a653a20696e76616c69642071756f72756d60448201526520766f74657360d01b60648201526084016109a0565b600880546001600160a01b0319166001600160a01b038a16908117909155604080516303e1469160e61b8152905130929163f851a440916004808301926020929190829003018186803b158015610fc957600080fd5b505afa158015610fdd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611001919061382f565b6001600160a01b0316146110275760405162461bcd60e51b81526004016109a090613edc565b60008054336001600160a01b03199182161782556009805482166001600160a01b038b811691909117909155600a80549092169089161790556004869055600385905560058490556007839055604080516101408101825260068054808352306020840152928201849052606082018490526080820184905260a0820184905260c0820184905260e082018490526001610100830152610120820184905290926110d083614268565b909155505080516000908152600b602090815260408083208451808255838601516001830180546001600160a01b0319166001600160a01b039092169182179055838701516002840155606087015160038401556080870151600484015560a0870151600584015560c0870151600684015560e0870151600784015561010080880151600890940180546101208a015161ffff1990911695151561ff001916959095179415159091029390931790925590845260118352818420558351808452600c835281842085518552600d845282852086518652600e855283862087518752600f90955283862093517f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e0966111f09694953095929091908190613fff565b60405180910390a150801561120b576012805461ff00191690555b5050505050505050565b6000818152600c60209081526040808320600d8352818420600e8452828520600f855294839020825484518187028101870190955280855260609687968796879695949293909186919083018282801561129857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161127a575b50505050509350828054806020026020016040519081016040528092919081815260200182805480156112ea57602002820191906000526020600020905b8154815260200190600101908083116112d6575b5050505050925081805480602002602001604051908101604052809291908181526020016000905b828210156113be57838290600052602060002001805461133190614233565b80601f016020809104026020016040519081016040528092919081815260200182805461135d90614233565b80156113aa5780601f1061137f576101008083540402835291602001916113aa565b820191906000526020600020905b81548152906001019060200180831161138d57829003601f168201915b505050505081526020019060010190611312565b50505050915080805480602002602001604051908101604052809291908181526020016000905b8282101561149157838290600052602060002001805461140490614233565b80601f016020809104026020016040519081016040528092919081815260200182805461143090614233565b801561147d5780601f106114525761010080835404028352916020019161147d565b820191906000526020600020905b81548152906001019060200180831161146057829003601f168201915b5050505050815260200190600101906113e5565b50505050905093509350935093509193509193565b6040805180820182526004815263125410d560e21b60209182015281517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866818301527f04e009a9e6a1785cfe336fa7ab5aa65e11562b175f29cb3c6e1742fbba40dd6481840152466060820152306080808301919091528351808303909101815260a0820184528051908301207f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f60c083015260e0820189905260ff8816610100808401919091528451808403909101815261012083019094528351939092019290922061190160f01b6101408401526101428301829052610162830181905290916000906101820160408051601f198184030181528282528051602091820120600080855291840180845281905260ff8a169284019290925260608301889052608083018790529092509060019060a0016020604051602081039080840390855afa15801561161a573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661168c5760405162461bcd60e51b815260206004820152602660248201527f495043543a3a63617374566f746542795369673a20696e76616c6964207369676044820152656e617475726560d01b60648201526084016109a0565b806001600160a01b03167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda48a8a6116c4858e8e612c6f565b6040805193845260ff90921660208401526001600160601b03169082015260806060820181905260009082015260a00160405180910390a2505050505050505050565b6000816006541161175a5760405162461bcd60e51b815260206004820181905260248201527f495043543a3a73746174653a20696e76616c69642070726f706f73616c20696460448201526064016109a0565b6000828152600b60205260409020600881015460ff161561177e5750600292915050565b806003015443116117925750600092915050565b806004015443116117a65750600192915050565b806006015481600501541115806117c257506007548160050154105b156117d05750600392915050565b60028101546117e25750600492915050565b6008810154610100900460ff16156117fd5750600792915050565b6002810154600854604080516360d143f160e11b8152905161188693926001600160a01b03169163c1a287e2916004808301926020929190829003018186803b15801561184957600080fd5b505afa15801561185d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061188191906139a4565b612ec9565b42106118955750600692915050565b50600592915050565b50919050565b60076118af82611707565b60078111156118ce57634e487b7160e01b600052602160045260246000fd5b14156119325760405162461bcd60e51b815260206004820152602d60248201527f495043543a3a63616e63656c3a2063616e6e6f742063616e63656c206578656360448201526c1d5d1959081c1c9bdc1bdcd85b609a1b60648201526084016109a0565b6000818152600b6020526040902060018101546001600160a01b031633148061198a575060055460018083015461197f916001600160a01b039091169061197a904390612f23565b612f77565b6001600160601b0316105b6119e55760405162461bcd60e51b815260206004820152602660248201527f495043543a3a63616e63656c3a2070726f706f7365722061626f766520746872604482015265195cda1bdb1960d21b60648201526084016109a0565b60088101805460ff1916600117905560005b6000838152600c6020526040902054811015611b85576008546000848152600c6020526040902080546001600160a01b039092169163591fcdfe919084908110611a5157634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910154878352600d909152604090912080546001600160a01b039092169185908110611a9857634e487b7160e01b600052603260045260246000fd5b9060005260206000200154600e60008881526020019081526020016000208581548110611ad557634e487b7160e01b600052603260045260246000fd5b90600052602060002001600f60008981526020019081526020016000208681548110611b1157634e487b7160e01b600052603260045260246000fd5b9060005260206000200187600201546040518663ffffffff1660e01b8152600401611b40959493929190613e10565b600060405180830381600087803b158015611b5a57600080fd5b505af1158015611b6e573d6000803e3d6000fd5b505050508080611b7d90614268565b9150506119f7565b506040518281527f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c90602001610a5a565b600f6020528160005260406000208181548110611bd257600080fd5b90600052602060002001600091509150508054611bee90614233565b80601f0160208091040260200160405190810160405280929190818152602001828054611c1a90614233565b8015611c675780601f10611c3c57610100808354040283529160200191611c67565b820191906000526020600020905b815481529060010190602001808311611c4a57829003601f168201915b505050505081565b337fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda48383611c9e848383612c6f565b6040805193845260ff90921660208401526001600160601b03169082015260806060820181905260009082015260a00160405180910390a25050565b337fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda48585611d09848383612c6f565b8686604051611d1c9594939291906140dc565b60405180910390a250505050565b6000546001600160a01b03163314611d545760405162461bcd60e51b81526004016109a090613f3a565b600554811015611dba5760405162461bcd60e51b815260206004820152602b60248201527f495043543a3a5f73657451756f72756d566f7465733a20696e76616c6964207160448201526a756f72756d20766f74657360a81b60648201526084016109a0565b600354600782905560408051828152602081018490527fffff0a251408cb8f05a4fc2ab0bdffe28e1519cb8ee5bdb6531e5d6ca51aaf759101610a5a565b600d6020528160005260406000208181548110611e1457600080fd5b90600052602060002001600091509150505481565b600e6020528160005260406000208181548110611bd257600080fd5b600c6020528160005260406000208181548110611e6157600080fd5b6000918252602090912001546001600160a01b03169150829050565b6000546001600160a01b03163314611ea75760405162461bcd60e51b81526004016109a090613f3a565b600180546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527fca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a99101610a5a565b6000600554611f153361197a436001612f23565b6001600160601b031611611f8a5760405162461bcd60e51b815260206004820152603660248201527f495043543a3a70726f706f73653a2070726f706f73657220766f7465732062656044820152751b1bddc81c1c9bdc1bdcd85b081d1a1c995cda1bdb1960521b60648201526084016109a0565b84518651148015611f9c575083518651145b8015611fa9575082518651145b61201b5760405162461bcd60e51b815260206004820152603b60248201527f495043543a3a70726f706f73653a2070726f706f73616c2066756e6374696f6e60448201527f20696e666f726d6174696f6e206172697479206d69736d61746368000000000060648201526084016109a0565b85516120755760405162461bcd60e51b815260206004820152602360248201527f495043543a3a70726f706f73653a206d7573742070726f7669646520616374696044820152626f6e7360e81b60648201526084016109a0565b600a865111156120c75760405162461bcd60e51b815260206004820152601f60248201527f495043543a3a70726f706f73653a20746f6f206d616e7920616374696f6e730060448201526064016109a0565b3360009081526011602052604090205480156122495760006120e882611707565b9050600181600781111561210c57634e487b7160e01b600052602160045260246000fd5b14156121985760405162461bcd60e51b815260206004820152604f60248201527f495043543a3a70726f706f73653a206f6e65206c6976652070726f706f73616c60448201527f207065722070726f706f7365722c20666f756e6420616e20616c72656164792060648201526e1858dd1a5d99481c1c9bdc1bdcd85b608a1b608482015260a4016109a0565b60008160078111156121ba57634e487b7160e01b600052602160045260246000fd5b14156122475760405162461bcd60e51b815260206004820152605060248201527f495043543a3a70726f706f73653a206f6e65206c6976652070726f706f73616c60448201527f207065722070726f706f7365722c20666f756e6420616e20616c72656164792060648201526f1c195b991a5b99c81c1c9bdc1bdcd85b60821b608482015260a4016109a0565b505b600061225743600354612ec9565b9050600061226782600454612ec9565b6040805161014081018252600680548083523360208401526000938301849052606083018790526080830185905260a0830184905260c0830184905260e08301849052610100830184905261012083018490529394509092916122c983614268565b909155505080516000908152600b602090815260408083208451808255838601516001830180546001600160a01b0319166001600160a01b03909216919091179055828601516002830155606086015160038301556080860151600483015560a0860151600583015560c0860151600683015560e08601516007830155610100808701516008909301805461012089015161ffff1990911694151561ff00191694909417931515909102929092179091558352600c82529091208b51612391928d019061336c565b5080516000908152600d602090815260409091208a516123b3928c01906133d1565b5080516000908152600e6020908152604090912089516123d5928b019061340c565b5080516000908152600f6020908152604090912088516123f7928a0190613465565b5080600001516011600083602001516001600160a01b03166001600160a01b03168152602001908152602001600020819055507f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e08160000151338c8c8c8c89898e60405161246d99989796959493929190613f67565b60405180910390a1519998505050505050505050565b600461248e82611707565b60078111156124ad57634e487b7160e01b600052602160045260246000fd5b146125205760405162461bcd60e51b815260206004820152603b60248201527f495043543a3a71756575653a2070726f706f73616c2063616e206f6e6c79206260448201527f652071756575656420696620697420697320737563636565646564000000000060648201526084016109a0565b6000818152600b602090815260408083206008548251630d48571f60e31b8152925191949361257a9342936001600160a01b0390931692636a42b8f892600480840193919291829003018186803b15801561184957600080fd5b905060005b6000848152600c60205260409020548110156127ba576000848152600c6020526040902080546127a89190839081106125c857634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910154878352600d909152604090912080546001600160a01b03909216918490811061260f57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154600e6000888152602001908152602001600020848154811061264c57634e487b7160e01b600052603260045260246000fd5b90600052602060002001805461266190614233565b80601f016020809104026020016040519081016040528092919081815260200182805461268d90614233565b80156126da5780601f106126af576101008083540402835291602001916126da565b820191906000526020600020905b8154815290600101906020018083116126bd57829003601f168201915b50505060008a8152600f602052604090208054909250879150811061270f57634e487b7160e01b600052603260045260246000fd5b90600052602060002001805461272490614233565b80601f016020809104026020016040519081016040528092919081815260200182805461275090614233565b801561279d5780601f106127725761010080835404028352916020019161279d565b820191906000526020600020905b81548152906001019060200180831161278057829003601f168201915b505050505086613153565b806127b281614268565b91505061257f565b506002820181905560408051848152602081018390527f9a2e42fd6722813d69113e7d0079d3d940171428df7373df9c7f7617cfda2892910160405180910390a1505050565b604080516060808201835260008083526020808401829052928401819052858152601083528381206001600160a01b03861682528352839020835191820184525460ff8082161515835261010082041692820192909252620100009091046001600160601b0316918101919091525b92915050565b6001546001600160a01b03163314801561288e57503315155b6128e85760405162461bcd60e51b815260206004820152602560248201527f495043543a5f61636365707441646d696e3a2070656e64696e672061646d696e604482015264206f6e6c7960d81b60648201526084016109a0565b60008054600180546001600160a01b038082166001600160a01b031980861682179096559490911690915560408051919092168082526020820184905292917ff9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc910160405180910390a1604080516001600160a01b0383168152600060208201527fca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a99101610a5a565b600561299c82611707565b60078111156129bb57634e487b7160e01b600052602160045260246000fd5b14612a2e5760405162461bcd60e51b815260206004820152603c60248201527f495043543a3a657865637574653a2070726f706f73616c2063616e206f6e6c7960448201527f206265206578656375746564206966206974206973207175657565640000000060648201526084016109a0565b6000818152600b6020526040812060088101805461ff001916610100179055905b6000838152600c6020526040902054811015612c3e576008546000848152600d6020526040902080546001600160a01b0390921691630825f38f919084908110612aa957634e487b7160e01b600052603260045260246000fd5b9060005260206000200154600c60008781526020019081526020016000208481548110612ae657634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910154888352600d909152604090912080546001600160a01b039092169186908110612b2d57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154600e60008981526020019081526020016000208681548110612b6a57634e487b7160e01b600052603260045260246000fd5b90600052602060002001600f60008a81526020019081526020016000208781548110612ba657634e487b7160e01b600052603260045260246000fd5b9060005260206000200188600201546040518763ffffffff1660e01b8152600401612bd5959493929190613e10565b6000604051808303818588803b158015612bee57600080fd5b505af1158015612c02573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f19168201604052612c2b91908101906139bc565b5080612c3681614268565b915050612a4f565b506040518281527f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f90602001610a5a565b60006001612c7c84611707565b6007811115612c9b57634e487b7160e01b600052602160045260246000fd5b14612cf95760405162461bcd60e51b815260206004820152602860248201527f495043543a3a63617374566f7465496e7465726e616c3a20766f74696e6720696044820152671cc818db1bdcd95960c21b60648201526084016109a0565b60028260ff161115612d5f5760405162461bcd60e51b815260206004820152602960248201527f495043543a3a63617374566f7465496e7465726e616c3a20696e76616c696420604482015268766f7465207479706560b81b60648201526084016109a0565b6000838152600b60209081526040808320601083528184206001600160a01b0389168552909252909120805460ff1615612def5760405162461bcd60e51b815260206004820152602b60248201527f495043543a3a63617374566f7465496e7465726e616c3a20766f74657220616c60448201526a1c9958591e481d9bdd195960aa1b60648201526084016109a0565b6000612dff878460030154612f77565b905060ff8516612e2a57612e208360060154826001600160601b0316612ec9565b6006840155612e80565b8460ff1660011415612e5757612e4d8360050154826001600160601b0316612ec9565b6005840155612e80565b8460ff1660021415612e8057612e7a8360070154826001600160601b0316612ec9565b60078401555b81546001600160601b03821662010000026dffffffffffffffffffffffff00001960ff88166101000261ffff199093169290921760011791909116179091559150509392505050565b600080612ed683856141a9565b905083811015612f1c5760405162461bcd60e51b81526020600482015260116024820152706164646974696f6e206f766572666c6f7760781b60448201526064016109a0565b9392505050565b600082821115612f6d5760405162461bcd60e51b81526020600482015260156024820152747375627472616374696f6e20756e646572666c6f7760581b60448201526064016109a0565b612f1c82846141ec565b600a546000906001600160a01b03166130155760095460405163782d6fe160e01b81526001600160a01b038581166004830152602482018590529091169063782d6fe19060440160206040518083038186803b158015612fd657600080fd5b505afa158015612fea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061300e9190613b91565b905061286f565b60095460405163782d6fe160e01b81526001600160a01b03858116600483015260248201859052612f1c92169063782d6fe19060440160206040518083038186803b15801561306357600080fd5b505afa158015613077573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061309b9190613b91565b600a5460405163782d6fe160e01b81526001600160a01b038781166004830152602482018790529091169063782d6fe19060440160206040518083038186803b1580156130e757600080fd5b505afa1580156130fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061311f9190613b91565b604051806040016040528060168152602001756765745072696f72566f746573206f766572666c6f7760501b81525061331f565b6008546040516001600160a01b039091169063f2b06537906131819088908890889088908890602001613dc4565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016131b591815260200190565b60206040518083038186803b1580156131cd57600080fd5b505afa1580156131e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132059190613984565b1561328d5760405162461bcd60e51b815260206004820152604c60248201527f495043543a3a71756575654f72526576657274496e7465726e616c3a2069646560448201527f6e746963616c2070726f706f73616c20616374696f6e20616c7265616479207160648201526b75657565642061742065746160a01b608482015260a4016109a0565b600854604051633a66f90160e01b81526001600160a01b0390911690633a66f901906132c59088908890889088908890600401613dc4565b602060405180830381600087803b1580156132df57600080fd5b505af11580156132f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061331791906139a4565b505050505050565b60008061332c84866141c1565b9050846001600160601b0316816001600160601b0316101583906133635760405162461bcd60e51b81526004016109a09190613ea1565b50949350505050565b8280548282559060005260206000209081019282156133c1579160200282015b828111156133c157825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061338c565b506133cd9291506134be565b5090565b8280548282559060005260206000209081019282156133c1579160200282015b828111156133c15782518255916020019190600101906133f1565b828054828255906000526020600020908101928215613459579160200282015b8281111561345957825180516134499184916020909101906134d3565b509160200191906001019061342c565b506133cd929150613546565b8280548282559060005260206000209081019282156134b2579160200282015b828111156134b257825180516134a29184916020909101906134d3565b5091602001919060010190613485565b506133cd929150613563565b5b808211156133cd57600081556001016134bf565b8280546134df90614233565b90600052602060002090601f01602090048101928261350157600085556133c1565b82601f1061351a57805160ff19168380011785556133c1565b828001600101855582156133c157918201828111156133c15782518255916020019190600101906133f1565b808211156133cd57600061355a8282613580565b50600101613546565b808211156133cd5760006135778282613580565b50600101613563565b50805461358c90614233565b6000825580601f1061359c575050565b601f0160209004906000526020600020908101906135ba91906134be565b50565b60006135d06135cb84614181565b61412c565b90508281528383830111156135e457600080fd5b828260208301376000602084830101529392505050565b600082601f83011261360b578081fd5b8135602061361b6135cb8361415d565b80838252828201915082860187848660051b890101111561363a578586fd5b855b8581101561366157813561364f816142af565b8452928401929084019060010161363c565b5090979650505050505050565b600082601f83011261367e578081fd5b8135602061368e6135cb8361415d565b80838252828201915082860187848660051b89010111156136ad578586fd5b855b8581101561366157813567ffffffffffffffff8111156136cd578788fd5b8801603f81018a136136dd578788fd5b6136ee8a87830135604084016135bd565b85525092840192908401906001016136af565b600082601f830112613711578081fd5b813560206137216135cb8361415d565b80838252828201915082860187848660051b8901011115613740578586fd5b855b8581101561366157813567ffffffffffffffff811115613760578788fd5b61376e8a87838c01016137de565b8552509284019290840190600101613742565b600082601f830112613791578081fd5b813560206137a16135cb8361415d565b80838252828201915082860187848660051b89010111156137c0578586fd5b855b85811015613661578135845292840192908401906001016137c2565b600082601f8301126137ee578081fd5b612f1c838335602085016135bd565b803560ff8116811461380e57600080fd5b919050565b600060208284031215613824578081fd5b8135612f1c816142af565b600060208284031215613840578081fd5b8151612f1c816142af565b600080600080600080600060e0888a031215613865578283fd5b8735613870816142af565b96506020880135613880816142af565b95506040880135613890816142af565b969995985095966060810135965060808101359560a0820135955060c0909101359350915050565b600080600080600060a086880312156138cf578283fd5b853567ffffffffffffffff808211156138e6578485fd5b6138f289838a016135fb565b96506020880135915080821115613907578485fd5b61391389838a01613781565b95506040880135915080821115613928578485fd5b61393489838a01613701565b94506060880135915080821115613949578283fd5b61395589838a0161366e565b9350608088013591508082111561396a578283fd5b50613977888289016137de565b9150509295509295909350565b600060208284031215613995578081fd5b81518015158114612f1c578182fd5b6000602082840312156139b5578081fd5b5051919050565b6000602082840312156139cd578081fd5b815167ffffffffffffffff8111156139e3578182fd5b8201601f810184136139f3578182fd5b8051613a016135cb82614181565b818152856020838501011115613a15578384fd5b613a26826020830160208601614203565b95945050505050565b600060208284031215613a40578081fd5b5035919050565b60008060408385031215613a59578182fd5b823591506020830135613a6b816142af565b809150509250929050565b60008060408385031215613a88578182fd5b50508035926020909101359150565b60008060408385031215613aa9578182fd5b82359150613ab9602084016137fd565b90509250929050565b60008060008060608587031215613ad7578182fd5b84359350613ae7602086016137fd565b9250604085013567ffffffffffffffff80821115613b03578384fd5b818701915087601f830112613b16578384fd5b813581811115613b24578485fd5b886020828501011115613b35578485fd5b95989497505060200194505050565b600080600080600060a08688031215613b5b578283fd5b85359450613b6b602087016137fd565b9350613b79604087016137fd565b94979396509394606081013594506080013592915050565b600060208284031215613ba2578081fd5b81516001600160601b0381168114612f1c578182fd5b6000815180845260208085019450808401835b83811015613bf05781516001600160a01b031687529582019590820190600101613bcb565b509495945050505050565b600081518084526020808501808196508360051b81019150828601855b85811015613c42578284038952613c30848351613cf9565b98850198935090840190600101613c18565b5091979650505050505050565b600081548084526020808501808196508360051b81019150858552828520855b85811015613c42578284038952613c868483613d25565b98850198935060019182019101613c6f565b6000815180845260208085019450808401835b83811015613bf057815187529582019590820190600101613cab565b6000815480845260208085019450838352808320835b83811015613bf057815487529582019560019182019101613cdd565b60008151808452613d11816020860160208601614203565b601f01601f19169290920160200192915050565b8054600090600181811c9080831680613d3f57607f831692505b6020808410821415613d5f57634e487b7160e01b86526022600452602486fd5b838852818015613d765760018114613d8a57613db8565b60ff19861689830152604089019650613db8565b876000528160002060005b86811015613db05781548b8201850152908501908301613d95565b8a0183019750505b50505050505092915050565b60018060a01b038616815284602082015260a060408201526000613deb60a0830186613cf9565b8281036060840152613dfd8186613cf9565b9150508260808301529695505050505050565b60018060a01b038616815284602082015260a060408201526000613e3760a0830186613d25565b8281036060840152613dfd8186613d25565b608081526000613e5c6080830187613bb8565b8281036020840152613e6e8187613c98565b90508281036040840152613e828186613bfb565b90508281036060840152613e968185613bfb565b979650505050505050565b602081526000612f1c6020830184613cf9565b6020810160088310613ed657634e487b7160e01b600052602160045260246000fd5b91905290565b602080825260409082018190527f495043543a3a696e697469616c697a653a2074696d656c6f636b2061646d696e908201527f206973206e6f742061737369676e656420746f204950435444656c6567617465606082015260800190565b60208082526013908201527213db9b1e4818591b5a5b8818d85b8818d85b1b606a1b604082015260600190565b8981526001600160a01b038916602082015261012060408201819052600090613f928382018b613bb8565b90508281036060840152613fa6818a613c98565b90508281036080840152613fba8189613bfb565b905082810360a0840152613fce8188613bfb565b90508560c08401528460e0840152828103610100840152613fef8185613cf9565b9c9b505050505050505050505050565b8881526001600160a01b0388811660208084019190915261012060408401819052895490840181905260008a8152918220919261014085019291845b8181101561406a5761405c85848654166001600160a01b0316815260200190565b94506001938401930161403b565b5050505082810360608401526140808189613cc7565b905082810360808401526140948188613c4f565b905082810360a08401526140a88187613c4f565b90508460c08401528360e08401528281036101008401526140cd816000815260200190565b9b9a5050505050505050505050565b85815260ff851660208201526001600160601b038416604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f909201601f19160101949350505050565b604051601f8201601f1916810167ffffffffffffffff8111828210171561415557614155614299565b604052919050565b600067ffffffffffffffff82111561417757614177614299565b5060051b60200190565b600067ffffffffffffffff82111561419b5761419b614299565b50601f01601f191660200190565b600082198211156141bc576141bc614283565b500190565b60006001600160601b038083168185168083038211156141e3576141e3614283565b01949350505050565b6000828210156141fe576141fe614283565b500390565b60005b8381101561421e578181015183820152602001614206565b8381111561422d576000848401525b50505050565b600181811c9082168061424757607f821691505b6020821081141561189e57634e487b7160e01b600052602260045260246000fd5b600060001982141561427c5761427c614283565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146135ba57600080fdfea2646970667358221220e41b5ee468ea1d6bc926431a5a3a8f68c9fe33f95a1abf71255665f616e5843a64736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "_acceptAdmin()": {
        "details": "Admin function for pending admin to accept role and update admin"
      },
      "_setPendingAdmin(address)": {
        "details": "Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.",
        "params": {
          "newPendingAdmin": "New pending admin."
        }
      },
      "_setProposalThreshold(uint256)": {
        "details": "newProposalThreshold must be greater than the hardcoded min",
        "params": {
          "newProposalThreshold": "new proposal threshold"
        }
      },
      "_setQuorumVotes(uint256)": {
        "params": {
          "newQuorumVotes": "new quorum votes"
        }
      },
      "_setVotingDelay(uint256)": {
        "params": {
          "newVotingDelay": "new voting delay, in blocks"
        }
      },
      "_setVotingPeriod(uint256)": {
        "params": {
          "newVotingPeriod": "new voting period, in blocks"
        }
      },
      "cancel(uint256)": {
        "params": {
          "proposalId": "The id of the proposal to cancel"
        }
      },
      "castVote(uint256,uint8)": {
        "params": {
          "proposalId": "The id of the proposal to vote on",
          "support": "The support value for the vote. 0=against, 1=for, 2=abstain"
        }
      },
      "castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)": {
        "details": "External function that accepts EIP-712 signatures for voting on proposals."
      },
      "castVoteWithReason(uint256,uint8,string)": {
        "params": {
          "proposalId": "The id of the proposal to vote on",
          "reason": "The reason given for the vote by the voter",
          "support": "The support value for the vote. 0=against, 1=for, 2=abstain"
        }
      },
      "execute(uint256)": {
        "params": {
          "proposalId": "The id of the proposal to execute"
        }
      },
      "getActions(uint256)": {
        "params": {
          "proposalId": "Proposal to query."
        },
        "returns": {
          "calldatas": "Calldatas for proposal calls.",
          "signatures": "Function signatures for proposal calls.",
          "targets": "Target addresses for proposal calls.",
          "values": "Eth values for proposal calls."
        }
      },
      "getReceipt(uint256,address)": {
        "params": {
          "proposalId": "the id of proposal",
          "voter": "The address of the voter"
        },
        "returns": {
          "_0": "The voting receipt"
        }
      },
      "initialize(address,address,address,uint256,uint256,uint256,uint256)": {
        "params": {
          "proposalThreshold_": "The initial proposal threshold",
          "quorumVotes_": "The initial quorum votes",
          "releaseToken_": "The address of the \"Release\" voting token. If none, specify the zero address.",
          "timelock_": "The address of the Timelock",
          "token_": "The address of the voting token",
          "votingDelay_": "The initial voting delay",
          "votingPeriod_": "The initial voting period"
        }
      },
      "propose(address[],uint256[],string[],bytes[],string)": {
        "params": {
          "calldatas": "Calldatas for proposal calls.",
          "description": "String description of the proposal.",
          "signatures": "Function signatures for proposal calls.",
          "targets": "Target addresses for proposal calls.",
          "values": "Eth values for proposal calls."
        },
        "returns": {
          "_0": "Proposal id of new proposal."
        }
      },
      "queue(uint256)": {
        "params": {
          "proposalId": "The id of the proposal to queue"
        }
      },
      "state(uint256)": {
        "params": {
          "proposalId": "The id of the proposal"
        },
        "returns": {
          "_0": "Proposal state"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "NewAdmin(address,address)": {
        "notice": "Emitted when pendingAdmin is accepted, which means admin is updated"
      },
      "NewImplementation(address,address)": {
        "notice": "Emitted when implementation is changed"
      },
      "NewPendingAdmin(address,address)": {
        "notice": "Emitted when pendingAdmin is changed"
      },
      "ProposalCanceled(uint256)": {
        "notice": "An event emitted when a proposal has been canceled"
      },
      "ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)": {
        "notice": "An event emitted when a new proposal is created"
      },
      "ProposalExecuted(uint256)": {
        "notice": "An event emitted when a proposal has been executed in the Timelock"
      },
      "ProposalQueued(uint256,uint256)": {
        "notice": "An event emitted when a proposal has been queued in the Timelock"
      },
      "ProposalThresholdSet(uint256,uint256)": {
        "notice": "Emitted when proposal threshold is set"
      },
      "QuorumVotesSet(uint256,uint256)": {
        "notice": "An event emitted when the quorum votes is set"
      },
      "VoteCast(address,uint256,uint8,uint256,string)": {
        "notice": "An event emitted when a vote has been cast on a proposal"
      },
      "VotingDelaySet(uint256,uint256)": {
        "notice": "An event emitted when the voting delay is set"
      },
      "VotingPeriodSet(uint256,uint256)": {
        "notice": "An event emitted when the voting period is set"
      }
    },
    "kind": "user",
    "methods": {
      "BALLOT_TYPEHASH()": {
        "notice": "The EIP-712 typehash for the ballot struct used by the contract"
      },
      "DOMAIN_TYPEHASH()": {
        "notice": "The EIP-712 typehash for the contract's domain"
      },
      "MAX_PROPOSAL_THRESHOLD()": {
        "notice": "The maximum setable proposal threshold"
      },
      "MAX_VOTING_DELAY()": {
        "notice": "The max setable voting delay"
      },
      "MAX_VOTING_PERIOD()": {
        "notice": "The max setable voting period"
      },
      "MIN_PROPOSAL_THRESHOLD()": {
        "notice": "The minimum setable proposal threshold"
      },
      "MIN_VOTING_DELAY()": {
        "notice": "The min setable voting delay"
      },
      "MIN_VOTING_PERIOD()": {
        "notice": "The minimum setable voting period"
      },
      "NAME()": {
        "notice": "The name of this contract"
      },
      "PROPOSAL_MAX_OPERATIONS()": {
        "notice": "The maximum number of actions that can be included in a proposal"
      },
      "_acceptAdmin()": {
        "notice": "Accepts transfer of admin rights. msg.sender must be pendingAdmin"
      },
      "_setPendingAdmin(address)": {
        "notice": "Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer."
      },
      "_setProposalThreshold(uint256)": {
        "notice": "Admin function for setting the proposal threshold"
      },
      "_setQuorumVotes(uint256)": {
        "notice": "Admin function for setting the quorum votes"
      },
      "_setVotingDelay(uint256)": {
        "notice": "Admin function for setting the voting delay"
      },
      "_setVotingPeriod(uint256)": {
        "notice": "Admin function for setting the voting period"
      },
      "admin()": {
        "notice": "Administrator for this contract"
      },
      "cancel(uint256)": {
        "notice": "Cancels a proposal only if sender is the proposer, or proposer delegates dropped below proposal threshold"
      },
      "castVote(uint256,uint8)": {
        "notice": "Cast a vote for a proposal"
      },
      "castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)": {
        "notice": "Cast a vote for a proposal by signature"
      },
      "castVoteWithReason(uint256,uint8,string)": {
        "notice": "Cast a vote for a proposal with a reason"
      },
      "execute(uint256)": {
        "notice": "Executes a queued proposal if eta has passed"
      },
      "getActions(uint256)": {
        "notice": "Gets actions of a proposal."
      },
      "getReceipt(uint256,address)": {
        "notice": "Gets the receipt for a voter on a given proposal"
      },
      "implementation()": {
        "notice": "Active brains of Governor"
      },
      "initialize(address,address,address,uint256,uint256,uint256,uint256)": {
        "notice": "Used to initialize the contract during delegator contructor"
      },
      "latestProposalIds(address)": {
        "notice": "The latest proposal for each proposer"
      },
      "pendingAdmin()": {
        "notice": "Pending administrator for this contract"
      },
      "proposalCalldatas(uint256,uint256)": {
        "notice": "The official each proposal's calldatas: An ordered list of calldata to be passed to each call"
      },
      "proposalCount()": {
        "notice": "The total number of proposals"
      },
      "proposalReceipts(uint256,address)": {
        "notice": "The official each proposal's receipts: Receipts of ballots for the entire set of voters"
      },
      "proposalSignatures(uint256,uint256)": {
        "notice": "The official each proposal's signatures: An ordered list of function signatures to be called"
      },
      "proposalTargets(uint256,uint256)": {
        "notice": "The official each proposal's targets: An ordered list of target addresses for calls to be made"
      },
      "proposalThreshold()": {
        "notice": "The number of votes required in order for a voter to become a proposer"
      },
      "proposalValues(uint256,uint256)": {
        "notice": "The official each proposal's values: An ordered list of values (i.e. msg.value) to be passed to the calls to be made"
      },
      "proposals(uint256)": {
        "notice": "The official record of all proposals ever proposed"
      },
      "propose(address[],uint256[],string[],bytes[],string)": {
        "notice": "Function used to propose a new proposal. Sender must have delegates above the proposal threshold."
      },
      "queue(uint256)": {
        "notice": "Queues a proposal of state succeeded"
      },
      "quorumVotes()": {
        "notice": "The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed"
      },
      "releaseToken()": {
        "notice": "The address of the \"Release\" governance token"
      },
      "state(uint256)": {
        "notice": "Gets the state of a proposal"
      },
      "timelock()": {
        "notice": "The address of the Governance Timelock"
      },
      "token()": {
        "notice": "The address of the governance token"
      },
      "votingDelay()": {
        "notice": "The delay before voting on a proposal may take place, once proposed, in blocks"
      },
      "votingPeriod()": {
        "notice": "The duration of voting on a proposal, in blocks"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3323,
        "contract": "contracts/governor/IPCTDelegate.sol:IPCTDelegate",
        "label": "admin",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 3326,
        "contract": "contracts/governor/IPCTDelegate.sol:IPCTDelegate",
        "label": "pendingAdmin",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 3329,
        "contract": "contracts/governor/IPCTDelegate.sol:IPCTDelegate",
        "label": "implementation",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 3213,
        "contract": "contracts/governor/IPCTDelegate.sol:IPCTDelegate",
        "label": "votingDelay",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 3216,
        "contract": "contracts/governor/IPCTDelegate.sol:IPCTDelegate",
        "label": "votingPeriod",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 3219,
        "contract": "contracts/governor/IPCTDelegate.sol:IPCTDelegate",
        "label": "proposalThreshold",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 3222,
        "contract": "contracts/governor/IPCTDelegate.sol:IPCTDelegate",
        "label": "proposalCount",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 3225,
        "contract": "contracts/governor/IPCTDelegate.sol:IPCTDelegate",
        "label": "quorumVotes",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 3229,
        "contract": "contracts/governor/IPCTDelegate.sol:IPCTDelegate",
        "label": "timelock",
        "offset": 0,
        "slot": "8",
        "type": "t_contract(TimelockInterface)3508"
      },
      {
        "astId": 3233,
        "contract": "contracts/governor/IPCTDelegate.sol:IPCTDelegate",
        "label": "token",
        "offset": 0,
        "slot": "9",
        "type": "t_contract(IHasVotes)67"
      },
      {
        "astId": 3237,
        "contract": "contracts/governor/IPCTDelegate.sol:IPCTDelegate",
        "label": "releaseToken",
        "offset": 0,
        "slot": "10",
        "type": "t_contract(IHasVotes)67"
      },
      {
        "astId": 3243,
        "contract": "contracts/governor/IPCTDelegate.sol:IPCTDelegate",
        "label": "proposals",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_uint256,t_struct(Proposal)3301_storage)"
      },
      {
        "astId": 3249,
        "contract": "contracts/governor/IPCTDelegate.sol:IPCTDelegate",
        "label": "proposalTargets",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 3255,
        "contract": "contracts/governor/IPCTDelegate.sol:IPCTDelegate",
        "label": "proposalValues",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 3261,
        "contract": "contracts/governor/IPCTDelegate.sol:IPCTDelegate",
        "label": "proposalSignatures",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)"
      },
      {
        "astId": 3267,
        "contract": "contracts/governor/IPCTDelegate.sol:IPCTDelegate",
        "label": "proposalCalldatas",
        "offset": 0,
        "slot": "15",
        "type": "t_mapping(t_uint256,t_array(t_bytes_storage)dyn_storage)"
      },
      {
        "astId": 3275,
        "contract": "contracts/governor/IPCTDelegate.sol:IPCTDelegate",
        "label": "proposalReceipts",
        "offset": 0,
        "slot": "16",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Receipt)3308_storage))"
      },
      {
        "astId": 3280,
        "contract": "contracts/governor/IPCTDelegate.sol:IPCTDelegate",
        "label": "latestProposalIds",
        "offset": 0,
        "slot": "17",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 5,
        "contract": "contracts/governor/IPCTDelegate.sol:IPCTDelegate",
        "label": "_initialized",
        "offset": 0,
        "slot": "18",
        "type": "t_bool"
      },
      {
        "astId": 8,
        "contract": "contracts/governor/IPCTDelegate.sol:IPCTDelegate",
        "label": "_initializing",
        "offset": 1,
        "slot": "18",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes_storage)dyn_storage": {
        "base": "t_bytes_storage",
        "encoding": "dynamic_array",
        "label": "bytes[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(IHasVotes)67": {
        "encoding": "inplace",
        "label": "contract IHasVotes",
        "numberOfBytes": "20"
      },
      "t_contract(TimelockInterface)3508": {
        "encoding": "inplace",
        "label": "contract TimelockInterface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(Receipt)3308_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IPCTDelegateStorageV1.Receipt)",
        "numberOfBytes": "32",
        "value": "t_struct(Receipt)3308_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_uint256,t_array(t_bytes_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bytes[])",
        "numberOfBytes": "32",
        "value": "t_array(t_bytes_storage)dyn_storage"
      },
      "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string[])",
        "numberOfBytes": "32",
        "value": "t_array(t_string_storage)dyn_storage"
      },
      "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_struct(Receipt)3308_storage))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => struct IPCTDelegateStorageV1.Receipt))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_struct(Receipt)3308_storage)"
      },
      "t_mapping(t_uint256,t_struct(Proposal)3301_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct IPCTDelegateStorageV1.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)3301_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Proposal)3301_storage": {
        "encoding": "inplace",
        "label": "struct IPCTDelegateStorageV1.Proposal",
        "members": [
          {
            "astId": 3282,
            "contract": "contracts/governor/IPCTDelegate.sol:IPCTDelegate",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 3284,
            "contract": "contracts/governor/IPCTDelegate.sol:IPCTDelegate",
            "label": "proposer",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 3286,
            "contract": "contracts/governor/IPCTDelegate.sol:IPCTDelegate",
            "label": "eta",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 3288,
            "contract": "contracts/governor/IPCTDelegate.sol:IPCTDelegate",
            "label": "startBlock",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 3290,
            "contract": "contracts/governor/IPCTDelegate.sol:IPCTDelegate",
            "label": "endBlock",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 3292,
            "contract": "contracts/governor/IPCTDelegate.sol:IPCTDelegate",
            "label": "forVotes",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 3294,
            "contract": "contracts/governor/IPCTDelegate.sol:IPCTDelegate",
            "label": "againstVotes",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 3296,
            "contract": "contracts/governor/IPCTDelegate.sol:IPCTDelegate",
            "label": "abstainVotes",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 3298,
            "contract": "contracts/governor/IPCTDelegate.sol:IPCTDelegate",
            "label": "canceled",
            "offset": 0,
            "slot": "8",
            "type": "t_bool"
          },
          {
            "astId": 3300,
            "contract": "contracts/governor/IPCTDelegate.sol:IPCTDelegate",
            "label": "executed",
            "offset": 1,
            "slot": "8",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_struct(Receipt)3308_storage": {
        "encoding": "inplace",
        "label": "struct IPCTDelegateStorageV1.Receipt",
        "members": [
          {
            "astId": 3303,
            "contract": "contracts/governor/IPCTDelegate.sol:IPCTDelegate",
            "label": "hasVoted",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 3305,
            "contract": "contracts/governor/IPCTDelegate.sol:IPCTDelegate",
            "label": "support",
            "offset": 1,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 3307,
            "contract": "contracts/governor/IPCTDelegate.sol:IPCTDelegate",
            "label": "votes",
            "offset": 2,
            "slot": "0",
            "type": "t_uint96"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      },
      "t_uint96": {
        "encoding": "inplace",
        "label": "uint96",
        "numberOfBytes": "12"
      }
    }
  }
}