/*! For license information please see main.js.LICENSE.txt */
(()=>{var e={837:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>o});var a=n(601),i=n.n(a),s=n(314),r=n.n(s)()(i());r.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Source+Code+Pro:wght@400;500;600;700&display=swap);"]),r.push([e.id,"\nhtml,\nbody {\n  font-family: 'Source Code Pro', monospace;\n}\n",""]);const o=r},314:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",a=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),a&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),a&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,a,i,s){"string"==typeof e&&(e=[[null,e,void 0]]);var r={};if(a)for(var o=0;o<this.length;o++){var u=this[o][0];null!=u&&(r[u]=!0)}for(var d=0;d<e.length;d++){var p=[].concat(e[d]);a&&r[p[0]]||(void 0!==s&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=s),n&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=n):p[2]=n),i&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=i):p[4]="".concat(i)),t.push(p))}},t}},601:e=>{"use strict";e.exports=function(e){return e[1]}},884:(e,t,n)=>{var a=n(837);a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.id,a,""]]),a.locals&&(e.exports=a.locals),(0,n(534).A)("2cbbc963",a,!1,{})},534:(e,t,n)=>{"use strict";function a(e,t){for(var n=[],a={},i=0;i<t.length;i++){var s=t[i],r=s[0],o={id:e+":"+i,css:s[1],media:s[2],sourceMap:s[3]};a[r]?a[r].parts.push(o):n.push(a[r]={id:r,parts:[o]})}return n}n.d(t,{A:()=>c});var i="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!i)throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var s={},r=i&&(document.head||document.getElementsByTagName("head")[0]),o=null,u=0,d=!1,p=function(){},y=null,l="data-vue-ssr-id",m="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function c(e,t,n,i){d=n,y=i||{};var r=a(e,t);return f(r),function(t){for(var n=[],i=0;i<r.length;i++){var o=r[i];(u=s[o.id]).refs--,n.push(u)}for(t?f(r=a(e,t)):r=[],i=0;i<n.length;i++){var u;if(0===(u=n[i]).refs){for(var d=0;d<u.parts.length;d++)u.parts[d]();delete s[u.id]}}}}function f(e){for(var t=0;t<e.length;t++){var n=e[t],a=s[n.id];if(a){a.refs++;for(var i=0;i<a.parts.length;i++)a.parts[i](n.parts[i]);for(;i<n.parts.length;i++)a.parts.push(b(n.parts[i]));a.parts.length>n.parts.length&&(a.parts.length=n.parts.length)}else{var r=[];for(i=0;i<n.parts.length;i++)r.push(b(n.parts[i]));s[n.id]={id:n.id,refs:1,parts:r}}}}function T(){var e=document.createElement("style");return e.type="text/css",r.appendChild(e),e}function b(e){var t,n,a=document.querySelector("style["+l+'~="'+e.id+'"]');if(a){if(d)return p;a.parentNode.removeChild(a)}if(m){var i=u++;a=o||(o=T()),t=v.bind(null,a,i,!1),n=v.bind(null,a,i,!0)}else a=T(),t=w.bind(null,a),n=function(){a.parentNode.removeChild(a)};return t(e),function(a){if(a){if(a.css===e.css&&a.media===e.media&&a.sourceMap===e.sourceMap)return;t(e=a)}else n()}}var h,g=(h=[],function(e,t){return h[e]=t,h.filter(Boolean).join("\n")});function v(e,t,n,a){var i=n?"":a.css;if(e.styleSheet)e.styleSheet.cssText=g(t,i);else{var s=document.createTextNode(i),r=e.childNodes;r[t]&&e.removeChild(r[t]),r.length?e.insertBefore(s,r[t]):e.appendChild(s)}}function w(e,t){var n=t.css,a=t.media,i=t.sourceMap;if(a&&e.setAttribute("media",a),y.ssrId&&e.setAttribute(l,t.id),i&&(n+="\n/*# sourceURL="+i.sources[0]+" */",n+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */"),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},t={};function n(a){var i=t[a];if(void 0!==i)return i.exports;var s=t[a]={id:a,exports:{}};return e[a](s,s.exports,n),s.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{"use strict";var e=Object.freeze({}),t=Array.isArray;function a(e){return null==e}function i(e){return null!=e}function s(e){return!0===e}function r(e){return"string"==typeof e||"number"==typeof e||"symbol"==typeof e||"boolean"==typeof e}function o(e){return"function"==typeof e}function u(e){return null!==e&&"object"==typeof e}var d=Object.prototype.toString;function p(e){return"[object Object]"===d.call(e)}function y(e){var t=parseFloat(String(e));return t>=0&&Math.floor(t)===t&&isFinite(e)}function l(e){return i(e)&&"function"==typeof e.then&&"function"==typeof e.catch}function m(e){return null==e?"":Array.isArray(e)||p(e)&&e.toString===d?JSON.stringify(e,c,2):String(e)}function c(e,t){return t&&t.__v_isRef?t.value:t}function f(e){var t=parseFloat(e);return isNaN(t)?e:t}function T(e,t){for(var n=Object.create(null),a=e.split(","),i=0;i<a.length;i++)n[a[i]]=!0;return t?function(e){return n[e.toLowerCase()]}:function(e){return n[e]}}var b=T("slot,component",!0),h=T("key,ref,slot,slot-scope,is");function g(e,t){var n=e.length;if(n){if(t===e[n-1])return void(e.length=n-1);var a=e.indexOf(t);if(a>-1)return e.splice(a,1)}}var v=Object.prototype.hasOwnProperty;function w(e,t){return v.call(e,t)}function M(e){var t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}var _=/-(\w)/g,A=M((function(e){return e.replace(_,(function(e,t){return t?t.toUpperCase():""}))})),C=M((function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),k=/\B([A-Z])/g,x=M((function(e){return e.replace(k,"-$1").toLowerCase()})),I=Function.prototype.bind?function(e,t){return e.bind(t)}:function(e,t){function n(n){var a=arguments.length;return a?a>1?e.apply(t,arguments):e.call(t,n):e.call(t)}return n._length=e.length,n};function P(e,t){t=t||0;for(var n=e.length-t,a=new Array(n);n--;)a[n]=e[n+t];return a}function R(e,t){for(var n in t)e[n]=t[n];return e}function S(e){for(var t={},n=0;n<e.length;n++)e[n]&&R(t,e[n]);return t}function D(e,t,n){}var O=function(e,t,n){return!1},L=function(e){return e};function E(e,t){if(e===t)return!0;var n=u(e),a=u(t);if(!n||!a)return!n&&!a&&String(e)===String(t);try{var i=Array.isArray(e),s=Array.isArray(t);if(i&&s)return e.length===t.length&&e.every((function(e,n){return E(e,t[n])}));if(e instanceof Date&&t instanceof Date)return e.getTime()===t.getTime();if(i||s)return!1;var r=Object.keys(e),o=Object.keys(t);return r.length===o.length&&r.every((function(n){return E(e[n],t[n])}))}catch(e){return!1}}function U(e,t){for(var n=0;n<e.length;n++)if(E(e[n],t))return n;return-1}function V(e){var t=!1;return function(){t||(t=!0,e.apply(this,arguments))}}var B="data-server-rendered",N=["component","directive","filter"],F=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch","renderTracked","renderTriggered"],q={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:O,isReservedAttr:O,isUnknownElement:O,getTagNamespace:D,parsePlatformTagName:L,mustUseProp:O,async:!0,_lifecycleHooks:F},$=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function z(e){var t=(e+"").charCodeAt(0);return 36===t||95===t}function j(e,t,n,a){Object.defineProperty(e,t,{value:n,enumerable:!!a,writable:!0,configurable:!0})}var H=new RegExp("[^".concat($.source,".$_\\d]")),W="__proto__"in{},Q="undefined"!=typeof window,G=Q&&window.navigator.userAgent.toLowerCase(),X=G&&/msie|trident/.test(G),Y=G&&G.indexOf("msie 9.0")>0,J=G&&G.indexOf("edge/")>0;G&&G.indexOf("android");var K=G&&/iphone|ipad|ipod|ios/.test(G);G&&/chrome\/\d+/.test(G),G&&/phantomjs/.test(G);var Z,ee=G&&G.match(/firefox\/(\d+)/),te={}.watch,ne=!1;if(Q)try{var ae={};Object.defineProperty(ae,"passive",{get:function(){ne=!0}}),window.addEventListener("test-passive",null,ae)}catch(e){}var ie=function(){return void 0===Z&&(Z=!Q&&void 0!==n.g&&n.g.process&&"server"===n.g.process.env.VUE_ENV),Z},se=Q&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function re(e){return"function"==typeof e&&/native code/.test(e.toString())}var oe,ue="undefined"!=typeof Symbol&&re(Symbol)&&"undefined"!=typeof Reflect&&re(Reflect.ownKeys);oe="undefined"!=typeof Set&&re(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var de=null;function pe(e){void 0===e&&(e=null),e||de&&de._scope.off(),de=e,e&&e._scope.on()}var ye=function(){function e(e,t,n,a,i,s,r,o){this.tag=e,this.data=t,this.children=n,this.text=a,this.elm=i,this.ns=void 0,this.context=s,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=t&&t.key,this.componentOptions=r,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=o,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1}return Object.defineProperty(e.prototype,"child",{get:function(){return this.componentInstance},enumerable:!1,configurable:!0}),e}(),le=function(e){void 0===e&&(e="");var t=new ye;return t.text=e,t.isComment=!0,t};function me(e){return new ye(void 0,void 0,void 0,String(e))}function ce(e){var t=new ye(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return t.ns=e.ns,t.isStatic=e.isStatic,t.key=e.key,t.isComment=e.isComment,t.fnContext=e.fnContext,t.fnOptions=e.fnOptions,t.fnScopeId=e.fnScopeId,t.asyncMeta=e.asyncMeta,t.isCloned=!0,t}"function"==typeof SuppressedError&&SuppressedError;var fe=0,Te=[],be=function(){for(var e=0;e<Te.length;e++){var t=Te[e];t.subs=t.subs.filter((function(e){return e})),t._pending=!1}Te.length=0},he=function(){function e(){this._pending=!1,this.id=fe++,this.subs=[]}return e.prototype.addSub=function(e){this.subs.push(e)},e.prototype.removeSub=function(e){this.subs[this.subs.indexOf(e)]=null,this._pending||(this._pending=!0,Te.push(this))},e.prototype.depend=function(t){e.target&&e.target.addDep(this)},e.prototype.notify=function(e){for(var t=this.subs.filter((function(e){return e})),n=0,a=t.length;n<a;n++)t[n].update()},e}();he.target=null;var ge=[];function ve(e){ge.push(e),he.target=e}function we(){ge.pop(),he.target=ge[ge.length-1]}var Me=Array.prototype,_e=Object.create(Me);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(e){var t=Me[e];j(_e,e,(function(){for(var n=[],a=0;a<arguments.length;a++)n[a]=arguments[a];var i,s=t.apply(this,n),r=this.__ob__;switch(e){case"push":case"unshift":i=n;break;case"splice":i=n.slice(2)}return i&&r.observeArray(i),r.dep.notify(),s}))}));var Ae=Object.getOwnPropertyNames(_e),Ce={},ke=!0;function xe(e){ke=e}var Ie={notify:D,depend:D,addSub:D,removeSub:D},Pe=function(){function e(e,n,a){if(void 0===n&&(n=!1),void 0===a&&(a=!1),this.value=e,this.shallow=n,this.mock=a,this.dep=a?Ie:new he,this.vmCount=0,j(e,"__ob__",this),t(e)){if(!a)if(W)e.__proto__=_e;else for(var i=0,s=Ae.length;i<s;i++)j(e,o=Ae[i],_e[o]);n||this.observeArray(e)}else{var r=Object.keys(e);for(i=0;i<r.length;i++){var o;Se(e,o=r[i],Ce,void 0,n,a)}}}return e.prototype.observeArray=function(e){for(var t=0,n=e.length;t<n;t++)Re(e[t],!1,this.mock)},e}();function Re(e,n,a){return e&&w(e,"__ob__")&&e.__ob__ instanceof Pe?e.__ob__:!ke||!a&&ie()||!t(e)&&!p(e)||!Object.isExtensible(e)||e.__v_skip||Ve(e)||e instanceof ye?void 0:new Pe(e,n,a)}function Se(e,n,a,i,s,r,o){void 0===o&&(o=!1);var u=new he,d=Object.getOwnPropertyDescriptor(e,n);if(!d||!1!==d.configurable){var p=d&&d.get,y=d&&d.set;p&&!y||a!==Ce&&2!==arguments.length||(a=e[n]);var l=s?a&&a.__ob__:Re(a,!1,r);return Object.defineProperty(e,n,{enumerable:!0,configurable:!0,get:function(){var n=p?p.call(e):a;return he.target&&(u.depend(),l&&(l.dep.depend(),t(n)&&Le(n))),Ve(n)&&!s?n.value:n},set:function(t){var n,i,o=p?p.call(e):a;if((n=o)===(i=t)?0===n&&1/n!=1/i:n==n||i==i){if(y)y.call(e,t);else{if(p)return;if(!s&&Ve(o)&&!Ve(t))return void(o.value=t);a=t}l=s?t&&t.__ob__:Re(t,!1,r),u.notify()}}}),u}}function De(e,n,a){if(!Ue(e)){var i=e.__ob__;return t(e)&&y(n)?(e.length=Math.max(e.length,n),e.splice(n,1,a),i&&!i.shallow&&i.mock&&Re(a,!1,!0),a):n in e&&!(n in Object.prototype)?(e[n]=a,a):e._isVue||i&&i.vmCount?a:i?(Se(i.value,n,a,void 0,i.shallow,i.mock),i.dep.notify(),a):(e[n]=a,a)}}function Oe(e,n){if(t(e)&&y(n))e.splice(n,1);else{var a=e.__ob__;e._isVue||a&&a.vmCount||Ue(e)||w(e,n)&&(delete e[n],a&&a.dep.notify())}}function Le(e){for(var n=void 0,a=0,i=e.length;a<i;a++)(n=e[a])&&n.__ob__&&n.__ob__.dep.depend(),t(n)&&Le(n)}function Ee(e){return function(e,t){Ue(e)||Re(e,t,ie())}(e,!0),j(e,"__v_isShallow",!0),e}function Ue(e){return!(!e||!e.__v_isReadonly)}function Ve(e){return!(!e||!0!==e.__v_isRef)}function Be(e,t,n){Object.defineProperty(e,n,{enumerable:!0,configurable:!0,get:function(){var e=t[n];if(Ve(e))return e.value;var a=e&&e.__ob__;return a&&a.dep.depend(),e},set:function(e){var a=t[n];Ve(a)&&!Ve(e)?a.value=e:t[n]=e}})}var Ne=M((function(e){var t="&"===e.charAt(0),n="~"===(e=t?e.slice(1):e).charAt(0),a="!"===(e=n?e.slice(1):e).charAt(0);return{name:e=a?e.slice(1):e,once:n,capture:a,passive:t}}));function Fe(e,n){function a(){var e=a.fns;if(!t(e))return Yt(e,null,arguments,n,"v-on handler");for(var i=e.slice(),s=0;s<i.length;s++)Yt(i[s],null,arguments,n,"v-on handler")}return a.fns=e,a}function qe(e,t,n,i,r,o){var u,d,p,y;for(u in e)d=e[u],p=t[u],y=Ne(u),a(d)||(a(p)?(a(d.fns)&&(d=e[u]=Fe(d,o)),s(y.once)&&(d=e[u]=r(y.name,d,y.capture)),n(y.name,d,y.capture,y.passive,y.params)):d!==p&&(p.fns=d,e[u]=p));for(u in t)a(e[u])&&i((y=Ne(u)).name,t[u],y.capture)}function $e(e,t,n){var r;e instanceof ye&&(e=e.data.hook||(e.data.hook={}));var o=e[t];function u(){n.apply(this,arguments),g(r.fns,u)}a(o)?r=Fe([u]):i(o.fns)&&s(o.merged)?(r=o).fns.push(u):r=Fe([o,u]),r.merged=!0,e[t]=r}function ze(e,t,n,a,s){if(i(t)){if(w(t,n))return e[n]=t[n],s||delete t[n],!0;if(w(t,a))return e[n]=t[a],s||delete t[a],!0}return!1}function je(e){return r(e)?[me(e)]:t(e)?We(e):void 0}function He(e){return i(e)&&i(e.text)&&!1===e.isComment}function We(e,n){var o,u,d,p,y=[];for(o=0;o<e.length;o++)a(u=e[o])||"boolean"==typeof u||(p=y[d=y.length-1],t(u)?u.length>0&&(He((u=We(u,"".concat(n||"","_").concat(o)))[0])&&He(p)&&(y[d]=me(p.text+u[0].text),u.shift()),y.push.apply(y,u)):r(u)?He(p)?y[d]=me(p.text+u):""!==u&&y.push(me(u)):He(u)&&He(p)?y[d]=me(p.text+u.text):(s(e._isVList)&&i(u.tag)&&a(u.key)&&i(n)&&(u.key="__vlist".concat(n,"_").concat(o,"__")),y.push(u)));return y}var Qe=1,Ge=2;function Xe(e,n,a,d,p,y){return(t(a)||r(a))&&(p=d,d=a,a=void 0),s(y)&&(p=Ge),function(e,n,a,s,r){if(i(a)&&i(a.__ob__))return le();if(i(a)&&i(a.is)&&(n=a.is),!n)return le();var d,p;if(t(s)&&o(s[0])&&((a=a||{}).scopedSlots={default:s[0]},s.length=0),r===Ge?s=je(s):r===Qe&&(s=function(e){for(var n=0;n<e.length;n++)if(t(e[n]))return Array.prototype.concat.apply([],e);return e}(s)),"string"==typeof n){var y=void 0;p=e.$vnode&&e.$vnode.ns||q.getTagNamespace(n),d=q.isReservedTag(n)?new ye(q.parsePlatformTagName(n),a,s,void 0,void 0,e):a&&a.pre||!i(y=zn(e.$options,"components",n))?new ye(n,a,s,void 0,void 0,e):On(y,a,e,s,n)}else d=On(n,a,e,s);return t(d)?d:i(d)?(i(p)&&Ye(d,p),i(a)&&function(e){u(e.style)&&ln(e.style),u(e.class)&&ln(e.class)}(a),d):le()}(e,n,a,d,p)}function Ye(e,t,n){if(e.ns=t,"foreignObject"===e.tag&&(t=void 0,n=!0),i(e.children))for(var r=0,o=e.children.length;r<o;r++){var u=e.children[r];i(u.tag)&&(a(u.ns)||s(n)&&"svg"!==u.tag)&&Ye(u,t,n)}}function Je(e,n){var a,s,r,o,d=null;if(t(e)||"string"==typeof e)for(d=new Array(e.length),a=0,s=e.length;a<s;a++)d[a]=n(e[a],a);else if("number"==typeof e)for(d=new Array(e),a=0;a<e;a++)d[a]=n(a+1,a);else if(u(e))if(ue&&e[Symbol.iterator]){d=[];for(var p=e[Symbol.iterator](),y=p.next();!y.done;)d.push(n(y.value,d.length)),y=p.next()}else for(r=Object.keys(e),d=new Array(r.length),a=0,s=r.length;a<s;a++)o=r[a],d[a]=n(e[o],o,a);return i(d)||(d=[]),d._isVList=!0,d}function Ke(e,t,n,a){var i,s=this.$scopedSlots[e];s?(n=n||{},a&&(n=R(R({},a),n)),i=s(n)||(o(t)?t():t)):i=this.$slots[e]||(o(t)?t():t);var r=n&&n.slot;return r?this.$createElement("template",{slot:r},i):i}function Ze(e){return zn(this.$options,"filters",e)||L}function et(e,n){return t(e)?-1===e.indexOf(n):e!==n}function tt(e,t,n,a,i){var s=q.keyCodes[t]||n;return i&&a&&!q.keyCodes[t]?et(i,a):s?et(s,e):a?x(a)!==t:void 0===e}function nt(e,n,a,i,s){if(a&&u(a)){t(a)&&(a=S(a));var r=void 0,o=function(t){if("class"===t||"style"===t||h(t))r=e;else{var o=e.attrs&&e.attrs.type;r=i||q.mustUseProp(n,o,t)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var u=A(t),d=x(t);u in r||d in r||(r[t]=a[t],s&&((e.on||(e.on={}))["update:".concat(t)]=function(e){a[t]=e}))};for(var d in a)o(d)}return e}function at(e,t){var n=this._staticTrees||(this._staticTrees=[]),a=n[e];return a&&!t||st(a=n[e]=this.$options.staticRenderFns[e].call(this._renderProxy,this._c,this),"__static__".concat(e),!1),a}function it(e,t,n){return st(e,"__once__".concat(t).concat(n?"_".concat(n):""),!0),e}function st(e,n,a){if(t(e))for(var i=0;i<e.length;i++)e[i]&&"string"!=typeof e[i]&&rt(e[i],"".concat(n,"_").concat(i),a);else rt(e,n,a)}function rt(e,t,n){e.isStatic=!0,e.key=t,e.isOnce=n}function ot(e,t){if(t&&p(t)){var n=e.on=e.on?R({},e.on):{};for(var a in t){var i=n[a],s=t[a];n[a]=i?[].concat(i,s):s}}return e}function ut(e,n,a,i){n=n||{$stable:!a};for(var s=0;s<e.length;s++){var r=e[s];t(r)?ut(r,n,a):r&&(r.proxy&&(r.fn.proxy=!0),n[r.key]=r.fn)}return i&&(n.$key=i),n}function dt(e,t){for(var n=0;n<t.length;n+=2){var a=t[n];"string"==typeof a&&a&&(e[t[n]]=t[n+1])}return e}function pt(e,t){return"string"==typeof e?t+e:e}function yt(e){e._o=it,e._n=f,e._s=m,e._l=Je,e._t=Ke,e._q=E,e._i=U,e._m=at,e._f=Ze,e._k=tt,e._b=nt,e._v=me,e._e=le,e._u=ut,e._g=ot,e._d=dt,e._p=pt}function lt(e,t){if(!e||!e.length)return{};for(var n={},a=0,i=e.length;a<i;a++){var s=e[a],r=s.data;if(r&&r.attrs&&r.attrs.slot&&delete r.attrs.slot,s.context!==t&&s.fnContext!==t||!r||null==r.slot)(n.default||(n.default=[])).push(s);else{var o=r.slot,u=n[o]||(n[o]=[]);"template"===s.tag?u.push.apply(u,s.children||[]):u.push(s)}}for(var d in n)n[d].every(mt)&&delete n[d];return n}function mt(e){return e.isComment&&!e.asyncFactory||" "===e.text}function ct(e){return e.isComment&&e.asyncFactory}function ft(t,n,a,i){var s,r=Object.keys(a).length>0,o=n?!!n.$stable:!r,u=n&&n.$key;if(n){if(n._normalized)return n._normalized;if(o&&i&&i!==e&&u===i.$key&&!r&&!i.$hasNormal)return i;for(var d in s={},n)n[d]&&"$"!==d[0]&&(s[d]=Tt(t,a,d,n[d]))}else s={};for(var p in a)p in s||(s[p]=bt(a,p));return n&&Object.isExtensible(n)&&(n._normalized=s),j(s,"$stable",o),j(s,"$key",u),j(s,"$hasNormal",r),s}function Tt(e,n,a,i){var s=function(){var n=de;pe(e);var a=arguments.length?i.apply(null,arguments):i({}),s=(a=a&&"object"==typeof a&&!t(a)?[a]:je(a))&&a[0];return pe(n),a&&(!s||1===a.length&&s.isComment&&!ct(s))?void 0:a};return i.proxy&&Object.defineProperty(n,a,{get:s,enumerable:!0,configurable:!0}),s}function bt(e,t){return function(){return e[t]}}function ht(e,t,n,a,i){var s=!1;for(var r in t)r in e?t[r]!==n[r]&&(s=!0):(s=!0,gt(e,r,a,i));for(var r in e)r in t||(s=!0,delete e[r]);return s}function gt(e,t,n,a){Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){return n[a][t]}})}function vt(e,t){for(var n in t)e[n]=t[n];for(var n in e)n in t||delete e[n]}var wt,Mt,_t=null;function At(e,t){return(e.__esModule||ue&&"Module"===e[Symbol.toStringTag])&&(e=e.default),u(e)?t.extend(e):e}function Ct(e){if(t(e))for(var n=0;n<e.length;n++){var a=e[n];if(i(a)&&(i(a.componentOptions)||ct(a)))return a}}function kt(e,t){wt.$on(e,t)}function xt(e,t){wt.$off(e,t)}function It(e,t){var n=wt;return function a(){null!==t.apply(null,arguments)&&n.$off(e,a)}}function Pt(e,t,n){wt=e,qe(t,n||{},kt,xt,It,e),wt=void 0}var Rt=function(){function e(e){void 0===e&&(e=!1),this.detached=e,this.active=!0,this.effects=[],this.cleanups=[],this.parent=Mt,!e&&Mt&&(this.index=(Mt.scopes||(Mt.scopes=[])).push(this)-1)}return e.prototype.run=function(e){if(this.active){var t=Mt;try{return Mt=this,e()}finally{Mt=t}}},e.prototype.on=function(){Mt=this},e.prototype.off=function(){Mt=this.parent},e.prototype.stop=function(e){if(this.active){var t=void 0,n=void 0;for(t=0,n=this.effects.length;t<n;t++)this.effects[t].teardown();for(t=0,n=this.cleanups.length;t<n;t++)this.cleanups[t]();if(this.scopes)for(t=0,n=this.scopes.length;t<n;t++)this.scopes[t].stop(!0);if(!this.detached&&this.parent&&!e){var a=this.parent.scopes.pop();a&&a!==this&&(this.parent.scopes[this.index]=a,a.index=this.index)}this.parent=void 0,this.active=!1}},e}(),St=null;function Dt(e){var t=St;return St=e,function(){St=t}}function Ot(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function Lt(e,t){if(t){if(e._directInactive=!1,Ot(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var n=0;n<e.$children.length;n++)Lt(e.$children[n]);Ut(e,"activated")}}function Et(e,t){if(!(t&&(e._directInactive=!0,Ot(e))||e._inactive)){e._inactive=!0;for(var n=0;n<e.$children.length;n++)Et(e.$children[n]);Ut(e,"deactivated")}}function Ut(e,t,n,a){void 0===a&&(a=!0),ve();var i=de,s=Mt;a&&pe(e);var r=e.$options[t],o="".concat(t," hook");if(r)for(var u=0,d=r.length;u<d;u++)Yt(r[u],e,n||null,e,o);e._hasHookEvent&&e.$emit("hook:"+t),a&&(pe(i),s&&s.on()),we()}var Vt=[],Bt=[],Nt={},Ft=!1,qt=!1,$t=0,zt=0,jt=Date.now;if(Q&&!X){var Ht=window.performance;Ht&&"function"==typeof Ht.now&&jt()>document.createEvent("Event").timeStamp&&(jt=function(){return Ht.now()})}var Wt=function(e,t){if(e.post){if(!t.post)return 1}else if(t.post)return-1;return e.id-t.id};function Qt(){var e,t;for(zt=jt(),qt=!0,Vt.sort(Wt),$t=0;$t<Vt.length;$t++)(e=Vt[$t]).before&&e.before(),t=e.id,Nt[t]=null,e.run();var n=Bt.slice(),a=Vt.slice();$t=Vt.length=Bt.length=0,Nt={},Ft=qt=!1,function(e){for(var t=0;t<e.length;t++)e[t]._inactive=!0,Lt(e[t],!0)}(n),function(e){for(var t=e.length;t--;){var n=e[t],a=n.vm;a&&a._watcher===n&&a._isMounted&&!a._isDestroyed&&Ut(a,"updated")}}(a),be(),se&&q.devtools&&se.emit("flush")}var Gt="watcher";function Xt(e,t,n){ve();try{if(t)for(var a=t;a=a.$parent;){var i=a.$options.errorCaptured;if(i)for(var s=0;s<i.length;s++)try{if(!1===i[s].call(a,e,t,n))return}catch(e){Jt(e,a,"errorCaptured hook")}}Jt(e,t,n)}finally{we()}}function Yt(e,t,n,a,i){var s;try{(s=n?e.apply(t,n):e.call(t))&&!s._isVue&&l(s)&&!s._handled&&(s.catch((function(e){return Xt(e,a,i+" (Promise/async)")})),s._handled=!0)}catch(e){Xt(e,a,i)}return s}function Jt(e,t,n){if(q.errorHandler)try{return q.errorHandler.call(null,e,t,n)}catch(t){t!==e&&Kt(t)}Kt(e)}function Kt(e,t,n){if(!Q||"undefined"==typeof console)throw e;console.error(e)}"".concat(Gt," callback"),"".concat(Gt," getter"),"".concat(Gt," cleanup");var Zt,en=!1,tn=[],nn=!1;function an(){nn=!1;var e=tn.slice(0);tn.length=0;for(var t=0;t<e.length;t++)e[t]()}if("undefined"!=typeof Promise&&re(Promise)){var sn=Promise.resolve();Zt=function(){sn.then(an),K&&setTimeout(D)},en=!0}else if(X||"undefined"==typeof MutationObserver||!re(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Zt="undefined"!=typeof setImmediate&&re(setImmediate)?function(){setImmediate(an)}:function(){setTimeout(an,0)};else{var rn=1,on=new MutationObserver(an),un=document.createTextNode(String(rn));on.observe(un,{characterData:!0}),Zt=function(){rn=(rn+1)%2,un.data=String(rn)},en=!0}function dn(e,t){var n;if(tn.push((function(){if(e)try{e.call(t)}catch(e){Xt(e,t,"nextTick")}else n&&n(t)})),nn||(nn=!0,Zt()),!e&&"undefined"!=typeof Promise)return new Promise((function(e){n=e}))}function pn(e){return function(t,n){if(void 0===n&&(n=de),n)return function(e,t,n){var a=e.$options;a[t]=Nn(a[t],n)}(n,e,t)}}pn("beforeMount"),pn("mounted"),pn("beforeUpdate"),pn("updated"),pn("beforeDestroy"),pn("destroyed"),pn("activated"),pn("deactivated"),pn("serverPrefetch"),pn("renderTracked"),pn("renderTriggered"),pn("errorCaptured");var yn=new oe;function ln(e){return mn(e,yn),yn.clear(),e}function mn(e,n){var a,i,s=t(e);if(!(!s&&!u(e)||e.__v_skip||Object.isFrozen(e)||e instanceof ye)){if(e.__ob__){var r=e.__ob__.dep.id;if(n.has(r))return;n.add(r)}if(s)for(a=e.length;a--;)mn(e[a],n);else if(Ve(e))mn(e.value,n);else for(a=(i=Object.keys(e)).length;a--;)mn(e[i[a]],n)}}var cn=0,fn=function(){function e(e,t,n,a,i){var s;void 0===(s=Mt&&!Mt._vm?Mt:e?e._scope:void 0)&&(s=Mt),s&&s.active&&s.effects.push(this),(this.vm=e)&&i&&(e._watcher=this),a?(this.deep=!!a.deep,this.user=!!a.user,this.lazy=!!a.lazy,this.sync=!!a.sync,this.before=a.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=n,this.id=++cn,this.active=!0,this.post=!1,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new oe,this.newDepIds=new oe,this.expression="",o(t)?this.getter=t:(this.getter=function(e){if(!H.test(e)){var t=e.split(".");return function(e){for(var n=0;n<t.length;n++){if(!e)return;e=e[t[n]]}return e}}}(t),this.getter||(this.getter=D)),this.value=this.lazy?void 0:this.get()}return e.prototype.get=function(){var e;ve(this);var t=this.vm;try{e=this.getter.call(t,t)}catch(e){if(!this.user)throw e;Xt(e,t,'getter for watcher "'.concat(this.expression,'"'))}finally{this.deep&&ln(e),we(),this.cleanupDeps()}return e},e.prototype.addDep=function(e){var t=e.id;this.newDepIds.has(t)||(this.newDepIds.add(t),this.newDeps.push(e),this.depIds.has(t)||e.addSub(this))},e.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var t=this.deps[e];this.newDepIds.has(t.id)||t.removeSub(this)}var n=this.depIds;this.depIds=this.newDepIds,this.newDepIds=n,this.newDepIds.clear(),n=this.deps,this.deps=this.newDeps,this.newDeps=n,this.newDeps.length=0},e.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(e){var t=e.id;if(null==Nt[t]&&(e!==he.target||!e.noRecurse)){if(Nt[t]=!0,qt){for(var n=Vt.length-1;n>$t&&Vt[n].id>e.id;)n--;Vt.splice(n+1,0,e)}else Vt.push(e);Ft||(Ft=!0,dn(Qt))}}(this)},e.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||u(e)||this.deep){var t=this.value;if(this.value=e,this.user){var n='callback for watcher "'.concat(this.expression,'"');Yt(this.cb,this.vm,[e,t],this.vm,n)}else this.cb.call(this.vm,e,t)}}},e.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},e.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},e.prototype.teardown=function(){if(this.vm&&!this.vm._isBeingDestroyed&&g(this.vm._scope.effects,this),this.active){for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1,this.onStop&&this.onStop()}},e}(),Tn={enumerable:!0,configurable:!0,get:D,set:D};function bn(e,t,n){Tn.get=function(){return this[t][n]},Tn.set=function(e){this[t][n]=e},Object.defineProperty(e,n,Tn)}function hn(n){var a=n.$options;if(a.props&&function(e,t){var n=e.$options.propsData||{},a=e._props=Ee({}),i=e.$options._propKeys=[];!e.$parent||xe(!1);var s=function(s){i.push(s);var r=jn(s,t,n,e);Se(a,s,r,void 0,!0),s in e||bn(e,"_props",s)};for(var r in t)s(r);xe(!0)}(n,a.props),function(t){var n=t.$options,a=n.setup;if(a){var i=t._setupContext=function(t){return{get attrs(){if(!t._attrsProxy){var n=t._attrsProxy={};j(n,"_v_attr_proxy",!0),ht(n,t.$attrs,e,t,"$attrs")}return t._attrsProxy},get listeners(){return t._listenersProxy||ht(t._listenersProxy={},t.$listeners,e,t,"$listeners"),t._listenersProxy},get slots(){return function(e){return e._slotsProxy||vt(e._slotsProxy={},e.$scopedSlots),e._slotsProxy}(t)},emit:I(t.$emit,t),expose:function(e){e&&Object.keys(e).forEach((function(n){return Be(t,e,n)}))}}}(t);pe(t),ve();var s=Yt(a,null,[t._props||Ee({}),i],t,"setup");if(we(),pe(),o(s))n.render=s;else if(u(s))if(t._setupState=s,s.__sfc){var r=t._setupProxy={};for(var d in s)"__sfc"!==d&&Be(r,s,d)}else for(var d in s)z(d)||Be(t,s,d)}}(n),a.methods&&function(e,t){for(var n in e.$options.props,t)e[n]="function"!=typeof t[n]?D:I(t[n],e)}(n,a.methods),a.data)!function(e){var t=e.$options.data;p(t=e._data=o(t)?function(e,t){ve();try{return e.call(t,t)}catch(e){return Xt(e,t,"data()"),{}}finally{we()}}(t,e):t||{})||(t={});for(var n=Object.keys(t),a=e.$options.props,i=(e.$options.methods,n.length);i--;){var s=n[i];a&&w(a,s)||z(s)||bn(e,"_data",s)}var r=Re(t);r&&r.vmCount++}(n);else{var i=Re(n._data={});i&&i.vmCount++}a.computed&&function(e,t){var n=e._computedWatchers=Object.create(null),a=ie();for(var i in t){var s=t[i],r=o(s)?s:s.get;a||(n[i]=new fn(e,r||D,D,gn)),i in e||vn(e,i,s)}}(n,a.computed),a.watch&&a.watch!==te&&function(e,n){for(var a in n){var i=n[a];if(t(i))for(var s=0;s<i.length;s++)_n(e,a,i[s]);else _n(e,a,i)}}(n,a.watch)}var gn={lazy:!0};function vn(e,t,n){var a=!ie();o(n)?(Tn.get=a?wn(t):Mn(n),Tn.set=D):(Tn.get=n.get?a&&!1!==n.cache?wn(t):Mn(n.get):D,Tn.set=n.set||D),Object.defineProperty(e,t,Tn)}function wn(e){return function(){var t=this._computedWatchers&&this._computedWatchers[e];if(t)return t.dirty&&t.evaluate(),he.target&&t.depend(),t.value}}function Mn(e){return function(){return e.call(this,this)}}function _n(e,t,n,a){return p(n)&&(a=n,n=n.handler),"string"==typeof n&&(n=e[n]),e.$watch(t,n,a)}function An(e,t){if(e){for(var n=Object.create(null),a=ue?Reflect.ownKeys(e):Object.keys(e),i=0;i<a.length;i++){var s=a[i];if("__ob__"!==s){var r=e[s].from;if(r in t._provided)n[s]=t._provided[r];else if("default"in e[s]){var u=e[s].default;n[s]=o(u)?u.call(t):u}}}return n}}var Cn=0;function kn(e){var t=e.options;if(e.super){var n=kn(e.super);if(n!==e.superOptions){e.superOptions=n;var a=function(e){var t,n=e.options,a=e.sealedOptions;for(var i in n)n[i]!==a[i]&&(t||(t={}),t[i]=n[i]);return t}(e);a&&R(e.extendOptions,a),(t=e.options=$n(n,e.extendOptions)).name&&(t.components[t.name]=e)}}return t}function xn(n,a,i,r,o){var u,d=this,p=o.options;w(r,"_uid")?(u=Object.create(r))._original=r:(u=r,r=r._original);var y=s(p._compiled),l=!y;this.data=n,this.props=a,this.children=i,this.parent=r,this.listeners=n.on||e,this.injections=An(p.inject,r),this.slots=function(){return d.$slots||ft(r,n.scopedSlots,d.$slots=lt(i,r)),d.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return ft(r,n.scopedSlots,this.slots())}}),y&&(this.$options=p,this.$slots=this.slots(),this.$scopedSlots=ft(r,n.scopedSlots,this.$slots)),p._scopeId?this._c=function(e,n,a,i){var s=Xe(u,e,n,a,i,l);return s&&!t(s)&&(s.fnScopeId=p._scopeId,s.fnContext=r),s}:this._c=function(e,t,n,a){return Xe(u,e,t,n,a,l)}}function In(e,t,n,a,i){var s=ce(e);return s.fnContext=n,s.fnOptions=a,t.slot&&((s.data||(s.data={})).slot=t.slot),s}function Pn(e,t){for(var n in t)e[A(n)]=t[n]}function Rn(e){return e.name||e.__name||e._componentTag}yt(xn.prototype);var Sn={init:function(e,t){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var n=e;Sn.prepatch(n,n)}else(e.componentInstance=function(e,t){var n={_isComponent:!0,_parentVnode:e,parent:t},a=e.data.inlineTemplate;return i(a)&&(n.render=a.render,n.staticRenderFns=a.staticRenderFns),new e.componentOptions.Ctor(n)}(e,St)).$mount(t?e.elm:void 0,t)},prepatch:function(t,n){var a=n.componentOptions;!function(t,n,a,i,s){var r=i.data.scopedSlots,o=t.$scopedSlots,u=!!(r&&!r.$stable||o!==e&&!o.$stable||r&&t.$scopedSlots.$key!==r.$key||!r&&t.$scopedSlots.$key),d=!!(s||t.$options._renderChildren||u),p=t.$vnode;t.$options._parentVnode=i,t.$vnode=i,t._vnode&&(t._vnode.parent=i),t.$options._renderChildren=s;var y=i.data.attrs||e;t._attrsProxy&&ht(t._attrsProxy,y,p.data&&p.data.attrs||e,t,"$attrs")&&(d=!0),t.$attrs=y,a=a||e;var l=t.$options._parentListeners;if(t._listenersProxy&&ht(t._listenersProxy,a,l||e,t,"$listeners"),t.$listeners=t.$options._parentListeners=a,Pt(t,a,l),n&&t.$options.props){xe(!1);for(var m=t._props,c=t.$options._propKeys||[],f=0;f<c.length;f++){var T=c[f],b=t.$options.props;m[T]=jn(T,b,n,t)}xe(!0),t.$options.propsData=n}d&&(t.$slots=lt(s,i.context),t.$forceUpdate())}(n.componentInstance=t.componentInstance,a.propsData,a.listeners,n,a.children)},insert:function(e){var t,n=e.context,a=e.componentInstance;a._isMounted||(a._isMounted=!0,Ut(a,"mounted")),e.data.keepAlive&&(n._isMounted?((t=a)._inactive=!1,Bt.push(t)):Lt(a,!0))},destroy:function(e){var t=e.componentInstance;t._isDestroyed||(e.data.keepAlive?Et(t,!0):t.$destroy())}},Dn=Object.keys(Sn);function On(n,r,o,d,p){if(!a(n)){var y=o.$options._base;if(u(n)&&(n=y.extend(n)),"function"==typeof n){var m;if(a(n.cid)&&(n=function(e,t){if(s(e.error)&&i(e.errorComp))return e.errorComp;if(i(e.resolved))return e.resolved;var n=_t;if(n&&i(e.owners)&&-1===e.owners.indexOf(n)&&e.owners.push(n),s(e.loading)&&i(e.loadingComp))return e.loadingComp;if(n&&!i(e.owners)){var r=e.owners=[n],o=!0,d=null,p=null;n.$on("hook:destroyed",(function(){return g(r,n)}));var y=function(e){for(var t=0,n=r.length;t<n;t++)r[t].$forceUpdate();e&&(r.length=0,null!==d&&(clearTimeout(d),d=null),null!==p&&(clearTimeout(p),p=null))},m=V((function(n){e.resolved=At(n,t),o?r.length=0:y(!0)})),c=V((function(t){i(e.errorComp)&&(e.error=!0,y(!0))})),f=e(m,c);return u(f)&&(l(f)?a(e.resolved)&&f.then(m,c):l(f.component)&&(f.component.then(m,c),i(f.error)&&(e.errorComp=At(f.error,t)),i(f.loading)&&(e.loadingComp=At(f.loading,t),0===f.delay?e.loading=!0:d=setTimeout((function(){d=null,a(e.resolved)&&a(e.error)&&(e.loading=!0,y(!1))}),f.delay||200)),i(f.timeout)&&(p=setTimeout((function(){p=null,a(e.resolved)&&c(null)}),f.timeout)))),o=!1,e.loading?e.loadingComp:e.resolved}}(m=n,y),void 0===n))return function(e,t,n,a,i){var s=le();return s.asyncFactory=e,s.asyncMeta={data:t,context:n,children:a,tag:i},s}(m,r,o,d,p);r=r||{},kn(n),i(r.model)&&function(e,n){var a=e.model&&e.model.prop||"value",s=e.model&&e.model.event||"input";(n.attrs||(n.attrs={}))[a]=n.model.value;var r=n.on||(n.on={}),o=r[s],u=n.model.callback;i(o)?(t(o)?-1===o.indexOf(u):o!==u)&&(r[s]=[u].concat(o)):r[s]=u}(n.options,r);var c=function(e,t,n){var s=t.options.props;if(!a(s)){var r={},o=e.attrs,u=e.props;if(i(o)||i(u))for(var d in s){var p=x(d);ze(r,u,d,p,!0)||ze(r,o,d,p,!1)}return r}}(r,n);if(s(n.options.functional))return function(n,a,s,r,o){var u=n.options,d={},p=u.props;if(i(p))for(var y in p)d[y]=jn(y,p,a||e);else i(s.attrs)&&Pn(d,s.attrs),i(s.props)&&Pn(d,s.props);var l=new xn(s,d,o,r,n),m=u.render.call(null,l._c,l);if(m instanceof ye)return In(m,s,l.parent,u);if(t(m)){for(var c=je(m)||[],f=new Array(c.length),T=0;T<c.length;T++)f[T]=In(c[T],s,l.parent,u);return f}}(n,c,r,o,d);var f=r.on;if(r.on=r.nativeOn,s(n.options.abstract)){var T=r.slot;r={},T&&(r.slot=T)}!function(e){for(var t=e.hook||(e.hook={}),n=0;n<Dn.length;n++){var a=Dn[n],i=t[a],s=Sn[a];i===s||i&&i._merged||(t[a]=i?Ln(s,i):s)}}(r);var b=Rn(n.options)||p;return new ye("vue-component-".concat(n.cid).concat(b?"-".concat(b):""),r,void 0,void 0,void 0,o,{Ctor:n,propsData:c,listeners:f,tag:p,children:d},m)}}}function Ln(e,t){var n=function(n,a){e(n,a),t(n,a)};return n._merged=!0,n}var En=D,Un=q.optionMergeStrategies;function Vn(e,t,n){if(void 0===n&&(n=!0),!t)return e;for(var a,i,s,r=ue?Reflect.ownKeys(t):Object.keys(t),o=0;o<r.length;o++)"__ob__"!==(a=r[o])&&(i=e[a],s=t[a],n&&w(e,a)?i!==s&&p(i)&&p(s)&&Vn(i,s):De(e,a,s));return e}function Bn(e,t,n){return n?function(){var a=o(t)?t.call(n,n):t,i=o(e)?e.call(n,n):e;return a?Vn(a,i):i}:t?e?function(){return Vn(o(t)?t.call(this,this):t,o(e)?e.call(this,this):e)}:t:e}function Nn(e,n){var a=n?e?e.concat(n):t(n)?n:[n]:e;return a?function(e){for(var t=[],n=0;n<e.length;n++)-1===t.indexOf(e[n])&&t.push(e[n]);return t}(a):a}function Fn(e,t,n,a){var i=Object.create(e||null);return t?R(i,t):i}Un.data=function(e,t,n){return n?Bn(e,t,n):t&&"function"!=typeof t?e:Bn(e,t)},F.forEach((function(e){Un[e]=Nn})),N.forEach((function(e){Un[e+"s"]=Fn})),Un.watch=function(e,n,a,i){if(e===te&&(e=void 0),n===te&&(n=void 0),!n)return Object.create(e||null);if(!e)return n;var s={};for(var r in R(s,e),n){var o=s[r],u=n[r];o&&!t(o)&&(o=[o]),s[r]=o?o.concat(u):t(u)?u:[u]}return s},Un.props=Un.methods=Un.inject=Un.computed=function(e,t,n,a){if(!e)return t;var i=Object.create(null);return R(i,e),t&&R(i,t),i},Un.provide=function(e,t){return e?function(){var n=Object.create(null);return Vn(n,o(e)?e.call(this):e),t&&Vn(n,o(t)?t.call(this):t,!1),n}:t};var qn=function(e,t){return void 0===t?e:t};function $n(e,n,a){if(o(n)&&(n=n.options),function(e,n){var a=e.props;if(a){var i,s,r={};if(t(a))for(i=a.length;i--;)"string"==typeof(s=a[i])&&(r[A(s)]={type:null});else if(p(a))for(var o in a)s=a[o],r[A(o)]=p(s)?s:{type:s};e.props=r}}(n),function(e,n){var a=e.inject;if(a){var i=e.inject={};if(t(a))for(var s=0;s<a.length;s++)i[a[s]]={from:a[s]};else if(p(a))for(var r in a){var o=a[r];i[r]=p(o)?R({from:r},o):{from:o}}}}(n),function(e){var t=e.directives;if(t)for(var n in t){var a=t[n];o(a)&&(t[n]={bind:a,update:a})}}(n),!n._base&&(n.extends&&(e=$n(e,n.extends,a)),n.mixins))for(var i=0,s=n.mixins.length;i<s;i++)e=$n(e,n.mixins[i],a);var r,u={};for(r in e)d(r);for(r in n)w(e,r)||d(r);function d(t){var i=Un[t]||qn;u[t]=i(e[t],n[t],a,t)}return u}function zn(e,t,n,a){if("string"==typeof n){var i=e[t];if(w(i,n))return i[n];var s=A(n);if(w(i,s))return i[s];var r=C(s);return w(i,r)?i[r]:i[n]||i[s]||i[r]}}function jn(e,t,n,a){var i=t[e],s=!w(n,e),r=n[e],u=Gn(Boolean,i.type);if(u>-1)if(s&&!w(i,"default"))r=!1;else if(""===r||r===x(e)){var d=Gn(String,i.type);(d<0||u<d)&&(r=!0)}if(void 0===r){r=function(e,t,n){if(w(t,"default")){var a=t.default;return e&&e.$options.propsData&&void 0===e.$options.propsData[n]&&void 0!==e._props[n]?e._props[n]:o(a)&&"Function"!==Wn(t.type)?a.call(e):a}}(a,i,e);var p=ke;xe(!0),Re(r),xe(p)}return r}var Hn=/^\s*function (\w+)/;function Wn(e){var t=e&&e.toString().match(Hn);return t?t[1]:""}function Qn(e,t){return Wn(e)===Wn(t)}function Gn(e,n){if(!t(n))return Qn(n,e)?0:-1;for(var a=0,i=n.length;a<i;a++)if(Qn(n[a],e))return a;return-1}function Xn(e){this._init(e)}function Yn(e){return e&&(Rn(e.Ctor.options)||e.tag)}function Jn(e,n){return t(e)?e.indexOf(n)>-1:"string"==typeof e?e.split(",").indexOf(n)>-1:(a=e,!("[object RegExp]"!==d.call(a))&&e.test(n));var a}function Kn(e,t){var n=e.cache,a=e.keys,i=e._vnode,s=e.$vnode;for(var r in n){var o=n[r];if(o){var u=o.name;u&&!t(u)&&Zn(n,r,a,i)}}s.componentOptions.children=void 0}function Zn(e,t,n,a){var i=e[t];!i||a&&i.tag===a.tag||i.componentInstance.$destroy(),e[t]=null,g(n,t)}!function(t){t.prototype._init=function(t){var n=this;n._uid=Cn++,n._isVue=!0,n.__v_skip=!0,n._scope=new Rt(!0),n._scope.parent=void 0,n._scope._vm=!0,t&&t._isComponent?function(e,t){var n=e.$options=Object.create(e.constructor.options),a=t._parentVnode;n.parent=t.parent,n._parentVnode=a;var i=a.componentOptions;n.propsData=i.propsData,n._parentListeners=i.listeners,n._renderChildren=i.children,n._componentTag=i.tag,t.render&&(n.render=t.render,n.staticRenderFns=t.staticRenderFns)}(n,t):n.$options=$n(kn(n.constructor),t||{},n),n._renderProxy=n,n._self=n,function(e){var t=e.$options,n=t.parent;if(n&&!t.abstract){for(;n.$options.abstract&&n.$parent;)n=n.$parent;n.$children.push(e)}e.$parent=n,e.$root=n?n.$root:e,e.$children=[],e.$refs={},e._provided=n?n._provided:Object.create(null),e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}(n),function(e){e._events=Object.create(null),e._hasHookEvent=!1;var t=e.$options._parentListeners;t&&Pt(e,t)}(n),function(t){t._vnode=null,t._staticTrees=null;var n=t.$options,a=t.$vnode=n._parentVnode,i=a&&a.context;t.$slots=lt(n._renderChildren,i),t.$scopedSlots=a?ft(t.$parent,a.data.scopedSlots,t.$slots):e,t._c=function(e,n,a,i){return Xe(t,e,n,a,i,!1)},t.$createElement=function(e,n,a,i){return Xe(t,e,n,a,i,!0)};var s=a&&a.data;Se(t,"$attrs",s&&s.attrs||e,null,!0),Se(t,"$listeners",n._parentListeners||e,null,!0)}(n),Ut(n,"beforeCreate",void 0,!1),function(e){var t=An(e.$options.inject,e);t&&(xe(!1),Object.keys(t).forEach((function(n){Se(e,n,t[n])})),xe(!0))}(n),hn(n),function(e){var t=e.$options.provide;if(t){var n=o(t)?t.call(e):t;if(!u(n))return;for(var a=function(e){var t=e._provided,n=e.$parent&&e.$parent._provided;return n===t?e._provided=Object.create(n):t}(e),i=ue?Reflect.ownKeys(n):Object.keys(n),s=0;s<i.length;s++){var r=i[s];Object.defineProperty(a,r,Object.getOwnPropertyDescriptor(n,r))}}}(n),Ut(n,"created"),n.$options.el&&n.$mount(n.$options.el)}}(Xn),function(e){Object.defineProperty(e.prototype,"$data",{get:function(){return this._data}}),Object.defineProperty(e.prototype,"$props",{get:function(){return this._props}}),e.prototype.$set=De,e.prototype.$delete=Oe,e.prototype.$watch=function(e,t,n){var a=this;if(p(t))return _n(a,e,t,n);(n=n||{}).user=!0;var i=new fn(a,e,t,n);if(n.immediate){var s='callback for immediate watcher "'.concat(i.expression,'"');ve(),Yt(t,a,[i.value],a,s),we()}return function(){i.teardown()}}}(Xn),function(e){var n=/^hook:/;e.prototype.$on=function(e,a){var i=this;if(t(e))for(var s=0,r=e.length;s<r;s++)i.$on(e[s],a);else(i._events[e]||(i._events[e]=[])).push(a),n.test(e)&&(i._hasHookEvent=!0);return i},e.prototype.$once=function(e,t){var n=this;function a(){n.$off(e,a),t.apply(n,arguments)}return a.fn=t,n.$on(e,a),n},e.prototype.$off=function(e,n){var a=this;if(!arguments.length)return a._events=Object.create(null),a;if(t(e)){for(var i=0,s=e.length;i<s;i++)a.$off(e[i],n);return a}var r,o=a._events[e];if(!o)return a;if(!n)return a._events[e]=null,a;for(var u=o.length;u--;)if((r=o[u])===n||r.fn===n){o.splice(u,1);break}return a},e.prototype.$emit=function(e){var t=this,n=t._events[e];if(n){n=n.length>1?P(n):n;for(var a=P(arguments,1),i='event handler for "'.concat(e,'"'),s=0,r=n.length;s<r;s++)Yt(n[s],t,a,t,i)}return t}}(Xn),function(e){e.prototype._update=function(e,t){var n=this,a=n.$el,i=n._vnode,s=Dt(n);n._vnode=e,n.$el=i?n.__patch__(i,e):n.__patch__(n.$el,e,t,!1),s(),a&&(a.__vue__=null),n.$el&&(n.$el.__vue__=n);for(var r=n;r&&r.$vnode&&r.$parent&&r.$vnode===r.$parent._vnode;)r.$parent.$el=r.$el,r=r.$parent},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){Ut(e,"beforeDestroy"),e._isBeingDestroyed=!0;var t=e.$parent;!t||t._isBeingDestroyed||e.$options.abstract||g(t.$children,e),e._scope.stop(),e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),Ut(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(Xn),function(e){yt(e.prototype),e.prototype.$nextTick=function(e){return dn(e,this)},e.prototype._render=function(){var e=this,n=e.$options,a=n.render,i=n._parentVnode;i&&e._isMounted&&(e.$scopedSlots=ft(e.$parent,i.data.scopedSlots,e.$slots,e.$scopedSlots),e._slotsProxy&&vt(e._slotsProxy,e.$scopedSlots)),e.$vnode=i;var s,r=de,o=_t;try{pe(e),_t=e,s=a.call(e._renderProxy,e.$createElement)}catch(t){Xt(t,e,"render"),s=e._vnode}finally{_t=o,pe(r)}return t(s)&&1===s.length&&(s=s[0]),s instanceof ye||(s=le()),s.parent=i,s}}(Xn);var ea=[String,RegExp,Array],ta={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:ea,exclude:ea,max:[String,Number]},methods:{cacheVNode:function(){var e=this,t=e.cache,n=e.keys,a=e.vnodeToCache,i=e.keyToCache;if(a){var s=a.tag,r=a.componentInstance,o=a.componentOptions;t[i]={name:Yn(o),tag:s,componentInstance:r},n.push(i),this.max&&n.length>parseInt(this.max)&&Zn(t,n[0],n,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)Zn(this.cache,e,this.keys)},mounted:function(){var e=this;this.cacheVNode(),this.$watch("include",(function(t){Kn(e,(function(e){return Jn(t,e)}))})),this.$watch("exclude",(function(t){Kn(e,(function(e){return!Jn(t,e)}))}))},updated:function(){this.cacheVNode()},render:function(){var e=this.$slots.default,t=Ct(e),n=t&&t.componentOptions;if(n){var a=Yn(n),i=this.include,s=this.exclude;if(i&&(!a||!Jn(i,a))||s&&a&&Jn(s,a))return t;var r=this.cache,o=this.keys,u=null==t.key?n.Ctor.cid+(n.tag?"::".concat(n.tag):""):t.key;r[u]?(t.componentInstance=r[u].componentInstance,g(o,u),o.push(u)):(this.vnodeToCache=t,this.keyToCache=u),t.data.keepAlive=!0}return t||e&&e[0]}}};!function(e){var t={get:function(){return q}};Object.defineProperty(e,"config",t),e.util={warn:En,extend:R,mergeOptions:$n,defineReactive:Se},e.set=De,e.delete=Oe,e.nextTick=dn,e.observable=function(e){return Re(e),e},e.options=Object.create(null),N.forEach((function(t){e.options[t+"s"]=Object.create(null)})),e.options._base=e,R(e.options.components,ta),function(e){e.use=function(e){var t=this._installedPlugins||(this._installedPlugins=[]);if(t.indexOf(e)>-1)return this;var n=P(arguments,1);return n.unshift(this),o(e.install)?e.install.apply(e,n):o(e)&&e.apply(null,n),t.push(e),this}}(e),function(e){e.mixin=function(e){return this.options=$n(this.options,e),this}}(e),function(e){e.cid=0;var t=1;e.extend=function(e){e=e||{};var n=this,a=n.cid,i=e._Ctor||(e._Ctor={});if(i[a])return i[a];var s=Rn(e)||Rn(n.options),r=function(e){this._init(e)};return(r.prototype=Object.create(n.prototype)).constructor=r,r.cid=t++,r.options=$n(n.options,e),r.super=n,r.options.props&&function(e){var t=e.options.props;for(var n in t)bn(e.prototype,"_props",n)}(r),r.options.computed&&function(e){var t=e.options.computed;for(var n in t)vn(e.prototype,n,t[n])}(r),r.extend=n.extend,r.mixin=n.mixin,r.use=n.use,N.forEach((function(e){r[e]=n[e]})),s&&(r.options.components[s]=r),r.superOptions=n.options,r.extendOptions=e,r.sealedOptions=R({},r.options),i[a]=r,r}}(e),function(e){N.forEach((function(t){e[t]=function(e,n){return n?("component"===t&&p(n)&&(n.name=n.name||e,n=this.options._base.extend(n)),"directive"===t&&o(n)&&(n={bind:n,update:n}),this.options[t+"s"][e]=n,n):this.options[t+"s"][e]}}))}(e)}(Xn),Object.defineProperty(Xn.prototype,"$isServer",{get:ie}),Object.defineProperty(Xn.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Xn,"FunctionalRenderContext",{value:xn}),Xn.version="2.7.16";var na=T("style,class"),aa=T("input,textarea,option,select,progress"),ia=function(e,t,n){return"value"===n&&aa(e)&&"button"!==t||"selected"===n&&"option"===e||"checked"===n&&"input"===e||"muted"===n&&"video"===e},sa=T("contenteditable,draggable,spellcheck"),ra=T("events,caret,typing,plaintext-only"),oa=function(e,t){return la(t)||"false"===t?"false":"contenteditable"===e&&ra(t)?t:"true"},ua=T("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),da="http://www.w3.org/1999/xlink",pa=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},ya=function(e){return pa(e)?e.slice(6,e.length):""},la=function(e){return null==e||!1===e};function ma(e,t){return{staticClass:ca(e.staticClass,t.staticClass),class:i(e.class)?[e.class,t.class]:t.class}}function ca(e,t){return e?t?e+" "+t:e:t||""}function fa(e){return Array.isArray(e)?function(e){for(var t,n="",a=0,s=e.length;a<s;a++)i(t=fa(e[a]))&&""!==t&&(n&&(n+=" "),n+=t);return n}(e):u(e)?function(e){var t="";for(var n in e)e[n]&&(t&&(t+=" "),t+=n);return t}(e):"string"==typeof e?e:""}var Ta={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},ba=T("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),ha=T("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),ga=function(e){return ba(e)||ha(e)};function va(e){return ha(e)?"svg":"math"===e?"math":void 0}var wa=Object.create(null),Ma=T("text,number,password,search,email,tel,url");function _a(e){return"string"==typeof e?document.querySelector(e)||document.createElement("div"):e}var Aa=Object.freeze({__proto__:null,createElement:function(e,t){var n=document.createElement(e);return"select"!==e||t.data&&t.data.attrs&&void 0!==t.data.attrs.multiple&&n.setAttribute("multiple","multiple"),n},createElementNS:function(e,t){return document.createElementNS(Ta[e],t)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,t,n){e.insertBefore(t,n)},removeChild:function(e,t){e.removeChild(t)},appendChild:function(e,t){e.appendChild(t)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,t){e.textContent=t},setStyleScope:function(e,t){e.setAttribute(t,"")}}),Ca={create:function(e,t){ka(t)},update:function(e,t){e.data.ref!==t.data.ref&&(ka(e,!0),ka(t))},destroy:function(e){ka(e,!0)}};function ka(e,n){var a=e.data.ref;if(i(a)){var s=e.context,r=e.componentInstance||e.elm,u=n?null:r,d=n?void 0:r;if(o(a))Yt(a,s,[u],s,"template ref function");else{var p=e.data.refInFor,y="string"==typeof a||"number"==typeof a,l=Ve(a),m=s.$refs;if(y||l)if(p){var c=y?m[a]:a.value;n?t(c)&&g(c,r):t(c)?c.includes(r)||c.push(r):y?(m[a]=[r],xa(s,a,m[a])):a.value=[r]}else if(y){if(n&&m[a]!==r)return;m[a]=d,xa(s,a,u)}else if(l){if(n&&a.value!==r)return;a.value=u}}}}function xa(e,t,n){var a=e._setupState;a&&w(a,t)&&(Ve(a[t])?a[t].value=n:a[t]=n)}var Ia=new ye("",{},[]),Pa=["create","activate","update","remove","destroy"];function Ra(e,t){return e.key===t.key&&e.asyncFactory===t.asyncFactory&&(e.tag===t.tag&&e.isComment===t.isComment&&i(e.data)===i(t.data)&&function(e,t){if("input"!==e.tag)return!0;var n,a=i(n=e.data)&&i(n=n.attrs)&&n.type,s=i(n=t.data)&&i(n=n.attrs)&&n.type;return a===s||Ma(a)&&Ma(s)}(e,t)||s(e.isAsyncPlaceholder)&&a(t.asyncFactory.error))}function Sa(e,t,n){var a,s,r={};for(a=t;a<=n;++a)i(s=e[a].key)&&(r[s]=a);return r}var Da={create:Oa,update:Oa,destroy:function(e){Oa(e,Ia)}};function Oa(e,t){(e.data.directives||t.data.directives)&&function(e,t){var n,a,i,s=e===Ia,r=t===Ia,o=Ea(e.data.directives,e.context),u=Ea(t.data.directives,t.context),d=[],p=[];for(n in u)a=o[n],i=u[n],a?(i.oldValue=a.value,i.oldArg=a.arg,Va(i,"update",t,e),i.def&&i.def.componentUpdated&&p.push(i)):(Va(i,"bind",t,e),i.def&&i.def.inserted&&d.push(i));if(d.length){var y=function(){for(var n=0;n<d.length;n++)Va(d[n],"inserted",t,e)};s?$e(t,"insert",y):y()}if(p.length&&$e(t,"postpatch",(function(){for(var n=0;n<p.length;n++)Va(p[n],"componentUpdated",t,e)})),!s)for(n in o)u[n]||Va(o[n],"unbind",e,e,r)}(e,t)}var La=Object.create(null);function Ea(e,t){var n,a,i=Object.create(null);if(!e)return i;for(n=0;n<e.length;n++){if((a=e[n]).modifiers||(a.modifiers=La),i[Ua(a)]=a,t._setupState&&t._setupState.__sfc){var s=a.def||zn(t,"_setupState","v-"+a.name);a.def="function"==typeof s?{bind:s,update:s}:s}a.def=a.def||zn(t.$options,"directives",a.name)}return i}function Ua(e){return e.rawName||"".concat(e.name,".").concat(Object.keys(e.modifiers||{}).join("."))}function Va(e,t,n,a,i){var s=e.def&&e.def[t];if(s)try{s(n.elm,e,n,a,i)}catch(a){Xt(a,n.context,"directive ".concat(e.name," ").concat(t," hook"))}}var Ba=[Ca,Da];function Na(e,t){var n=t.componentOptions;if(!(i(n)&&!1===n.Ctor.options.inheritAttrs||a(e.data.attrs)&&a(t.data.attrs))){var r,o,u=t.elm,d=e.data.attrs||{},p=t.data.attrs||{};for(r in(i(p.__ob__)||s(p._v_attr_proxy))&&(p=t.data.attrs=R({},p)),p)o=p[r],d[r]!==o&&Fa(u,r,o,t.data.pre);for(r in(X||J)&&p.value!==d.value&&Fa(u,"value",p.value),d)a(p[r])&&(pa(r)?u.removeAttributeNS(da,ya(r)):sa(r)||u.removeAttribute(r))}}function Fa(e,t,n,a){a||e.tagName.indexOf("-")>-1?qa(e,t,n):ua(t)?la(n)?e.removeAttribute(t):(n="allowfullscreen"===t&&"EMBED"===e.tagName?"true":t,e.setAttribute(t,n)):sa(t)?e.setAttribute(t,oa(t,n)):pa(t)?la(n)?e.removeAttributeNS(da,ya(t)):e.setAttributeNS(da,t,n):qa(e,t,n)}function qa(e,t,n){if(la(n))e.removeAttribute(t);else{if(X&&!Y&&"TEXTAREA"===e.tagName&&"placeholder"===t&&""!==n&&!e.__ieph){var a=function(t){t.stopImmediatePropagation(),e.removeEventListener("input",a)};e.addEventListener("input",a),e.__ieph=!0}e.setAttribute(t,n)}}var $a={create:Na,update:Na};function za(e,t){var n=t.elm,s=t.data,r=e.data;if(!(a(s.staticClass)&&a(s.class)&&(a(r)||a(r.staticClass)&&a(r.class)))){var o=function(e){for(var t=e.data,n=e,a=e;i(a.componentInstance);)(a=a.componentInstance._vnode)&&a.data&&(t=ma(a.data,t));for(;i(n=n.parent);)n&&n.data&&(t=ma(t,n.data));return s=t.staticClass,r=t.class,i(s)||i(r)?ca(s,fa(r)):"";var s,r}(t),u=n._transitionClasses;i(u)&&(o=ca(o,fa(u))),o!==n._prevClass&&(n.setAttribute("class",o),n._prevClass=o)}}var ja,Ha,Wa,Qa,Ga,Xa,Ya={create:za,update:za},Ja=/[\w).+\-_$\]]/;function Ka(e){var t,n,a,i,s,r=!1,o=!1,u=!1,d=!1,p=0,y=0,l=0,m=0;for(a=0;a<e.length;a++)if(n=t,t=e.charCodeAt(a),r)39===t&&92!==n&&(r=!1);else if(o)34===t&&92!==n&&(o=!1);else if(u)96===t&&92!==n&&(u=!1);else if(d)47===t&&92!==n&&(d=!1);else if(124!==t||124===e.charCodeAt(a+1)||124===e.charCodeAt(a-1)||p||y||l){switch(t){case 34:o=!0;break;case 39:r=!0;break;case 96:u=!0;break;case 40:l++;break;case 41:l--;break;case 91:y++;break;case 93:y--;break;case 123:p++;break;case 125:p--}if(47===t){for(var c=a-1,f=void 0;c>=0&&" "===(f=e.charAt(c));c--);f&&Ja.test(f)||(d=!0)}}else void 0===i?(m=a+1,i=e.slice(0,a).trim()):T();function T(){(s||(s=[])).push(e.slice(m,a).trim()),m=a+1}if(void 0===i?i=e.slice(0,a).trim():0!==m&&T(),s)for(a=0;a<s.length;a++)i=Za(i,s[a]);return i}function Za(e,t){var n=t.indexOf("(");if(n<0)return'_f("'.concat(t,'")(').concat(e,")");var a=t.slice(0,n),i=t.slice(n+1);return'_f("'.concat(a,'")(').concat(e).concat(")"!==i?","+i:i)}function ei(e,t){console.error("[Vue compiler]: ".concat(e))}function ti(e,t){return e?e.map((function(e){return e[t]})).filter((function(e){return e})):[]}function ni(e,t,n,a,i){(e.props||(e.props=[])).push(yi({name:t,value:n,dynamic:i},a)),e.plain=!1}function ai(e,t,n,a,i){(i?e.dynamicAttrs||(e.dynamicAttrs=[]):e.attrs||(e.attrs=[])).push(yi({name:t,value:n,dynamic:i},a)),e.plain=!1}function ii(e,t,n,a){e.attrsMap[t]=n,e.attrsList.push(yi({name:t,value:n},a))}function si(e,t,n,a,i,s,r,o){(e.directives||(e.directives=[])).push(yi({name:t,rawName:n,value:a,arg:i,isDynamicArg:s,modifiers:r},o)),e.plain=!1}function ri(e,t,n){return n?"_p(".concat(t,',"').concat(e,'")'):e+t}function oi(t,n,a,i,s,r,o,u){var d;(i=i||e).right?u?n="(".concat(n,")==='click'?'contextmenu':(").concat(n,")"):"click"===n&&(n="contextmenu",delete i.right):i.middle&&(u?n="(".concat(n,")==='click'?'mouseup':(").concat(n,")"):"click"===n&&(n="mouseup")),i.capture&&(delete i.capture,n=ri("!",n,u)),i.once&&(delete i.once,n=ri("~",n,u)),i.passive&&(delete i.passive,n=ri("&",n,u)),i.native?(delete i.native,d=t.nativeEvents||(t.nativeEvents={})):d=t.events||(t.events={});var p=yi({value:a.trim(),dynamic:u},o);i!==e&&(p.modifiers=i);var y=d[n];Array.isArray(y)?s?y.unshift(p):y.push(p):d[n]=y?s?[p,y]:[y,p]:p,t.plain=!1}function ui(e,t,n){var a=di(e,":"+t)||di(e,"v-bind:"+t);if(null!=a)return Ka(a);if(!1!==n){var i=di(e,t);if(null!=i)return JSON.stringify(i)}}function di(e,t,n){var a;if(null!=(a=e.attrsMap[t]))for(var i=e.attrsList,s=0,r=i.length;s<r;s++)if(i[s].name===t){i.splice(s,1);break}return n&&delete e.attrsMap[t],a}function pi(e,t){for(var n=e.attrsList,a=0,i=n.length;a<i;a++){var s=n[a];if(t.test(s.name))return n.splice(a,1),s}}function yi(e,t){return t&&(null!=t.start&&(e.start=t.start),null!=t.end&&(e.end=t.end)),e}function li(e,t,n){var a=n||{},i=a.number,s="$$v",r=s;a.trim&&(r="(typeof ".concat(s," === 'string'")+"? ".concat(s,".trim()")+": ".concat(s,")")),i&&(r="_n(".concat(r,")"));var o=mi(t,r);e.model={value:"(".concat(t,")"),expression:JSON.stringify(t),callback:"function (".concat(s,") {").concat(o,"}")}}function mi(e,t){var n=function(e){if(e=e.trim(),ja=e.length,e.indexOf("[")<0||e.lastIndexOf("]")<ja-1)return(Qa=e.lastIndexOf("."))>-1?{exp:e.slice(0,Qa),key:'"'+e.slice(Qa+1)+'"'}:{exp:e,key:null};for(Ha=e,Qa=Ga=Xa=0;!fi();)Ti(Wa=ci())?hi(Wa):91===Wa&&bi(Wa);return{exp:e.slice(0,Ga),key:e.slice(Ga+1,Xa)}}(e);return null===n.key?"".concat(e,"=").concat(t):"$set(".concat(n.exp,", ").concat(n.key,", ").concat(t,")")}function ci(){return Ha.charCodeAt(++Qa)}function fi(){return Qa>=ja}function Ti(e){return 34===e||39===e}function bi(e){var t=1;for(Ga=Qa;!fi();)if(Ti(e=ci()))hi(e);else if(91===e&&t++,93===e&&t--,0===t){Xa=Qa;break}}function hi(e){for(var t=e;!fi()&&(e=ci())!==t;);}var gi,vi="__r",wi="__c";function Mi(e,t,n){var a=gi;return function i(){null!==t.apply(null,arguments)&&Ci(e,i,n,a)}}var _i=en&&!(ee&&Number(ee[1])<=53);function Ai(e,t,n,a){if(_i){var i=zt,s=t;t=s._wrapper=function(e){if(e.target===e.currentTarget||e.timeStamp>=i||e.timeStamp<=0||e.target.ownerDocument!==document)return s.apply(this,arguments)}}gi.addEventListener(e,t,ne?{capture:n,passive:a}:n)}function Ci(e,t,n,a){(a||gi).removeEventListener(e,t._wrapper||t,n)}function ki(e,t){if(!a(e.data.on)||!a(t.data.on)){var n=t.data.on||{},s=e.data.on||{};gi=t.elm||e.elm,function(e){if(i(e[vi])){var t=X?"change":"input";e[t]=[].concat(e[vi],e[t]||[]),delete e[vi]}i(e[wi])&&(e.change=[].concat(e[wi],e.change||[]),delete e[wi])}(n),qe(n,s,Ai,Ci,Mi,t.context),gi=void 0}}var xi,Ii={create:ki,update:ki,destroy:function(e){return ki(e,Ia)}};function Pi(e,t){if(!a(e.data.domProps)||!a(t.data.domProps)){var n,r,o=t.elm,u=e.data.domProps||{},d=t.data.domProps||{};for(n in(i(d.__ob__)||s(d._v_attr_proxy))&&(d=t.data.domProps=R({},d)),u)n in d||(o[n]="");for(n in d){if(r=d[n],"textContent"===n||"innerHTML"===n){if(t.children&&(t.children.length=0),r===u[n])continue;1===o.childNodes.length&&o.removeChild(o.childNodes[0])}if("value"===n&&"PROGRESS"!==o.tagName){o._value=r;var p=a(r)?"":String(r);Ri(o,p)&&(o.value=p)}else if("innerHTML"===n&&ha(o.tagName)&&a(o.innerHTML)){(xi=xi||document.createElement("div")).innerHTML="<svg>".concat(r,"</svg>");for(var y=xi.firstChild;o.firstChild;)o.removeChild(o.firstChild);for(;y.firstChild;)o.appendChild(y.firstChild)}else if(r!==u[n])try{o[n]=r}catch(e){}}}}function Ri(e,t){return!e.composing&&("OPTION"===e.tagName||function(e,t){var n=!0;try{n=document.activeElement!==e}catch(e){}return n&&e.value!==t}(e,t)||function(e,t){var n=e.value,a=e._vModifiers;if(i(a)){if(a.number)return f(n)!==f(t);if(a.trim)return n.trim()!==t.trim()}return n!==t}(e,t))}var Si={create:Pi,update:Pi},Di=M((function(e){var t={},n=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach((function(e){if(e){var a=e.split(n);a.length>1&&(t[a[0].trim()]=a[1].trim())}})),t}));function Oi(e){var t=Li(e.style);return e.staticStyle?R(e.staticStyle,t):t}function Li(e){return Array.isArray(e)?S(e):"string"==typeof e?Di(e):e}var Ei,Ui=/^--/,Vi=/\s*!important$/,Bi=function(e,t,n){if(Ui.test(t))e.style.setProperty(t,n);else if(Vi.test(n))e.style.setProperty(x(t),n.replace(Vi,""),"important");else{var a=Fi(t);if(Array.isArray(n))for(var i=0,s=n.length;i<s;i++)e.style[a]=n[i];else e.style[a]=n}},Ni=["Webkit","Moz","ms"],Fi=M((function(e){if(Ei=Ei||document.createElement("div").style,"filter"!==(e=A(e))&&e in Ei)return e;for(var t=e.charAt(0).toUpperCase()+e.slice(1),n=0;n<Ni.length;n++){var a=Ni[n]+t;if(a in Ei)return a}}));function qi(e,t){var n=t.data,s=e.data;if(!(a(n.staticStyle)&&a(n.style)&&a(s.staticStyle)&&a(s.style))){var r,o,u=t.elm,d=s.staticStyle,p=s.normalizedStyle||s.style||{},y=d||p,l=Li(t.data.style)||{};t.data.normalizedStyle=i(l.__ob__)?R({},l):l;var m=function(e,t){for(var n,a={},i=e;i.componentInstance;)(i=i.componentInstance._vnode)&&i.data&&(n=Oi(i.data))&&R(a,n);(n=Oi(e.data))&&R(a,n);for(var s=e;s=s.parent;)s.data&&(n=Oi(s.data))&&R(a,n);return a}(t);for(o in y)a(m[o])&&Bi(u,o,"");for(o in m)r=m[o],Bi(u,o,null==r?"":r)}}var $i={create:qi,update:qi},zi=/\s+/;function ji(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(zi).forEach((function(t){return e.classList.add(t)})):e.classList.add(t);else{var n=" ".concat(e.getAttribute("class")||""," ");n.indexOf(" "+t+" ")<0&&e.setAttribute("class",(n+t).trim())}}function Hi(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(zi).forEach((function(t){return e.classList.remove(t)})):e.classList.remove(t),e.classList.length||e.removeAttribute("class");else{for(var n=" ".concat(e.getAttribute("class")||""," "),a=" "+t+" ";n.indexOf(a)>=0;)n=n.replace(a," ");(n=n.trim())?e.setAttribute("class",n):e.removeAttribute("class")}}function Wi(e){if(e){if("object"==typeof e){var t={};return!1!==e.css&&R(t,Qi(e.name||"v")),R(t,e),t}return"string"==typeof e?Qi(e):void 0}}var Qi=M((function(e){return{enterClass:"".concat(e,"-enter"),enterToClass:"".concat(e,"-enter-to"),enterActiveClass:"".concat(e,"-enter-active"),leaveClass:"".concat(e,"-leave"),leaveToClass:"".concat(e,"-leave-to"),leaveActiveClass:"".concat(e,"-leave-active")}})),Gi=Q&&!Y,Xi="transition",Yi="animation",Ji="transition",Ki="transitionend",Zi="animation",es="animationend";Gi&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(Ji="WebkitTransition",Ki="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Zi="WebkitAnimation",es="webkitAnimationEnd"));var ts=Q?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function ns(e){ts((function(){ts(e)}))}function as(e,t){var n=e._transitionClasses||(e._transitionClasses=[]);n.indexOf(t)<0&&(n.push(t),ji(e,t))}function is(e,t){e._transitionClasses&&g(e._transitionClasses,t),Hi(e,t)}function ss(e,t,n){var a=os(e,t),i=a.type,s=a.timeout,r=a.propCount;if(!i)return n();var o=i===Xi?Ki:es,u=0,d=function(){e.removeEventListener(o,p),n()},p=function(t){t.target===e&&++u>=r&&d()};setTimeout((function(){u<r&&d()}),s+1),e.addEventListener(o,p)}var rs=/\b(transform|all)(,|$)/;function os(e,t){var n,a=window.getComputedStyle(e),i=(a[Ji+"Delay"]||"").split(", "),s=(a[Ji+"Duration"]||"").split(", "),r=us(i,s),o=(a[Zi+"Delay"]||"").split(", "),u=(a[Zi+"Duration"]||"").split(", "),d=us(o,u),p=0,y=0;return t===Xi?r>0&&(n=Xi,p=r,y=s.length):t===Yi?d>0&&(n=Yi,p=d,y=u.length):y=(n=(p=Math.max(r,d))>0?r>d?Xi:Yi:null)?n===Xi?s.length:u.length:0,{type:n,timeout:p,propCount:y,hasTransform:n===Xi&&rs.test(a[Ji+"Property"])}}function us(e,t){for(;e.length<t.length;)e=e.concat(e);return Math.max.apply(null,t.map((function(t,n){return ds(t)+ds(e[n])})))}function ds(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function ps(e,t){var n=e.elm;i(n._leaveCb)&&(n._leaveCb.cancelled=!0,n._leaveCb());var s=Wi(e.data.transition);if(!a(s)&&!i(n._enterCb)&&1===n.nodeType){for(var r=s.css,d=s.type,p=s.enterClass,y=s.enterToClass,l=s.enterActiveClass,m=s.appearClass,c=s.appearToClass,T=s.appearActiveClass,b=s.beforeEnter,h=s.enter,g=s.afterEnter,v=s.enterCancelled,w=s.beforeAppear,M=s.appear,_=s.afterAppear,A=s.appearCancelled,C=s.duration,k=St,x=St.$vnode;x&&x.parent;)k=x.context,x=x.parent;var I=!k._isMounted||!e.isRootInsert;if(!I||M||""===M){var P=I&&m?m:p,R=I&&T?T:l,S=I&&c?c:y,D=I&&w||b,O=I&&o(M)?M:h,L=I&&_||g,E=I&&A||v,U=f(u(C)?C.enter:C),B=!1!==r&&!Y,N=ms(O),F=n._enterCb=V((function(){B&&(is(n,S),is(n,R)),F.cancelled?(B&&is(n,P),E&&E(n)):L&&L(n),n._enterCb=null}));e.data.show||$e(e,"insert",(function(){var t=n.parentNode,a=t&&t._pending&&t._pending[e.key];a&&a.tag===e.tag&&a.elm._leaveCb&&a.elm._leaveCb(),O&&O(n,F)})),D&&D(n),B&&(as(n,P),as(n,R),ns((function(){is(n,P),F.cancelled||(as(n,S),N||(ls(U)?setTimeout(F,U):ss(n,d,F)))}))),e.data.show&&(t&&t(),O&&O(n,F)),B||N||F()}}}function ys(e,t){var n=e.elm;i(n._enterCb)&&(n._enterCb.cancelled=!0,n._enterCb());var s=Wi(e.data.transition);if(a(s)||1!==n.nodeType)return t();if(!i(n._leaveCb)){var r=s.css,o=s.type,d=s.leaveClass,p=s.leaveToClass,y=s.leaveActiveClass,l=s.beforeLeave,m=s.leave,c=s.afterLeave,T=s.leaveCancelled,b=s.delayLeave,h=s.duration,g=!1!==r&&!Y,v=ms(m),w=f(u(h)?h.leave:h),M=n._leaveCb=V((function(){n.parentNode&&n.parentNode._pending&&(n.parentNode._pending[e.key]=null),g&&(is(n,p),is(n,y)),M.cancelled?(g&&is(n,d),T&&T(n)):(t(),c&&c(n)),n._leaveCb=null}));b?b(_):_()}function _(){M.cancelled||(!e.data.show&&n.parentNode&&((n.parentNode._pending||(n.parentNode._pending={}))[e.key]=e),l&&l(n),g&&(as(n,d),as(n,y),ns((function(){is(n,d),M.cancelled||(as(n,p),v||(ls(w)?setTimeout(M,w):ss(n,o,M)))}))),m&&m(n,M),g||v||M())}}function ls(e){return"number"==typeof e&&!isNaN(e)}function ms(e){if(a(e))return!1;var t=e.fns;return i(t)?ms(Array.isArray(t)?t[0]:t):(e._length||e.length)>1}function cs(e,t){!0!==t.data.show&&ps(t)}var fs=function(e){var n,o,u={},d=e.modules,p=e.nodeOps;for(n=0;n<Pa.length;++n)for(u[Pa[n]]=[],o=0;o<d.length;++o)i(d[o][Pa[n]])&&u[Pa[n]].push(d[o][Pa[n]]);function y(e){var t=p.parentNode(e);i(t)&&p.removeChild(t,e)}function l(e,t,n,a,r,o,d){if(i(e.elm)&&i(o)&&(e=o[d]=ce(e)),e.isRootInsert=!r,!function(e,t,n,a){var r=e.data;if(i(r)){var o=i(e.componentInstance)&&r.keepAlive;if(i(r=r.hook)&&i(r=r.init)&&r(e,!1),i(e.componentInstance))return m(e,t),c(n,e.elm,a),s(o)&&function(e,t,n,a){for(var s,r=e;r.componentInstance;)if(i(s=(r=r.componentInstance._vnode).data)&&i(s=s.transition)){for(s=0;s<u.activate.length;++s)u.activate[s](Ia,r);t.push(r);break}c(n,e.elm,a)}(e,t,n,a),!0}}(e,t,n,a)){var y=e.data,l=e.children,T=e.tag;i(T)?(e.elm=e.ns?p.createElementNS(e.ns,T):p.createElement(T,e),g(e),f(e,l,t),i(y)&&h(e,t),c(n,e.elm,a)):s(e.isComment)?(e.elm=p.createComment(e.text),c(n,e.elm,a)):(e.elm=p.createTextNode(e.text),c(n,e.elm,a))}}function m(e,t){i(e.data.pendingInsert)&&(t.push.apply(t,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,b(e)?(h(e,t),g(e)):(ka(e),t.push(e))}function c(e,t,n){i(e)&&(i(n)?p.parentNode(n)===e&&p.insertBefore(e,t,n):p.appendChild(e,t))}function f(e,n,a){if(t(n))for(var i=0;i<n.length;++i)l(n[i],a,e.elm,null,!0,n,i);else r(e.text)&&p.appendChild(e.elm,p.createTextNode(String(e.text)))}function b(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return i(e.tag)}function h(e,t){for(var a=0;a<u.create.length;++a)u.create[a](Ia,e);i(n=e.data.hook)&&(i(n.create)&&n.create(Ia,e),i(n.insert)&&t.push(e))}function g(e){var t;if(i(t=e.fnScopeId))p.setStyleScope(e.elm,t);else for(var n=e;n;)i(t=n.context)&&i(t=t.$options._scopeId)&&p.setStyleScope(e.elm,t),n=n.parent;i(t=St)&&t!==e.context&&t!==e.fnContext&&i(t=t.$options._scopeId)&&p.setStyleScope(e.elm,t)}function v(e,t,n,a,i,s){for(;a<=i;++a)l(n[a],s,e,t,!1,n,a)}function w(e){var t,n,a=e.data;if(i(a))for(i(t=a.hook)&&i(t=t.destroy)&&t(e),t=0;t<u.destroy.length;++t)u.destroy[t](e);if(i(t=e.children))for(n=0;n<e.children.length;++n)w(e.children[n])}function M(e,t,n){for(;t<=n;++t){var a=e[t];i(a)&&(i(a.tag)?(_(a),w(a)):y(a.elm))}}function _(e,t){if(i(t)||i(e.data)){var n,a=u.remove.length+1;for(i(t)?t.listeners+=a:t=function(e,t){function n(){0==--n.listeners&&y(e)}return n.listeners=t,n}(e.elm,a),i(n=e.componentInstance)&&i(n=n._vnode)&&i(n.data)&&_(n,t),n=0;n<u.remove.length;++n)u.remove[n](e,t);i(n=e.data.hook)&&i(n=n.remove)?n(e,t):t()}else y(e.elm)}function A(e,t,n,a){for(var s=n;s<a;s++){var r=t[s];if(i(r)&&Ra(e,r))return s}}function C(e,t,n,r,o,d){if(e!==t){i(t.elm)&&i(r)&&(t=r[o]=ce(t));var y=t.elm=e.elm;if(s(e.isAsyncPlaceholder))i(t.asyncFactory.resolved)?I(e.elm,t,n):t.isAsyncPlaceholder=!0;else if(s(t.isStatic)&&s(e.isStatic)&&t.key===e.key&&(s(t.isCloned)||s(t.isOnce)))t.componentInstance=e.componentInstance;else{var m,c=t.data;i(c)&&i(m=c.hook)&&i(m=m.prepatch)&&m(e,t);var f=e.children,T=t.children;if(i(c)&&b(t)){for(m=0;m<u.update.length;++m)u.update[m](e,t);i(m=c.hook)&&i(m=m.update)&&m(e,t)}a(t.text)?i(f)&&i(T)?f!==T&&function(e,t,n,s,r){for(var o,u,d,y=0,m=0,c=t.length-1,f=t[0],T=t[c],b=n.length-1,h=n[0],g=n[b],w=!r;y<=c&&m<=b;)a(f)?f=t[++y]:a(T)?T=t[--c]:Ra(f,h)?(C(f,h,s,n,m),f=t[++y],h=n[++m]):Ra(T,g)?(C(T,g,s,n,b),T=t[--c],g=n[--b]):Ra(f,g)?(C(f,g,s,n,b),w&&p.insertBefore(e,f.elm,p.nextSibling(T.elm)),f=t[++y],g=n[--b]):Ra(T,h)?(C(T,h,s,n,m),w&&p.insertBefore(e,T.elm,f.elm),T=t[--c],h=n[++m]):(a(o)&&(o=Sa(t,y,c)),a(u=i(h.key)?o[h.key]:A(h,t,y,c))?l(h,s,e,f.elm,!1,n,m):Ra(d=t[u],h)?(C(d,h,s,n,m),t[u]=void 0,w&&p.insertBefore(e,d.elm,f.elm)):l(h,s,e,f.elm,!1,n,m),h=n[++m]);y>c?v(e,a(n[b+1])?null:n[b+1].elm,n,m,b,s):m>b&&M(t,y,c)}(y,f,T,n,d):i(T)?(i(e.text)&&p.setTextContent(y,""),v(y,null,T,0,T.length-1,n)):i(f)?M(f,0,f.length-1):i(e.text)&&p.setTextContent(y,""):e.text!==t.text&&p.setTextContent(y,t.text),i(c)&&i(m=c.hook)&&i(m=m.postpatch)&&m(e,t)}}}function k(e,t,n){if(s(n)&&i(e.parent))e.parent.data.pendingInsert=t;else for(var a=0;a<t.length;++a)t[a].data.hook.insert(t[a])}var x=T("attrs,class,staticClass,staticStyle,key");function I(e,t,n,a){var r,o=t.tag,u=t.data,d=t.children;if(a=a||u&&u.pre,t.elm=e,s(t.isComment)&&i(t.asyncFactory))return t.isAsyncPlaceholder=!0,!0;if(i(u)&&(i(r=u.hook)&&i(r=r.init)&&r(t,!0),i(r=t.componentInstance)))return m(t,n),!0;if(i(o)){if(i(d))if(e.hasChildNodes())if(i(r=u)&&i(r=r.domProps)&&i(r=r.innerHTML)){if(r!==e.innerHTML)return!1}else{for(var p=!0,y=e.firstChild,l=0;l<d.length;l++){if(!y||!I(y,d[l],n,a)){p=!1;break}y=y.nextSibling}if(!p||y)return!1}else f(t,d,n);if(i(u)){var c=!1;for(var T in u)if(!x(T)){c=!0,h(t,n);break}!c&&u.class&&ln(u.class)}}else e.data!==t.text&&(e.data=t.text);return!0}return function(e,t,n,r){if(!a(t)){var o,d=!1,y=[];if(a(e))d=!0,l(t,y);else{var m=i(e.nodeType);if(!m&&Ra(e,t))C(e,t,y,null,null,r);else{if(m){if(1===e.nodeType&&e.hasAttribute(B)&&(e.removeAttribute(B),n=!0),s(n)&&I(e,t,y))return k(t,y,!0),e;o=e,e=new ye(p.tagName(o).toLowerCase(),{},[],void 0,o)}var c=e.elm,f=p.parentNode(c);if(l(t,y,c._leaveCb?null:f,p.nextSibling(c)),i(t.parent))for(var T=t.parent,h=b(t);T;){for(var g=0;g<u.destroy.length;++g)u.destroy[g](T);if(T.elm=t.elm,h){for(var v=0;v<u.create.length;++v)u.create[v](Ia,T);var _=T.data.hook.insert;if(_.merged)for(var A=_.fns.slice(1),x=0;x<A.length;x++)A[x]()}else ka(T);T=T.parent}i(f)?M([e],0,0):i(e.tag)&&w(e)}}return k(t,y,d),t.elm}i(e)&&w(e)}}({nodeOps:Aa,modules:[$a,Ya,Ii,Si,$i,Q?{create:cs,activate:cs,remove:function(e,t){!0!==e.data.show?ys(e,t):t()}}:{}].concat(Ba)});Y&&document.addEventListener("selectionchange",(function(){var e=document.activeElement;e&&e.vmodel&&_s(e,"input")}));var Ts={inserted:function(e,t,n,a){"select"===n.tag?(a.elm&&!a.elm._vOptions?$e(n,"postpatch",(function(){Ts.componentUpdated(e,t,n)})):bs(e,t,n.context),e._vOptions=[].map.call(e.options,vs)):("textarea"===n.tag||Ma(e.type))&&(e._vModifiers=t.modifiers,t.modifiers.lazy||(e.addEventListener("compositionstart",ws),e.addEventListener("compositionend",Ms),e.addEventListener("change",Ms),Y&&(e.vmodel=!0)))},componentUpdated:function(e,t,n){if("select"===n.tag){bs(e,t,n.context);var a=e._vOptions,i=e._vOptions=[].map.call(e.options,vs);i.some((function(e,t){return!E(e,a[t])}))&&(e.multiple?t.value.some((function(e){return gs(e,i)})):t.value!==t.oldValue&&gs(t.value,i))&&_s(e,"change")}}};function bs(e,t,n){hs(e,t),(X||J)&&setTimeout((function(){hs(e,t)}),0)}function hs(e,t,n){var a=t.value,i=e.multiple;if(!i||Array.isArray(a)){for(var s,r,o=0,u=e.options.length;o<u;o++)if(r=e.options[o],i)s=U(a,vs(r))>-1,r.selected!==s&&(r.selected=s);else if(E(vs(r),a))return void(e.selectedIndex!==o&&(e.selectedIndex=o));i||(e.selectedIndex=-1)}}function gs(e,t){return t.every((function(t){return!E(t,e)}))}function vs(e){return"_value"in e?e._value:e.value}function ws(e){e.target.composing=!0}function Ms(e){e.target.composing&&(e.target.composing=!1,_s(e.target,"input"))}function _s(e,t){var n=document.createEvent("HTMLEvents");n.initEvent(t,!0,!0),e.dispatchEvent(n)}function As(e){return!e.componentInstance||e.data&&e.data.transition?e:As(e.componentInstance._vnode)}var Cs={model:Ts,show:{bind:function(e,t,n){var a=t.value,i=(n=As(n)).data&&n.data.transition,s=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;a&&i?(n.data.show=!0,ps(n,(function(){e.style.display=s}))):e.style.display=a?s:"none"},update:function(e,t,n){var a=t.value;!a!=!t.oldValue&&((n=As(n)).data&&n.data.transition?(n.data.show=!0,a?ps(n,(function(){e.style.display=e.__vOriginalDisplay})):ys(n,(function(){e.style.display="none"}))):e.style.display=a?e.__vOriginalDisplay:"none")},unbind:function(e,t,n,a,i){i||(e.style.display=e.__vOriginalDisplay)}}},ks={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function xs(e){var t=e&&e.componentOptions;return t&&t.Ctor.options.abstract?xs(Ct(t.children)):e}function Is(e){var t={},n=e.$options;for(var a in n.propsData)t[a]=e[a];var i=n._parentListeners;for(var a in i)t[A(a)]=i[a];return t}function Ps(e,t){if(/\d-keep-alive$/.test(t.tag))return e("keep-alive",{props:t.componentOptions.propsData})}var Rs=function(e){return e.tag||ct(e)},Ss=function(e){return"show"===e.name},Ds={name:"transition",props:ks,abstract:!0,render:function(e){var t=this,n=this.$slots.default;if(n&&(n=n.filter(Rs)).length){var a=this.mode,i=n[0];if(function(e){for(;e=e.parent;)if(e.data.transition)return!0}(this.$vnode))return i;var s=xs(i);if(!s)return i;if(this._leaving)return Ps(e,i);var o="__transition-".concat(this._uid,"-");s.key=null==s.key?s.isComment?o+"comment":o+s.tag:r(s.key)?0===String(s.key).indexOf(o)?s.key:o+s.key:s.key;var u=(s.data||(s.data={})).transition=Is(this),d=this._vnode,p=xs(d);if(s.data.directives&&s.data.directives.some(Ss)&&(s.data.show=!0),p&&p.data&&!function(e,t){return t.key===e.key&&t.tag===e.tag}(s,p)&&!ct(p)&&(!p.componentInstance||!p.componentInstance._vnode.isComment)){var y=p.data.transition=R({},u);if("out-in"===a)return this._leaving=!0,$e(y,"afterLeave",(function(){t._leaving=!1,t.$forceUpdate()})),Ps(e,i);if("in-out"===a){if(ct(s))return d;var l,m=function(){l()};$e(u,"afterEnter",m),$e(u,"enterCancelled",m),$e(y,"delayLeave",(function(e){l=e}))}}return i}}},Os=R({tag:String,moveClass:String},ks);delete Os.mode;var Ls={props:Os,beforeMount:function(){var e=this,t=this._update;this._update=function(n,a){var i=Dt(e);e.__patch__(e._vnode,e.kept,!1,!0),e._vnode=e.kept,i(),t.call(e,n,a)}},render:function(e){for(var t=this.tag||this.$vnode.data.tag||"span",n=Object.create(null),a=this.prevChildren=this.children,i=this.$slots.default||[],s=this.children=[],r=Is(this),o=0;o<i.length;o++)(p=i[o]).tag&&null!=p.key&&0!==String(p.key).indexOf("__vlist")&&(s.push(p),n[p.key]=p,(p.data||(p.data={})).transition=r);if(a){var u=[],d=[];for(o=0;o<a.length;o++){var p;(p=a[o]).data.transition=r,p.data.pos=p.elm.getBoundingClientRect(),n[p.key]?u.push(p):d.push(p)}this.kept=e(t,null,u),this.removed=d}return e(t,null,s)},updated:function(){var e=this.prevChildren,t=this.moveClass||(this.name||"v")+"-move";e.length&&this.hasMove(e[0].elm,t)&&(e.forEach(Es),e.forEach(Us),e.forEach(Vs),this._reflow=document.body.offsetHeight,e.forEach((function(e){if(e.data.moved){var n=e.elm,a=n.style;as(n,t),a.transform=a.WebkitTransform=a.transitionDuration="",n.addEventListener(Ki,n._moveCb=function e(a){a&&a.target!==n||a&&!/transform$/.test(a.propertyName)||(n.removeEventListener(Ki,e),n._moveCb=null,is(n,t))})}})))},methods:{hasMove:function(e,t){if(!Gi)return!1;if(this._hasMove)return this._hasMove;var n=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach((function(e){Hi(n,e)})),ji(n,t),n.style.display="none",this.$el.appendChild(n);var a=os(n);return this.$el.removeChild(n),this._hasMove=a.hasTransform}}};function Es(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function Us(e){e.data.newPos=e.elm.getBoundingClientRect()}function Vs(e){var t=e.data.pos,n=e.data.newPos,a=t.left-n.left,i=t.top-n.top;if(a||i){e.data.moved=!0;var s=e.elm.style;s.transform=s.WebkitTransform="translate(".concat(a,"px,").concat(i,"px)"),s.transitionDuration="0s"}}var Bs={Transition:Ds,TransitionGroup:Ls};Xn.config.mustUseProp=ia,Xn.config.isReservedTag=ga,Xn.config.isReservedAttr=na,Xn.config.getTagNamespace=va,Xn.config.isUnknownElement=function(e){if(!Q)return!0;if(ga(e))return!1;if(e=e.toLowerCase(),null!=wa[e])return wa[e];var t=document.createElement(e);return e.indexOf("-")>-1?wa[e]=t.constructor===window.HTMLUnknownElement||t.constructor===window.HTMLElement:wa[e]=/HTMLUnknownElement/.test(t.toString())},R(Xn.options.directives,Cs),R(Xn.options.components,Bs),Xn.prototype.__patch__=Q?fs:D,Xn.prototype.$mount=function(e,t){return function(e,t,n){var a;e.$el=t,e.$options.render||(e.$options.render=le),Ut(e,"beforeMount"),a=function(){e._update(e._render(),n)},new fn(e,a,D,{before:function(){e._isMounted&&!e._isDestroyed&&Ut(e,"beforeUpdate")}},!0),n=!1;var i=e._preWatchers;if(i)for(var s=0;s<i.length;s++)i[s].run();return null==e.$vnode&&(e._isMounted=!0,Ut(e,"mounted")),e}(this,e=e&&Q?_a(e):void 0,t)},Q&&setTimeout((function(){q.devtools&&se&&se.emit("init",Xn)}),0);var Ns,Fs=/\{\{((?:.|\r?\n)+?)\}\}/g,qs=/[-.*+?^${}()|[\]\/\\]/g,$s=M((function(e){var t=e[0].replace(qs,"\\$&"),n=e[1].replace(qs,"\\$&");return new RegExp(t+"((?:.|\\n)+?)"+n,"g")})),zs={staticKeys:["staticClass"],transformNode:function(e,t){t.warn;var n=di(e,"class");n&&(e.staticClass=JSON.stringify(n.replace(/\s+/g," ").trim()));var a=ui(e,"class",!1);a&&(e.classBinding=a)},genData:function(e){var t="";return e.staticClass&&(t+="staticClass:".concat(e.staticClass,",")),e.classBinding&&(t+="class:".concat(e.classBinding,",")),t}},js={staticKeys:["staticStyle"],transformNode:function(e,t){t.warn;var n=di(e,"style");n&&(e.staticStyle=JSON.stringify(Di(n)));var a=ui(e,"style",!1);a&&(e.styleBinding=a)},genData:function(e){var t="";return e.staticStyle&&(t+="staticStyle:".concat(e.staticStyle,",")),e.styleBinding&&(t+="style:(".concat(e.styleBinding,"),")),t}},Hs=T("area,base,br,col,embed,frame,hr,img,input,isindex,keygen,link,meta,param,source,track,wbr"),Ws=T("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source"),Qs=T("address,article,aside,base,blockquote,body,caption,col,colgroup,dd,details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,title,tr,track"),Gs=/^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/,Xs=/^\s*((?:v-[\w-]+:|@|:|#)\[[^=]+?\][^\s"'<>\/=]*)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/,Ys="[a-zA-Z_][\\-\\.0-9_a-zA-Z".concat($.source,"]*"),Js="((?:".concat(Ys,"\\:)?").concat(Ys,")"),Ks=new RegExp("^<".concat(Js)),Zs=/^\s*(\/?)>/,er=new RegExp("^<\\/".concat(Js,"[^>]*>")),tr=/^<!DOCTYPE [^>]+>/i,nr=/^<!\--/,ar=/^<!\[/,ir=T("script,style,textarea",!0),sr={},rr={"&lt;":"<","&gt;":">","&quot;":'"',"&amp;":"&","&#10;":"\n","&#9;":"\t","&#39;":"'"},or=/&(?:lt|gt|quot|amp|#39);/g,ur=/&(?:lt|gt|quot|amp|#39|#10|#9);/g,dr=T("pre,textarea",!0),pr=function(e,t){return e&&dr(e)&&"\n"===t[0]};function yr(e,t){var n=t?ur:or;return e.replace(n,(function(e){return rr[e]}))}var lr,mr,cr,fr,Tr,br,hr,gr,vr=/^@|^v-on:/,wr=/^v-|^@|^:|^#/,Mr=/([\s\S]*?)\s+(?:in|of)\s+([\s\S]*)/,_r=/,([^,\}\]]*)(?:,([^,\}\]]*))?$/,Ar=/^\(|\)$/g,Cr=/^\[.*\]$/,kr=/:(.*)$/,xr=/^:|^\.|^v-bind:/,Ir=/\.[^.\]]+(?=[^\]]*$)/g,Pr=/^v-slot(:|$)|^#/,Rr=/[\r\n]/,Sr=/[ \f\t\r\n]+/g,Dr=M((function(e){return(Ns=Ns||document.createElement("div")).innerHTML=e,Ns.textContent})),Or="_empty_";function Lr(e,t,n){return{type:1,tag:e,attrsList:t,attrsMap:qr(t),rawAttrsMap:{},parent:n,children:[]}}function Er(e,t){lr=t.warn||ei,br=t.isPreTag||O,hr=t.mustUseProp||O,gr=t.getTagNamespace||O;t.isReservedTag;cr=ti(t.modules,"transformNode"),fr=ti(t.modules,"preTransformNode"),Tr=ti(t.modules,"postTransformNode"),mr=t.delimiters;var n,a,i=[],s=!1!==t.preserveWhitespace,r=t.whitespace,o=!1,u=!1;function d(e){if(p(e),o||e.processed||(e=Ur(e,t)),i.length||e===n||n.if&&(e.elseif||e.else)&&Br(n,{exp:e.elseif,block:e}),a&&!e.forbidden)if(e.elseif||e.else)r=e,d=function(e){for(var t=e.length;t--;){if(1===e[t].type)return e[t];e.pop()}}(a.children),d&&d.if&&Br(d,{exp:r.elseif,block:r});else{if(e.slotScope){var s=e.slotTarget||'"default"';(a.scopedSlots||(a.scopedSlots={}))[s]=e}a.children.push(e),e.parent=a}var r,d;e.children=e.children.filter((function(e){return!e.slotScope})),p(e),e.pre&&(o=!1),br(e.tag)&&(u=!1);for(var y=0;y<Tr.length;y++)Tr[y](e,t)}function p(e){if(!u)for(var t=void 0;(t=e.children[e.children.length-1])&&3===t.type&&" "===t.text;)e.children.pop()}return function(e,t){for(var n,a,i=[],s=t.expectHTML,r=t.isUnaryTag||O,o=t.canBeLeftOpenTag||O,u=0,d=function(){if(n=e,a&&ir(a)){var d=0,l=a.toLowerCase(),m=sr[l]||(sr[l]=new RegExp("([\\s\\S]*?)(</"+l+"[^>]*>)","i"));M=e.replace(m,(function(e,n,a){return d=a.length,ir(l)||"noscript"===l||(n=n.replace(/<!\--([\s\S]*?)-->/g,"$1").replace(/<!\[CDATA\[([\s\S]*?)]]>/g,"$1")),pr(l,n)&&(n=n.slice(1)),t.chars&&t.chars(n),""})),u+=e.length-M.length,e=M,y(l,u-d,u)}else{var c=e.indexOf("<");if(0===c){if(nr.test(e)){var f=e.indexOf("--\x3e");if(f>=0)return t.shouldKeepComment&&t.comment&&t.comment(e.substring(4,f),u,u+f+3),p(f+3),"continue"}if(ar.test(e)){var T=e.indexOf("]>");if(T>=0)return p(T+2),"continue"}var b=e.match(tr);if(b)return p(b[0].length),"continue";var h=e.match(er);if(h){var g=u;return p(h[0].length),y(h[1],g,u),"continue"}var v=function(){var t=e.match(Ks);if(t){var n={tagName:t[1],attrs:[],start:u};p(t[0].length);for(var a=void 0,i=void 0;!(a=e.match(Zs))&&(i=e.match(Xs)||e.match(Gs));)i.start=u,p(i[0].length),i.end=u,n.attrs.push(i);if(a)return n.unarySlash=a[1],p(a[0].length),n.end=u,n}}();if(v)return function(e){var n=e.tagName,u=e.unarySlash;s&&("p"===a&&Qs(n)&&y(a),o(n)&&a===n&&y(n));for(var d=r(n)||!!u,p=e.attrs.length,l=new Array(p),m=0;m<p;m++){var c=e.attrs[m],f=c[3]||c[4]||c[5]||"",T="a"===n&&"href"===c[1]?t.shouldDecodeNewlinesForHref:t.shouldDecodeNewlines;l[m]={name:c[1],value:yr(f,T)}}d||(i.push({tag:n,lowerCasedTag:n.toLowerCase(),attrs:l,start:e.start,end:e.end}),a=n),t.start&&t.start(n,l,d,e.start,e.end)}(v),pr(v.tagName,e)&&p(1),"continue"}var w=void 0,M=void 0,_=void 0;if(c>=0){for(M=e.slice(c);!(er.test(M)||Ks.test(M)||nr.test(M)||ar.test(M)||(_=M.indexOf("<",1))<0);)c+=_,M=e.slice(c);w=e.substring(0,c)}c<0&&(w=e),w&&p(w.length),t.chars&&w&&t.chars(w,u-w.length,u)}if(e===n)return t.chars&&t.chars(e),"break"};e&&"break"!==d(););function p(t){u+=t,e=e.substring(t)}function y(e,n,s){var r,o;if(null==n&&(n=u),null==s&&(s=u),e)for(o=e.toLowerCase(),r=i.length-1;r>=0&&i[r].lowerCasedTag!==o;r--);else r=0;if(r>=0){for(var d=i.length-1;d>=r;d--)t.end&&t.end(i[d].tag,n,s);i.length=r,a=r&&i[r-1].tag}else"br"===o?t.start&&t.start(e,[],!0,n,s):"p"===o&&(t.start&&t.start(e,[],!1,n,s),t.end&&t.end(e,n,s))}y()}(e,{warn:lr,expectHTML:t.expectHTML,isUnaryTag:t.isUnaryTag,canBeLeftOpenTag:t.canBeLeftOpenTag,shouldDecodeNewlines:t.shouldDecodeNewlines,shouldDecodeNewlinesForHref:t.shouldDecodeNewlinesForHref,shouldKeepComment:t.comments,outputSourceRange:t.outputSourceRange,start:function(e,s,r,p,y){var l=a&&a.ns||gr(e);X&&"svg"===l&&(s=function(e){for(var t=[],n=0;n<e.length;n++){var a=e[n];$r.test(a.name)||(a.name=a.name.replace(zr,""),t.push(a))}return t}(s));var m,c=Lr(e,s,a);l&&(c.ns=l),"style"!==(m=c).tag&&("script"!==m.tag||m.attrsMap.type&&"text/javascript"!==m.attrsMap.type)||ie()||(c.forbidden=!0);for(var f=0;f<fr.length;f++)c=fr[f](c,t)||c;o||(function(e){null!=di(e,"v-pre")&&(e.pre=!0)}(c),c.pre&&(o=!0)),br(c.tag)&&(u=!0),o?function(e){var t=e.attrsList,n=t.length;if(n)for(var a=e.attrs=new Array(n),i=0;i<n;i++)a[i]={name:t[i].name,value:JSON.stringify(t[i].value)},null!=t[i].start&&(a[i].start=t[i].start,a[i].end=t[i].end);else e.pre||(e.plain=!0)}(c):c.processed||(Vr(c),function(e){var t=di(e,"v-if");if(t)e.if=t,Br(e,{exp:t,block:e});else{null!=di(e,"v-else")&&(e.else=!0);var n=di(e,"v-else-if");n&&(e.elseif=n)}}(c),function(e){null!=di(e,"v-once")&&(e.once=!0)}(c)),n||(n=c),r?d(c):(a=c,i.push(c))},end:function(e,t,n){var s=i[i.length-1];i.length-=1,a=i[i.length-1],d(s)},chars:function(e,t,n){if(a&&(!X||"textarea"!==a.tag||a.attrsMap.placeholder!==e)){var i,d=a.children;if(e=u||e.trim()?"script"===(i=a).tag||"style"===i.tag?e:Dr(e):d.length?r?"condense"===r&&Rr.test(e)?"":" ":s?" ":"":""){u||"condense"!==r||(e=e.replace(Sr," "));var p=void 0,y=void 0;!o&&" "!==e&&(p=function(e,t){var n=t?$s(t):Fs;if(n.test(e)){for(var a,i,s,r=[],o=[],u=n.lastIndex=0;a=n.exec(e);){(i=a.index)>u&&(o.push(s=e.slice(u,i)),r.push(JSON.stringify(s)));var d=Ka(a[1].trim());r.push("_s(".concat(d,")")),o.push({"@binding":d}),u=i+a[0].length}return u<e.length&&(o.push(s=e.slice(u)),r.push(JSON.stringify(s))),{expression:r.join("+"),tokens:o}}}(e,mr))?y={type:2,expression:p.expression,tokens:p.tokens,text:e}:" "===e&&d.length&&" "===d[d.length-1].text||(y={type:3,text:e}),y&&d.push(y)}}},comment:function(e,t,n){if(a){var i={type:3,text:e,isComment:!0};a.children.push(i)}}}),n}function Ur(e,t){var n;!function(e){var t=ui(e,"key");t&&(e.key=t)}(e),e.plain=!e.key&&!e.scopedSlots&&!e.attrsList.length,function(e){var t=ui(e,"ref");t&&(e.ref=t,e.refInFor=function(e){for(var t=e;t;){if(void 0!==t.for)return!0;t=t.parent}return!1}(e))}(e),function(e){var t;"template"===e.tag?(t=di(e,"scope"),e.slotScope=t||di(e,"slot-scope")):(t=di(e,"slot-scope"))&&(e.slotScope=t);var n,a=ui(e,"slot");if(a&&(e.slotTarget='""'===a?'"default"':a,e.slotTargetDynamic=!(!e.attrsMap[":slot"]&&!e.attrsMap["v-bind:slot"]),"template"===e.tag||e.slotScope||ai(e,"slot",a,function(e,t){return e.rawAttrsMap[":"+t]||e.rawAttrsMap["v-bind:"+t]||e.rawAttrsMap[t]}(e,"slot"))),"template"===e.tag){if(n=pi(e,Pr)){var i=Nr(n),s=i.name,r=i.dynamic;e.slotTarget=s,e.slotTargetDynamic=r,e.slotScope=n.value||Or}}else if(n=pi(e,Pr)){var o=e.scopedSlots||(e.scopedSlots={}),u=Nr(n),d=u.name,p=(r=u.dynamic,o[d]=Lr("template",[],e));p.slotTarget=d,p.slotTargetDynamic=r,p.children=e.children.filter((function(e){if(!e.slotScope)return e.parent=p,!0})),p.slotScope=n.value||Or,e.children=[],e.plain=!1}}(e),"slot"===(n=e).tag&&(n.slotName=ui(n,"name")),function(e){var t;(t=ui(e,"is"))&&(e.component=t),null!=di(e,"inline-template")&&(e.inlineTemplate=!0)}(e);for(var a=0;a<cr.length;a++)e=cr[a](e,t)||e;return function(e){var t,n,a,i,s,r,o,u,d=e.attrsList;for(t=0,n=d.length;t<n;t++)if(a=i=d[t].name,s=d[t].value,wr.test(a))if(e.hasBindings=!0,(r=Fr(a.replace(wr,"")))&&(a=a.replace(Ir,"")),xr.test(a))a=a.replace(xr,""),s=Ka(s),(u=Cr.test(a))&&(a=a.slice(1,-1)),r&&(r.prop&&!u&&"innerHtml"===(a=A(a))&&(a="innerHTML"),r.camel&&!u&&(a=A(a)),r.sync&&(o=mi(s,"$event"),u?oi(e,'"update:"+('.concat(a,")"),o,null,!1,0,d[t],!0):(oi(e,"update:".concat(A(a)),o,null,!1,0,d[t]),x(a)!==A(a)&&oi(e,"update:".concat(x(a)),o,null,!1,0,d[t])))),r&&r.prop||!e.component&&hr(e.tag,e.attrsMap.type,a)?ni(e,a,s,d[t],u):ai(e,a,s,d[t],u);else if(vr.test(a))a=a.replace(vr,""),(u=Cr.test(a))&&(a=a.slice(1,-1)),oi(e,a,s,r,!1,0,d[t],u);else{var p=(a=a.replace(wr,"")).match(kr),y=p&&p[1];u=!1,y&&(a=a.slice(0,-(y.length+1)),Cr.test(y)&&(y=y.slice(1,-1),u=!0)),si(e,a,i,s,y,u,r,d[t])}else ai(e,a,JSON.stringify(s),d[t]),!e.component&&"muted"===a&&hr(e.tag,e.attrsMap.type,a)&&ni(e,a,"true",d[t])}(e),e}function Vr(e){var t;if(t=di(e,"v-for")){var n=function(e){var t=e.match(Mr);if(t){var n={};n.for=t[2].trim();var a=t[1].trim().replace(Ar,""),i=a.match(_r);return i?(n.alias=a.replace(_r,"").trim(),n.iterator1=i[1].trim(),i[2]&&(n.iterator2=i[2].trim())):n.alias=a,n}}(t);n&&R(e,n)}}function Br(e,t){e.ifConditions||(e.ifConditions=[]),e.ifConditions.push(t)}function Nr(e){var t=e.name.replace(Pr,"");return t||"#"!==e.name[0]&&(t="default"),Cr.test(t)?{name:t.slice(1,-1),dynamic:!0}:{name:'"'.concat(t,'"'),dynamic:!1}}function Fr(e){var t=e.match(Ir);if(t){var n={};return t.forEach((function(e){n[e.slice(1)]=!0})),n}}function qr(e){for(var t={},n=0,a=e.length;n<a;n++)t[e[n].name]=e[n].value;return t}var $r=/^xmlns:NS\d+/,zr=/^NS\d+:/;function jr(e){return Lr(e.tag,e.attrsList.slice(),e.parent)}var Hr,Wr,Qr=[zs,js,{preTransformNode:function(e,t){if("input"===e.tag){var n=e.attrsMap;if(!n["v-model"])return;var a=void 0;if((n[":type"]||n["v-bind:type"])&&(a=ui(e,"type")),n.type||a||!n["v-bind"]||(a="(".concat(n["v-bind"],").type")),a){var i=di(e,"v-if",!0),s=i?"&&(".concat(i,")"):"",r=null!=di(e,"v-else",!0),o=di(e,"v-else-if",!0),u=jr(e);Vr(u),ii(u,"type","checkbox"),Ur(u,t),u.processed=!0,u.if="(".concat(a,")==='checkbox'")+s,Br(u,{exp:u.if,block:u});var d=jr(e);di(d,"v-for",!0),ii(d,"type","radio"),Ur(d,t),Br(u,{exp:"(".concat(a,")==='radio'")+s,block:d});var p=jr(e);return di(p,"v-for",!0),ii(p,":type",a),Ur(p,t),Br(u,{exp:i,block:p}),r?u.else=!0:o&&(u.elseif=o),u}}}}],Gr={expectHTML:!0,modules:Qr,directives:{model:function(e,t,n){var a=t.value,i=t.modifiers,s=e.tag,r=e.attrsMap.type;if(e.component)return li(e,a,i),!1;if("select"===s)!function(e,t,n){var a=n&&n.number,i='Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;'+"return ".concat(a?"_n(val)":"val","})"),s="var $$selectedVal = ".concat(i,";");oi(e,"change",s="".concat(s," ").concat(mi(t,"$event.target.multiple ? $$selectedVal : $$selectedVal[0]")),null,!0)}(e,a,i);else if("input"===s&&"checkbox"===r)!function(e,t,n){var a=n&&n.number,i=ui(e,"value")||"null",s=ui(e,"true-value")||"true",r=ui(e,"false-value")||"false";ni(e,"checked","Array.isArray(".concat(t,")")+"?_i(".concat(t,",").concat(i,")>-1")+("true"===s?":(".concat(t,")"):":_q(".concat(t,",").concat(s,")"))),oi(e,"change","var $$a=".concat(t,",")+"$$el=$event.target,"+"$$c=$$el.checked?(".concat(s,"):(").concat(r,");")+"if(Array.isArray($$a)){"+"var $$v=".concat(a?"_n("+i+")":i,",")+"$$i=_i($$a,$$v);"+"if($$el.checked){$$i<0&&(".concat(mi(t,"$$a.concat([$$v])"),")}")+"else{$$i>-1&&(".concat(mi(t,"$$a.slice(0,$$i).concat($$a.slice($$i+1))"),")}")+"}else{".concat(mi(t,"$$c"),"}"),null,!0)}(e,a,i);else if("input"===s&&"radio"===r)!function(e,t,n){var a=n&&n.number,i=ui(e,"value")||"null";i=a?"_n(".concat(i,")"):i,ni(e,"checked","_q(".concat(t,",").concat(i,")")),oi(e,"change",mi(t,i),null,!0)}(e,a,i);else if("input"===s||"textarea"===s)!function(e,t,n){var a=e.attrsMap.type,i=n||{},s=i.lazy,r=i.number,o=i.trim,u=!s&&"range"!==a,d=s?"change":"range"===a?vi:"input",p="$event.target.value";o&&(p="$event.target.value.trim()"),r&&(p="_n(".concat(p,")"));var y=mi(t,p);u&&(y="if($event.target.composing)return;".concat(y)),ni(e,"value","(".concat(t,")")),oi(e,d,y,null,!0),(o||r)&&oi(e,"blur","$forceUpdate()")}(e,a,i);else if(!q.isReservedTag(s))return li(e,a,i),!1;return!0},text:function(e,t){t.value&&ni(e,"textContent","_s(".concat(t.value,")"),t)},html:function(e,t){t.value&&ni(e,"innerHTML","_s(".concat(t.value,")"),t)}},isPreTag:function(e){return"pre"===e},isUnaryTag:Hs,mustUseProp:ia,canBeLeftOpenTag:Ws,isReservedTag:ga,getTagNamespace:va,staticKeys:function(e){return e.reduce((function(e,t){return e.concat(t.staticKeys||[])}),[]).join(",")}(Qr)},Xr=M((function(e){return T("type,tag,attrsList,attrsMap,plain,parent,children,attrs,start,end,rawAttrsMap"+(e?","+e:""))}));function Yr(e,t){e&&(Hr=Xr(t.staticKeys||""),Wr=t.isReservedTag||O,Jr(e),Kr(e,!1))}function Jr(e){if(e.static=function(e){return 2!==e.type&&(3===e.type||!(!e.pre&&(e.hasBindings||e.if||e.for||b(e.tag)||!Wr(e.tag)||function(e){for(;e.parent;){if("template"!==(e=e.parent).tag)return!1;if(e.for)return!0}return!1}(e)||!Object.keys(e).every(Hr))))}(e),1===e.type){if(!Wr(e.tag)&&"slot"!==e.tag&&null==e.attrsMap["inline-template"])return;for(var t=0,n=e.children.length;t<n;t++){var a=e.children[t];Jr(a),a.static||(e.static=!1)}if(e.ifConditions)for(t=1,n=e.ifConditions.length;t<n;t++){var i=e.ifConditions[t].block;Jr(i),i.static||(e.static=!1)}}}function Kr(e,t){if(1===e.type){if((e.static||e.once)&&(e.staticInFor=t),e.static&&e.children.length&&(1!==e.children.length||3!==e.children[0].type))return void(e.staticRoot=!0);if(e.staticRoot=!1,e.children)for(var n=0,a=e.children.length;n<a;n++)Kr(e.children[n],t||!!e.for);if(e.ifConditions)for(n=1,a=e.ifConditions.length;n<a;n++)Kr(e.ifConditions[n].block,t)}}var Zr=/^([\w$_]+|\([^)]*?\))\s*=>|^function(?:\s+[\w$]+)?\s*\(/,eo=/\([^)]*?\);*$/,to=/^[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['[^']*?']|\["[^"]*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*$/,no={esc:27,tab:9,enter:13,space:32,up:38,left:37,right:39,down:40,delete:[8,46]},ao={esc:["Esc","Escape"],tab:"Tab",enter:"Enter",space:[" ","Spacebar"],up:["Up","ArrowUp"],left:["Left","ArrowLeft"],right:["Right","ArrowRight"],down:["Down","ArrowDown"],delete:["Backspace","Delete","Del"]},io=function(e){return"if(".concat(e,")return null;")},so={stop:"$event.stopPropagation();",prevent:"$event.preventDefault();",self:io("$event.target !== $event.currentTarget"),ctrl:io("!$event.ctrlKey"),shift:io("!$event.shiftKey"),alt:io("!$event.altKey"),meta:io("!$event.metaKey"),left:io("'button' in $event && $event.button !== 0"),middle:io("'button' in $event && $event.button !== 1"),right:io("'button' in $event && $event.button !== 2")};function ro(e,t){var n=t?"nativeOn:":"on:",a="",i="";for(var s in e){var r=oo(e[s]);e[s]&&e[s].dynamic?i+="".concat(s,",").concat(r,","):a+='"'.concat(s,'":').concat(r,",")}return a="{".concat(a.slice(0,-1),"}"),i?n+"_d(".concat(a,",[").concat(i.slice(0,-1),"])"):n+a}function oo(e){if(!e)return"function(){}";if(Array.isArray(e))return"[".concat(e.map((function(e){return oo(e)})).join(","),"]");var t=to.test(e.value),n=Zr.test(e.value),a=to.test(e.value.replace(eo,""));if(e.modifiers){var i="",s="",r=[],o=function(t){if(so[t])s+=so[t],no[t]&&r.push(t);else if("exact"===t){var n=e.modifiers;s+=io(["ctrl","shift","alt","meta"].filter((function(e){return!n[e]})).map((function(e){return"$event.".concat(e,"Key")})).join("||"))}else r.push(t)};for(var u in e.modifiers)o(u);r.length&&(i+=function(e){return"if(!$event.type.indexOf('key')&&"+"".concat(e.map(uo).join("&&"),")return null;")}(r)),s&&(i+=s);var d=t?"return ".concat(e.value,".apply(null, arguments)"):n?"return (".concat(e.value,").apply(null, arguments)"):a?"return ".concat(e.value):e.value;return"function($event){".concat(i).concat(d,"}")}return t||n?e.value:"function($event){".concat(a?"return ".concat(e.value):e.value,"}")}function uo(e){var t=parseInt(e,10);if(t)return"$event.keyCode!==".concat(t);var n=no[e],a=ao[e];return"_k($event.keyCode,"+"".concat(JSON.stringify(e),",")+"".concat(JSON.stringify(n),",")+"$event.key,"+"".concat(JSON.stringify(a))+")"}var po={on:function(e,t){e.wrapListeners=function(e){return"_g(".concat(e,",").concat(t.value,")")}},bind:function(e,t){e.wrapData=function(n){return"_b(".concat(n,",'").concat(e.tag,"',").concat(t.value,",").concat(t.modifiers&&t.modifiers.prop?"true":"false").concat(t.modifiers&&t.modifiers.sync?",true":"",")")}},cloak:D},yo=function(e){this.options=e,this.warn=e.warn||ei,this.transforms=ti(e.modules,"transformCode"),this.dataGenFns=ti(e.modules,"genData"),this.directives=R(R({},po),e.directives);var t=e.isReservedTag||O;this.maybeComponent=function(e){return!!e.component||!t(e.tag)},this.onceId=0,this.staticRenderFns=[],this.pre=!1};function lo(e,t){var n=new yo(t),a=e?"script"===e.tag?"null":mo(e,n):'_c("div")';return{render:"with(this){return ".concat(a,"}"),staticRenderFns:n.staticRenderFns}}function mo(e,t){if(e.parent&&(e.pre=e.pre||e.parent.pre),e.staticRoot&&!e.staticProcessed)return co(e,t);if(e.once&&!e.onceProcessed)return fo(e,t);if(e.for&&!e.forProcessed)return ho(e,t);if(e.if&&!e.ifProcessed)return To(e,t);if("template"!==e.tag||e.slotTarget||t.pre){if("slot"===e.tag)return function(e,t){var n=e.slotName||'"default"',a=Mo(e,t),i="_t(".concat(n).concat(a?",function(){return ".concat(a,"}"):""),s=e.attrs||e.dynamicAttrs?Co((e.attrs||[]).concat(e.dynamicAttrs||[]).map((function(e){return{name:A(e.name),value:e.value,dynamic:e.dynamic}}))):null,r=e.attrsMap["v-bind"];return!s&&!r||a||(i+=",null"),s&&(i+=",".concat(s)),r&&(i+="".concat(s?"":",null",",").concat(r)),i+")"}(e,t);var n=void 0;if(e.component)n=function(e,t,n){var a=t.inlineTemplate?null:Mo(t,n,!0);return"_c(".concat(e,",").concat(go(t,n)).concat(a?",".concat(a):"",")")}(e.component,e,t);else{var a=void 0,i=t.maybeComponent(e);(!e.plain||e.pre&&i)&&(a=go(e,t));var s=void 0,r=t.options.bindings;i&&r&&!1!==r.__isScriptSetup&&(s=function(e,t){var n=A(t),a=C(n),i=function(i){return e[t]===i?t:e[n]===i?n:e[a]===i?a:void 0},s=i("setup-const")||i("setup-reactive-const");if(s)return s;var r=i("setup-let")||i("setup-ref")||i("setup-maybe-ref");return r||void 0}(r,e.tag)),s||(s="'".concat(e.tag,"'"));var o=e.inlineTemplate?null:Mo(e,t,!0);n="_c(".concat(s).concat(a?",".concat(a):"").concat(o?",".concat(o):"",")")}for(var u=0;u<t.transforms.length;u++)n=t.transforms[u](e,n);return n}return Mo(e,t)||"void 0"}function co(e,t){e.staticProcessed=!0;var n=t.pre;return e.pre&&(t.pre=e.pre),t.staticRenderFns.push("with(this){return ".concat(mo(e,t),"}")),t.pre=n,"_m(".concat(t.staticRenderFns.length-1).concat(e.staticInFor?",true":"",")")}function fo(e,t){if(e.onceProcessed=!0,e.if&&!e.ifProcessed)return To(e,t);if(e.staticInFor){for(var n="",a=e.parent;a;){if(a.for){n=a.key;break}a=a.parent}return n?"_o(".concat(mo(e,t),",").concat(t.onceId++,",").concat(n,")"):mo(e,t)}return co(e,t)}function To(e,t,n,a){return e.ifProcessed=!0,bo(e.ifConditions.slice(),t,n,a)}function bo(e,t,n,a){if(!e.length)return a||"_e()";var i=e.shift();return i.exp?"(".concat(i.exp,")?").concat(s(i.block),":").concat(bo(e,t,n,a)):"".concat(s(i.block));function s(e){return n?n(e,t):e.once?fo(e,t):mo(e,t)}}function ho(e,t,n,a){var i=e.for,s=e.alias,r=e.iterator1?",".concat(e.iterator1):"",o=e.iterator2?",".concat(e.iterator2):"";return e.forProcessed=!0,"".concat(a||"_l","((").concat(i,"),")+"function(".concat(s).concat(r).concat(o,"){")+"return ".concat((n||mo)(e,t))+"})"}function go(e,t){var n="{",a=function(e,t){var n=e.directives;if(n){var a,i,s,r,o="directives:[",u=!1;for(a=0,i=n.length;a<i;a++){s=n[a],r=!0;var d=t.directives[s.name];d&&(r=!!d(e,s,t.warn)),r&&(u=!0,o+='{name:"'.concat(s.name,'",rawName:"').concat(s.rawName,'"').concat(s.value?",value:(".concat(s.value,"),expression:").concat(JSON.stringify(s.value)):"").concat(s.arg?",arg:".concat(s.isDynamicArg?s.arg:'"'.concat(s.arg,'"')):"").concat(s.modifiers?",modifiers:".concat(JSON.stringify(s.modifiers)):"","},"))}return u?o.slice(0,-1)+"]":void 0}}(e,t);a&&(n+=a+","),e.key&&(n+="key:".concat(e.key,",")),e.ref&&(n+="ref:".concat(e.ref,",")),e.refInFor&&(n+="refInFor:true,"),e.pre&&(n+="pre:true,"),e.component&&(n+='tag:"'.concat(e.tag,'",'));for(var i=0;i<t.dataGenFns.length;i++)n+=t.dataGenFns[i](e);if(e.attrs&&(n+="attrs:".concat(Co(e.attrs),",")),e.props&&(n+="domProps:".concat(Co(e.props),",")),e.events&&(n+="".concat(ro(e.events,!1),",")),e.nativeEvents&&(n+="".concat(ro(e.nativeEvents,!0),",")),e.slotTarget&&!e.slotScope&&(n+="slot:".concat(e.slotTarget,",")),e.scopedSlots&&(n+="".concat(function(e,t,n){var a=e.for||Object.keys(t).some((function(e){var n=t[e];return n.slotTargetDynamic||n.if||n.for||vo(n)})),i=!!e.if;if(!a)for(var s=e.parent;s;){if(s.slotScope&&s.slotScope!==Or||s.for){a=!0;break}s.if&&(i=!0),s=s.parent}var r=Object.keys(t).map((function(e){return wo(t[e],n)})).join(",");return"scopedSlots:_u([".concat(r,"]").concat(a?",null,true":"").concat(!a&&i?",null,false,".concat(function(e){for(var t=5381,n=e.length;n;)t=33*t^e.charCodeAt(--n);return t>>>0}(r)):"",")")}(e,e.scopedSlots,t),",")),e.model&&(n+="model:{value:".concat(e.model.value,",callback:").concat(e.model.callback,",expression:").concat(e.model.expression,"},")),e.inlineTemplate){var s=function(e,t){var n=e.children[0];if(n&&1===n.type){var a=lo(n,t.options);return"inlineTemplate:{render:function(){".concat(a.render,"},staticRenderFns:[").concat(a.staticRenderFns.map((function(e){return"function(){".concat(e,"}")})).join(","),"]}")}}(e,t);s&&(n+="".concat(s,","))}return n=n.replace(/,$/,"")+"}",e.dynamicAttrs&&(n="_b(".concat(n,',"').concat(e.tag,'",').concat(Co(e.dynamicAttrs),")")),e.wrapData&&(n=e.wrapData(n)),e.wrapListeners&&(n=e.wrapListeners(n)),n}function vo(e){return 1===e.type&&("slot"===e.tag||e.children.some(vo))}function wo(e,t){var n=e.attrsMap["slot-scope"];if(e.if&&!e.ifProcessed&&!n)return To(e,t,wo,"null");if(e.for&&!e.forProcessed)return ho(e,t,wo);var a=e.slotScope===Or?"":String(e.slotScope),i="function(".concat(a,"){")+"return ".concat("template"===e.tag?e.if&&n?"(".concat(e.if,")?").concat(Mo(e,t)||"undefined",":undefined"):Mo(e,t)||"undefined":mo(e,t),"}"),s=a?"":",proxy:true";return"{key:".concat(e.slotTarget||'"default"',",fn:").concat(i).concat(s,"}")}function Mo(e,t,n,a,i){var s=e.children;if(s.length){var r=s[0];if(1===s.length&&r.for&&"template"!==r.tag&&"slot"!==r.tag){var o=n?t.maybeComponent(r)?",1":",0":"";return"".concat((a||mo)(r,t)).concat(o)}var u=n?function(e,t){for(var n=0,a=0;a<e.length;a++){var i=e[a];if(1===i.type){if(_o(i)||i.ifConditions&&i.ifConditions.some((function(e){return _o(e.block)}))){n=2;break}(t(i)||i.ifConditions&&i.ifConditions.some((function(e){return t(e.block)})))&&(n=1)}}return n}(s,t.maybeComponent):0,d=i||Ao;return"[".concat(s.map((function(e){return d(e,t)})).join(","),"]").concat(u?",".concat(u):"")}}function _o(e){return void 0!==e.for||"template"===e.tag||"slot"===e.tag}function Ao(e,t){return 1===e.type?mo(e,t):3===e.type&&e.isComment?function(e){return"_e(".concat(JSON.stringify(e.text),")")}(e):"_v(".concat(2===(n=e).type?n.expression:ko(JSON.stringify(n.text)),")");var n}function Co(e){for(var t="",n="",a=0;a<e.length;a++){var i=e[a],s=ko(i.value);i.dynamic?n+="".concat(i.name,",").concat(s,","):t+='"'.concat(i.name,'":').concat(s,",")}return t="{".concat(t.slice(0,-1),"}"),n?"_d(".concat(t,",[").concat(n.slice(0,-1),"])"):t}function ko(e){return e.replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029")}function xo(e,t){try{return new Function(e)}catch(n){return t.push({err:n,code:e}),D}}function Io(e){var t=Object.create(null);return function(n,a,i){(a=R({},a)).warn,delete a.warn;var s=a.delimiters?String(a.delimiters)+n:n;if(t[s])return t[s];var r=e(n,a),o={},u=[];return o.render=xo(r.render,u),o.staticRenderFns=r.staticRenderFns.map((function(e){return xo(e,u)})),t[s]=o}}new RegExp("\\b"+"do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,super,throw,while,yield,delete,export,import,return,switch,default,extends,finally,continue,debugger,function,arguments".split(",").join("\\b|\\b")+"\\b"),new RegExp("\\b"+"delete,typeof,void".split(",").join("\\s*\\([^\\)]*\\)|\\b")+"\\s*\\([^\\)]*\\)");var Po,Ro,So=(Po=function(e,t){var n=Er(e.trim(),t);!1!==t.optimize&&Yr(n,t);var a=lo(n,t);return{ast:n,render:a.render,staticRenderFns:a.staticRenderFns}},function(e){function t(t,n){var a=Object.create(e),i=[],s=[];if(n)for(var r in n.modules&&(a.modules=(e.modules||[]).concat(n.modules)),n.directives&&(a.directives=R(Object.create(e.directives||null),n.directives)),n)"modules"!==r&&"directives"!==r&&(a[r]=n[r]);a.warn=function(e,t,n){(n?s:i).push(e)};var o=Po(t.trim(),a);return o.errors=i,o.tips=s,o}return{compile:t,compileToFunctions:Io(t)}}),Do=So(Gr).compileToFunctions;function Oo(e){return(Ro=Ro||document.createElement("div")).innerHTML=e?'<a href="\n"/>':'<div a="\n"/>',Ro.innerHTML.indexOf("&#10;")>0}var Lo=!!Q&&Oo(!1),Eo=!!Q&&Oo(!0),Uo=M((function(e){var t=_a(e);return t&&t.innerHTML})),Vo=Xn.prototype.$mount;function Bo(e,t){for(var n in t)e[n]=t[n];return e}Xn.prototype.$mount=function(e,t){if((e=e&&_a(e))===document.body||e===document.documentElement)return this;var n=this.$options;if(!n.render){var a=n.template;if(a)if("string"==typeof a)"#"===a.charAt(0)&&(a=Uo(a));else{if(!a.nodeType)return this;a=a.innerHTML}else e&&(a=function(e){if(e.outerHTML)return e.outerHTML;var t=document.createElement("div");return t.appendChild(e.cloneNode(!0)),t.innerHTML}(e));if(a){var i=Do(a,{outputSourceRange:!1,shouldDecodeNewlines:Lo,shouldDecodeNewlinesForHref:Eo,delimiters:n.delimiters,comments:n.comments},this),s=i.render,r=i.staticRenderFns;n.render=s,n.staticRenderFns=r}}return Vo.call(this,e,t)},Xn.compile=Do;var No=/[!'()*]/g,Fo=function(e){return"%"+e.charCodeAt(0).toString(16)},qo=/%2C/g,$o=function(e){return encodeURIComponent(e).replace(No,Fo).replace(qo,",")};function zo(e){try{return decodeURIComponent(e)}catch(e){}return e}var jo=function(e){return null==e||"object"==typeof e?e:String(e)};function Ho(e){var t={};return(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach((function(e){var n=e.replace(/\+/g," ").split("="),a=zo(n.shift()),i=n.length>0?zo(n.join("=")):null;void 0===t[a]?t[a]=i:Array.isArray(t[a])?t[a].push(i):t[a]=[t[a],i]})),t):t}function Wo(e){var t=e?Object.keys(e).map((function(t){var n=e[t];if(void 0===n)return"";if(null===n)return $o(t);if(Array.isArray(n)){var a=[];return n.forEach((function(e){void 0!==e&&(null===e?a.push($o(t)):a.push($o(t)+"="+$o(e)))})),a.join("&")}return $o(t)+"="+$o(n)})).filter((function(e){return e.length>0})).join("&"):null;return t?"?"+t:""}var Qo=/\/?$/;function Go(e,t,n,a){var i=a&&a.options.stringifyQuery,s=t.query||{};try{s=Xo(s)}catch(e){}var r={name:t.name||e&&e.name,meta:e&&e.meta||{},path:t.path||"/",hash:t.hash||"",query:s,params:t.params||{},fullPath:Ko(t,i),matched:e?Jo(e):[]};return n&&(r.redirectedFrom=Ko(n,i)),Object.freeze(r)}function Xo(e){if(Array.isArray(e))return e.map(Xo);if(e&&"object"==typeof e){var t={};for(var n in e)t[n]=Xo(e[n]);return t}return e}var Yo=Go(null,{path:"/"});function Jo(e){for(var t=[];e;)t.unshift(e),e=e.parent;return t}function Ko(e,t){var n=e.path,a=e.query;void 0===a&&(a={});var i=e.hash;return void 0===i&&(i=""),(n||"/")+(t||Wo)(a)+i}function Zo(e,t,n){return t===Yo?e===t:!!t&&(e.path&&t.path?e.path.replace(Qo,"")===t.path.replace(Qo,"")&&(n||e.hash===t.hash&&eu(e.query,t.query)):!(!e.name||!t.name)&&e.name===t.name&&(n||e.hash===t.hash&&eu(e.query,t.query)&&eu(e.params,t.params)))}function eu(e,t){if(void 0===e&&(e={}),void 0===t&&(t={}),!e||!t)return e===t;var n=Object.keys(e).sort(),a=Object.keys(t).sort();return n.length===a.length&&n.every((function(n,i){var s=e[n];if(a[i]!==n)return!1;var r=t[n];return null==s||null==r?s===r:"object"==typeof s&&"object"==typeof r?eu(s,r):String(s)===String(r)}))}function tu(e){for(var t=0;t<e.matched.length;t++){var n=e.matched[t];for(var a in n.instances){var i=n.instances[a],s=n.enteredCbs[a];if(i&&s){delete n.enteredCbs[a];for(var r=0;r<s.length;r++)i._isBeingDestroyed||s[r](i)}}}}var nu={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(e,t){var n=t.props,a=t.children,i=t.parent,s=t.data;s.routerView=!0;for(var r=i.$createElement,o=n.name,u=i.$route,d=i._routerViewCache||(i._routerViewCache={}),p=0,y=!1;i&&i._routerRoot!==i;){var l=i.$vnode?i.$vnode.data:{};l.routerView&&p++,l.keepAlive&&i._directInactive&&i._inactive&&(y=!0),i=i.$parent}if(s.routerViewDepth=p,y){var m=d[o],c=m&&m.component;return c?(m.configProps&&au(c,s,m.route,m.configProps),r(c,s,a)):r()}var f=u.matched[p],T=f&&f.components[o];if(!f||!T)return d[o]=null,r();d[o]={component:T},s.registerRouteInstance=function(e,t){var n=f.instances[o];(t&&n!==e||!t&&n===e)&&(f.instances[o]=t)},(s.hook||(s.hook={})).prepatch=function(e,t){f.instances[o]=t.componentInstance},s.hook.init=function(e){e.data.keepAlive&&e.componentInstance&&e.componentInstance!==f.instances[o]&&(f.instances[o]=e.componentInstance),tu(u)};var b=f.props&&f.props[o];return b&&(Bo(d[o],{route:u,configProps:b}),au(T,s,u,b)),r(T,s,a)}};function au(e,t,n,a){var i=t.props=function(e,t){switch(typeof t){case"undefined":return;case"object":return t;case"function":return t(e);case"boolean":return t?e.params:void 0}}(n,a);if(i){i=t.props=Bo({},i);var s=t.attrs=t.attrs||{};for(var r in i)e.props&&r in e.props||(s[r]=i[r],delete i[r])}}function iu(e,t,n){var a=e.charAt(0);if("/"===a)return e;if("?"===a||"#"===a)return t+e;var i=t.split("/");n&&i[i.length-1]||i.pop();for(var s=e.replace(/^\//,"").split("/"),r=0;r<s.length;r++){var o=s[r];".."===o?i.pop():"."!==o&&i.push(o)}return""!==i[0]&&i.unshift(""),i.join("/")}function su(e){return e.replace(/\/(?:\s*\/)+/g,"/")}var ru=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)},ou=function e(t,n,a){return ru(n)||(a=n||a,n=[]),a=a||{},t instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var a=0;a<n.length;a++)t.push({name:a,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return hu(e,t)}(t,n):ru(t)?function(t,n,a){for(var i=[],s=0;s<t.length;s++)i.push(e(t[s],n,a).source);return hu(new RegExp("(?:"+i.join("|")+")",gu(a)),n)}(t,n,a):function(e,t,n){return vu(lu(e,n),t,n)}(t,n,a)},uu=lu,du=fu,pu=vu,yu=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function lu(e,t){for(var n,a=[],i=0,s=0,r="",o=t&&t.delimiter||"/";null!=(n=yu.exec(e));){var u=n[0],d=n[1],p=n.index;if(r+=e.slice(s,p),s=p+u.length,d)r+=d[1];else{var y=e[s],l=n[2],m=n[3],c=n[4],f=n[5],T=n[6],b=n[7];r&&(a.push(r),r="");var h=null!=l&&null!=y&&y!==l,g="+"===T||"*"===T,v="?"===T||"*"===T,w=n[2]||o,M=c||f;a.push({name:m||i++,prefix:l||"",delimiter:w,optional:v,repeat:g,partial:h,asterisk:!!b,pattern:M?bu(M):b?".*":"[^"+Tu(w)+"]+?"})}}return s<e.length&&(r+=e.substr(s)),r&&a.push(r),a}function mu(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function cu(e){return encodeURI(e).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function fu(e,t){for(var n=new Array(e.length),a=0;a<e.length;a++)"object"==typeof e[a]&&(n[a]=new RegExp("^(?:"+e[a].pattern+")$",gu(t)));return function(t,a){for(var i="",s=t||{},r=(a||{}).pretty?mu:encodeURIComponent,o=0;o<e.length;o++){var u=e[o];if("string"!=typeof u){var d,p=s[u.name];if(null==p){if(u.optional){u.partial&&(i+=u.prefix);continue}throw new TypeError('Expected "'+u.name+'" to be defined')}if(ru(p)){if(!u.repeat)throw new TypeError('Expected "'+u.name+'" to not repeat, but received `'+JSON.stringify(p)+"`");if(0===p.length){if(u.optional)continue;throw new TypeError('Expected "'+u.name+'" to not be empty')}for(var y=0;y<p.length;y++){if(d=r(p[y]),!n[o].test(d))throw new TypeError('Expected all "'+u.name+'" to match "'+u.pattern+'", but received `'+JSON.stringify(d)+"`");i+=(0===y?u.prefix:u.delimiter)+d}}else{if(d=u.asterisk?cu(p):r(p),!n[o].test(d))throw new TypeError('Expected "'+u.name+'" to match "'+u.pattern+'", but received "'+d+'"');i+=u.prefix+d}}else i+=u}return i}}function Tu(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function bu(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function hu(e,t){return e.keys=t,e}function gu(e){return e&&e.sensitive?"":"i"}function vu(e,t,n){ru(t)||(n=t||n,t=[]);for(var a=(n=n||{}).strict,i=!1!==n.end,s="",r=0;r<e.length;r++){var o=e[r];if("string"==typeof o)s+=Tu(o);else{var u=Tu(o.prefix),d="(?:"+o.pattern+")";t.push(o),o.repeat&&(d+="(?:"+u+d+")*"),s+=d=o.optional?o.partial?u+"("+d+")?":"(?:"+u+"("+d+"))?":u+"("+d+")"}}var p=Tu(n.delimiter||"/"),y=s.slice(-p.length)===p;return a||(s=(y?s.slice(0,-p.length):s)+"(?:"+p+"(?=$))?"),s+=i?"$":a&&y?"":"(?="+p+"|$)",hu(new RegExp("^"+s,gu(n)),t)}ou.parse=uu,ou.compile=function(e,t){return fu(lu(e,t),t)},ou.tokensToFunction=du,ou.tokensToRegExp=pu;var wu=Object.create(null);function Mu(e,t,n){t=t||{};try{var a=wu[e]||(wu[e]=ou.compile(e));return"string"==typeof t.pathMatch&&(t[0]=t.pathMatch),a(t,{pretty:!0})}catch(e){return""}finally{delete t[0]}}function _u(e,t,n,a){var i="string"==typeof e?{path:e}:e;if(i._normalized)return i;if(i.name){var s=(i=Bo({},e)).params;return s&&"object"==typeof s&&(i.params=Bo({},s)),i}if(!i.path&&i.params&&t){(i=Bo({},i))._normalized=!0;var r=Bo(Bo({},t.params),i.params);if(t.name)i.name=t.name,i.params=r;else if(t.matched.length){var o=t.matched[t.matched.length-1].path;i.path=Mu(o,r,t.path)}return i}var u=function(e){var t="",n="",a=e.indexOf("#");a>=0&&(t=e.slice(a),e=e.slice(0,a));var i=e.indexOf("?");return i>=0&&(n=e.slice(i+1),e=e.slice(0,i)),{path:e,query:n,hash:t}}(i.path||""),d=t&&t.path||"/",p=u.path?iu(u.path,d,n||i.append):d,y=function(e,t,n){void 0===t&&(t={});var a,i=n||Ho;try{a=i(e||"")}catch(e){a={}}for(var s in t){var r=t[s];a[s]=Array.isArray(r)?r.map(jo):jo(r)}return a}(u.query,i.query,a&&a.options.parseQuery),l=i.hash||u.hash;return l&&"#"!==l.charAt(0)&&(l="#"+l),{_normalized:!0,path:p,query:y,hash:l}}var Au,Cu=function(){},ku={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(e){var t=this,n=this.$router,a=this.$route,i=n.resolve(this.to,a,this.append),s=i.location,r=i.route,o=i.href,u={},d=n.options.linkActiveClass,p=n.options.linkExactActiveClass,y=null==d?"router-link-active":d,l=null==p?"router-link-exact-active":p,m=null==this.activeClass?y:this.activeClass,c=null==this.exactActiveClass?l:this.exactActiveClass,f=r.redirectedFrom?Go(null,_u(r.redirectedFrom),null,n):r;u[c]=Zo(a,f,this.exactPath),u[m]=this.exact||this.exactPath?u[c]:function(e,t){return 0===e.path.replace(Qo,"/").indexOf(t.path.replace(Qo,"/"))&&(!t.hash||e.hash===t.hash)&&function(e,t){for(var n in t)if(!(n in e))return!1;return!0}(e.query,t.query)}(a,f);var T=u[c]?this.ariaCurrentValue:null,b=function(e){xu(e)&&(t.replace?n.replace(s,Cu):n.push(s,Cu))},h={click:xu};Array.isArray(this.event)?this.event.forEach((function(e){h[e]=b})):h[this.event]=b;var g={class:u},v=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:o,route:r,navigate:b,isActive:u[m],isExactActive:u[c]});if(v){if(1===v.length)return v[0];if(v.length>1||!v.length)return 0===v.length?e():e("span",{},v)}if("a"===this.tag)g.on=h,g.attrs={href:o,"aria-current":T};else{var w=Iu(this.$slots.default);if(w){w.isStatic=!1;var M=w.data=Bo({},w.data);for(var _ in M.on=M.on||{},M.on){var A=M.on[_];_ in h&&(M.on[_]=Array.isArray(A)?A:[A])}for(var C in h)C in M.on?M.on[C].push(h[C]):M.on[C]=b;var k=w.data.attrs=Bo({},w.data.attrs);k.href=o,k["aria-current"]=T}else g.on=h}return e(this.tag,g,this.$slots.default)}};function xu(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey||e.defaultPrevented||void 0!==e.button&&0!==e.button)){if(e.currentTarget&&e.currentTarget.getAttribute){var t=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return e.preventDefault&&e.preventDefault(),!0}}function Iu(e){if(e)for(var t,n=0;n<e.length;n++){if("a"===(t=e[n]).tag)return t;if(t.children&&(t=Iu(t.children)))return t}}var Pu="undefined"!=typeof window;function Ru(e,t,n,a,i){var s=t||[],r=n||Object.create(null),o=a||Object.create(null);e.forEach((function(e){Su(s,r,o,e,i)}));for(var u=0,d=s.length;u<d;u++)"*"===s[u]&&(s.push(s.splice(u,1)[0]),d--,u--);return{pathList:s,pathMap:r,nameMap:o}}function Su(e,t,n,a,i,s){var r=a.path,o=a.name,u=a.pathToRegexpOptions||{},d=function(e,t,n){return n||(e=e.replace(/\/$/,"")),"/"===e[0]||null==t?e:su(t.path+"/"+e)}(r,i,u.strict);"boolean"==typeof a.caseSensitive&&(u.sensitive=a.caseSensitive);var p={path:d,regex:Du(d,u),components:a.components||{default:a.component},alias:a.alias?"string"==typeof a.alias?[a.alias]:a.alias:[],instances:{},enteredCbs:{},name:o,parent:i,matchAs:s,redirect:a.redirect,beforeEnter:a.beforeEnter,meta:a.meta||{},props:null==a.props?{}:a.components?a.props:{default:a.props}};if(a.children&&a.children.forEach((function(a){var i=s?su(s+"/"+a.path):void 0;Su(e,t,n,a,p,i)})),t[p.path]||(e.push(p.path),t[p.path]=p),void 0!==a.alias)for(var y=Array.isArray(a.alias)?a.alias:[a.alias],l=0;l<y.length;++l){var m={path:y[l],children:a.children};Su(e,t,n,m,i,p.path||"/")}o&&(n[o]||(n[o]=p))}function Du(e,t){return ou(e,[],t)}function Ou(e,t){var n=Ru(e),a=n.pathList,i=n.pathMap,s=n.nameMap;function r(e,n,r){var u=_u(e,n,!1,t),d=u.name;if(d){var p=s[d];if(!p)return o(null,u);var y=p.regex.keys.filter((function(e){return!e.optional})).map((function(e){return e.name}));if("object"!=typeof u.params&&(u.params={}),n&&"object"==typeof n.params)for(var l in n.params)!(l in u.params)&&y.indexOf(l)>-1&&(u.params[l]=n.params[l]);return u.path=Mu(p.path,u.params),o(p,u,r)}if(u.path){u.params={};for(var m=0;m<a.length;m++){var c=a[m],f=i[c];if(Lu(f.regex,u.path,u.params))return o(f,u,r)}}return o(null,u)}function o(e,n,a){return e&&e.redirect?function(e,n){var a=e.redirect,i="function"==typeof a?a(Go(e,n,null,t)):a;if("string"==typeof i&&(i={path:i}),!i||"object"!=typeof i)return o(null,n);var u=i,d=u.name,p=u.path,y=n.query,l=n.hash,m=n.params;if(y=u.hasOwnProperty("query")?u.query:y,l=u.hasOwnProperty("hash")?u.hash:l,m=u.hasOwnProperty("params")?u.params:m,d)return s[d],r({_normalized:!0,name:d,query:y,hash:l,params:m},void 0,n);if(p){var c=function(e,t){return iu(e,t.parent?t.parent.path:"/",!0)}(p,e);return r({_normalized:!0,path:Mu(c,m),query:y,hash:l},void 0,n)}return o(null,n)}(e,a||n):e&&e.matchAs?function(e,t,n){var a=r({_normalized:!0,path:Mu(n,t.params)});if(a){var i=a.matched,s=i[i.length-1];return t.params=a.params,o(s,t)}return o(null,t)}(0,n,e.matchAs):Go(e,n,a,t)}return{match:r,addRoute:function(e,t){var n="object"!=typeof e?s[e]:void 0;Ru([t||e],a,i,s,n),n&&n.alias.length&&Ru(n.alias.map((function(e){return{path:e,children:[t]}})),a,i,s,n)},getRoutes:function(){return a.map((function(e){return i[e]}))},addRoutes:function(e){Ru(e,a,i,s)}}}function Lu(e,t,n){var a=t.match(e);if(!a)return!1;if(!n)return!0;for(var i=1,s=a.length;i<s;++i){var r=e.keys[i-1];r&&(n[r.name||"pathMatch"]="string"==typeof a[i]?zo(a[i]):a[i])}return!0}var Eu=Pu&&window.performance&&window.performance.now?window.performance:Date;function Uu(){return Eu.now().toFixed(3)}var Vu=Uu();function Bu(){return Vu}function Nu(e){return Vu=e}var Fu=Object.create(null);function qu(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var e=window.location.protocol+"//"+window.location.host,t=window.location.href.replace(e,""),n=Bo({},window.history.state);return n.key=Bu(),window.history.replaceState(n,"",t),window.addEventListener("popstate",ju),function(){window.removeEventListener("popstate",ju)}}function $u(e,t,n,a){if(e.app){var i=e.options.scrollBehavior;i&&e.app.$nextTick((function(){var s=function(){var e=Bu();if(e)return Fu[e]}(),r=i.call(e,t,n,a?s:null);r&&("function"==typeof r.then?r.then((function(e){Xu(e,s)})).catch((function(e){})):Xu(r,s))}))}}function zu(){var e=Bu();e&&(Fu[e]={x:window.pageXOffset,y:window.pageYOffset})}function ju(e){zu(),e.state&&e.state.key&&Nu(e.state.key)}function Hu(e){return Qu(e.x)||Qu(e.y)}function Wu(e){return{x:Qu(e.x)?e.x:window.pageXOffset,y:Qu(e.y)?e.y:window.pageYOffset}}function Qu(e){return"number"==typeof e}var Gu=/^#\d/;function Xu(e,t){var n,a="object"==typeof e;if(a&&"string"==typeof e.selector){var i=Gu.test(e.selector)?document.getElementById(e.selector.slice(1)):document.querySelector(e.selector);if(i){var s=e.offset&&"object"==typeof e.offset?e.offset:{};t=function(e,t){var n=document.documentElement.getBoundingClientRect(),a=e.getBoundingClientRect();return{x:a.left-n.left-t.x,y:a.top-n.top-t.y}}(i,s={x:Qu((n=s).x)?n.x:0,y:Qu(n.y)?n.y:0})}else Hu(e)&&(t=Wu(e))}else a&&Hu(e)&&(t=Wu(e));t&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:t.x,top:t.y,behavior:e.behavior}):window.scrollTo(t.x,t.y))}var Yu,Ju=Pu&&(-1===(Yu=window.navigator.userAgent).indexOf("Android 2.")&&-1===Yu.indexOf("Android 4.0")||-1===Yu.indexOf("Mobile Safari")||-1!==Yu.indexOf("Chrome")||-1!==Yu.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState;function Ku(e,t){zu();var n=window.history;try{if(t){var a=Bo({},n.state);a.key=Bu(),n.replaceState(a,"",e)}else n.pushState({key:Nu(Uu())},"",e)}catch(n){window.location[t?"replace":"assign"](e)}}function Zu(e){Ku(e,!0)}var ed={redirected:2,aborted:4,cancelled:8,duplicated:16};function td(e,t){return nd(e,t,ed.cancelled,'Navigation cancelled from "'+e.fullPath+'" to "'+t.fullPath+'" with a new navigation.')}function nd(e,t,n,a){var i=new Error(a);return i._isRouter=!0,i.from=e,i.to=t,i.type=n,i}var ad=["params","query","hash"];function id(e){return Object.prototype.toString.call(e).indexOf("Error")>-1}function sd(e,t){return id(e)&&e._isRouter&&(null==t||e.type===t)}function rd(e,t,n){var a=function(i){i>=e.length?n():e[i]?t(e[i],(function(){a(i+1)})):a(i+1)};a(0)}function od(e,t){return ud(e.map((function(e){return Object.keys(e.components).map((function(n){return t(e.components[n],e.instances[n],e,n)}))})))}function ud(e){return Array.prototype.concat.apply([],e)}var dd="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function pd(e){var t=!1;return function(){for(var n=[],a=arguments.length;a--;)n[a]=arguments[a];if(!t)return t=!0,e.apply(this,n)}}var yd=function(e,t){this.router=e,this.base=function(e){if(!e)if(Pu){var t=document.querySelector("base");e=(e=t&&t.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else e="/";return"/"!==e.charAt(0)&&(e="/"+e),e.replace(/\/$/,"")}(t),this.current=Yo,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function ld(e,t,n,a){var i=od(e,(function(e,a,i,s){var r=function(e,t){return"function"!=typeof e&&(e=Au.extend(e)),e.options[t]}(e,t);if(r)return Array.isArray(r)?r.map((function(e){return n(e,a,i,s)})):n(r,a,i,s)}));return ud(a?i.reverse():i)}function md(e,t){if(t)return function(){return e.apply(t,arguments)}}yd.prototype.listen=function(e){this.cb=e},yd.prototype.onReady=function(e,t){this.ready?e():(this.readyCbs.push(e),t&&this.readyErrorCbs.push(t))},yd.prototype.onError=function(e){this.errorCbs.push(e)},yd.prototype.transitionTo=function(e,t,n){var a,i=this;try{a=this.router.match(e,this.current)}catch(e){throw this.errorCbs.forEach((function(t){t(e)})),e}var s=this.current;this.confirmTransition(a,(function(){i.updateRoute(a),t&&t(a),i.ensureURL(),i.router.afterHooks.forEach((function(e){e&&e(a,s)})),i.ready||(i.ready=!0,i.readyCbs.forEach((function(e){e(a)})))}),(function(e){n&&n(e),e&&!i.ready&&(sd(e,ed.redirected)&&s===Yo||(i.ready=!0,i.readyErrorCbs.forEach((function(t){t(e)}))))}))},yd.prototype.confirmTransition=function(e,t,n){var a=this,i=this.current;this.pending=e;var s,r,o=function(e){!sd(e)&&id(e)&&(a.errorCbs.length?a.errorCbs.forEach((function(t){t(e)})):console.error(e)),n&&n(e)},u=e.matched.length-1,d=i.matched.length-1;if(Zo(e,i)&&u===d&&e.matched[u]===i.matched[d])return this.ensureURL(),e.hash&&$u(this.router,i,e,!1),o(((r=nd(s=i,e,ed.duplicated,'Avoided redundant navigation to current location: "'+s.fullPath+'".')).name="NavigationDuplicated",r));var p,y=function(e,t){var n,a=Math.max(e.length,t.length);for(n=0;n<a&&e[n]===t[n];n++);return{updated:t.slice(0,n),activated:t.slice(n),deactivated:e.slice(n)}}(this.current.matched,e.matched),l=y.updated,m=y.deactivated,c=y.activated,f=[].concat(function(e){return ld(e,"beforeRouteLeave",md,!0)}(m),this.router.beforeHooks,function(e){return ld(e,"beforeRouteUpdate",md)}(l),c.map((function(e){return e.beforeEnter})),(p=c,function(e,t,n){var a=!1,i=0,s=null;od(p,(function(e,t,r,o){if("function"==typeof e&&void 0===e.cid){a=!0,i++;var u,d=pd((function(t){var a;((a=t).__esModule||dd&&"Module"===a[Symbol.toStringTag])&&(t=t.default),e.resolved="function"==typeof t?t:Au.extend(t),r.components[o]=t,--i<=0&&n()})),p=pd((function(e){var t="Failed to resolve async component "+o+": "+e;s||(s=id(e)?e:new Error(t),n(s))}));try{u=e(d,p)}catch(e){p(e)}if(u)if("function"==typeof u.then)u.then(d,p);else{var y=u.component;y&&"function"==typeof y.then&&y.then(d,p)}}})),a||n()})),T=function(t,n){if(a.pending!==e)return o(td(i,e));try{t(e,i,(function(t){!1===t?(a.ensureURL(!0),o(function(e,t){return nd(e,t,ed.aborted,'Navigation aborted from "'+e.fullPath+'" to "'+t.fullPath+'" via a navigation guard.')}(i,e))):id(t)?(a.ensureURL(!0),o(t)):"string"==typeof t||"object"==typeof t&&("string"==typeof t.path||"string"==typeof t.name)?(o(function(e,t){return nd(e,t,ed.redirected,'Redirected when going from "'+e.fullPath+'" to "'+function(e){if("string"==typeof e)return e;if("path"in e)return e.path;var t={};return ad.forEach((function(n){n in e&&(t[n]=e[n])})),JSON.stringify(t,null,2)}(t)+'" via a navigation guard.')}(i,e)),"object"==typeof t&&t.replace?a.replace(t):a.push(t)):n(t)}))}catch(e){o(e)}};rd(f,T,(function(){var n=function(e){return ld(e,"beforeRouteEnter",(function(e,t,n,a){return function(e,t,n){return function(a,i,s){return e(a,i,(function(e){"function"==typeof e&&(t.enteredCbs[n]||(t.enteredCbs[n]=[]),t.enteredCbs[n].push(e)),s(e)}))}}(e,n,a)}))}(c);rd(n.concat(a.router.resolveHooks),T,(function(){if(a.pending!==e)return o(td(i,e));a.pending=null,t(e),a.router.app&&a.router.app.$nextTick((function(){tu(e)}))}))}))},yd.prototype.updateRoute=function(e){this.current=e,this.cb&&this.cb(e)},yd.prototype.setupListeners=function(){},yd.prototype.teardown=function(){this.listeners.forEach((function(e){e()})),this.listeners=[],this.current=Yo,this.pending=null};var cd=function(e){function t(t,n){e.call(this,t,n),this._startLocation=fd(this.base)}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router,n=t.options.scrollBehavior,a=Ju&&n;a&&this.listeners.push(qu());var i=function(){var n=e.current,i=fd(e.base);e.current===Yo&&i===e._startLocation||e.transitionTo(i,(function(e){a&&$u(t,e,n,!0)}))};window.addEventListener("popstate",i),this.listeners.push((function(){window.removeEventListener("popstate",i)}))}},t.prototype.go=function(e){window.history.go(e)},t.prototype.push=function(e,t,n){var a=this,i=this.current;this.transitionTo(e,(function(e){Ku(su(a.base+e.fullPath)),$u(a.router,e,i,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var a=this,i=this.current;this.transitionTo(e,(function(e){Zu(su(a.base+e.fullPath)),$u(a.router,e,i,!1),t&&t(e)}),n)},t.prototype.ensureURL=function(e){if(fd(this.base)!==this.current.fullPath){var t=su(this.base+this.current.fullPath);e?Ku(t):Zu(t)}},t.prototype.getCurrentLocation=function(){return fd(this.base)},t}(yd);function fd(e){var t=window.location.pathname,n=t.toLowerCase(),a=e.toLowerCase();return!e||n!==a&&0!==n.indexOf(su(a+"/"))||(t=t.slice(e.length)),(t||"/")+window.location.search+window.location.hash}var Td=function(e){function t(t,n,a){e.call(this,t,n),a&&function(e){var t=fd(e);if(!/^\/#/.test(t))return window.location.replace(su(e+"/#"+t)),!0}(this.base)||bd()}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router.options.scrollBehavior,n=Ju&&t;n&&this.listeners.push(qu());var a=function(){var t=e.current;bd()&&e.transitionTo(hd(),(function(a){n&&$u(e.router,a,t,!0),Ju||wd(a.fullPath)}))},i=Ju?"popstate":"hashchange";window.addEventListener(i,a),this.listeners.push((function(){window.removeEventListener(i,a)}))}},t.prototype.push=function(e,t,n){var a=this,i=this.current;this.transitionTo(e,(function(e){vd(e.fullPath),$u(a.router,e,i,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var a=this,i=this.current;this.transitionTo(e,(function(e){wd(e.fullPath),$u(a.router,e,i,!1),t&&t(e)}),n)},t.prototype.go=function(e){window.history.go(e)},t.prototype.ensureURL=function(e){var t=this.current.fullPath;hd()!==t&&(e?vd(t):wd(t))},t.prototype.getCurrentLocation=function(){return hd()},t}(yd);function bd(){var e=hd();return"/"===e.charAt(0)||(wd("/"+e),!1)}function hd(){var e=window.location.href,t=e.indexOf("#");return t<0?"":e=e.slice(t+1)}function gd(e){var t=window.location.href,n=t.indexOf("#");return(n>=0?t.slice(0,n):t)+"#"+e}function vd(e){Ju?Ku(gd(e)):window.location.hash=e}function wd(e){Ju?Zu(gd(e)):window.location.replace(gd(e))}var Md=function(e){function t(t,n){e.call(this,t,n),this.stack=[],this.index=-1}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.push=function(e,t,n){var a=this;this.transitionTo(e,(function(e){a.stack=a.stack.slice(0,a.index+1).concat(e),a.index++,t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var a=this;this.transitionTo(e,(function(e){a.stack=a.stack.slice(0,a.index).concat(e),t&&t(e)}),n)},t.prototype.go=function(e){var t=this,n=this.index+e;if(!(n<0||n>=this.stack.length)){var a=this.stack[n];this.confirmTransition(a,(function(){var e=t.current;t.index=n,t.updateRoute(a),t.router.afterHooks.forEach((function(t){t&&t(a,e)}))}),(function(e){sd(e,ed.duplicated)&&(t.index=n)}))}},t.prototype.getCurrentLocation=function(){var e=this.stack[this.stack.length-1];return e?e.fullPath:"/"},t.prototype.ensureURL=function(){},t}(yd),_d=function(e){void 0===e&&(e={}),this.app=null,this.apps=[],this.options=e,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Ou(e.routes||[],this);var t=e.mode||"hash";switch(this.fallback="history"===t&&!Ju&&!1!==e.fallback,this.fallback&&(t="hash"),Pu||(t="abstract"),this.mode=t,t){case"history":this.history=new cd(this,e.base);break;case"hash":this.history=new Td(this,e.base,this.fallback);break;case"abstract":this.history=new Md(this,e.base)}},Ad={currentRoute:{configurable:!0}};_d.prototype.match=function(e,t,n){return this.matcher.match(e,t,n)},Ad.currentRoute.get=function(){return this.history&&this.history.current},_d.prototype.init=function(e){var t=this;if(this.apps.push(e),e.$once("hook:destroyed",(function(){var n=t.apps.indexOf(e);n>-1&&t.apps.splice(n,1),t.app===e&&(t.app=t.apps[0]||null),t.app||t.history.teardown()})),!this.app){this.app=e;var n=this.history;if(n instanceof cd||n instanceof Td){var a=function(e){n.setupListeners(),function(e){var a=n.current,i=t.options.scrollBehavior;Ju&&i&&"fullPath"in e&&$u(t,e,a,!1)}(e)};n.transitionTo(n.getCurrentLocation(),a,a)}n.listen((function(e){t.apps.forEach((function(t){t._route=e}))}))}},_d.prototype.beforeEach=function(e){return kd(this.beforeHooks,e)},_d.prototype.beforeResolve=function(e){return kd(this.resolveHooks,e)},_d.prototype.afterEach=function(e){return kd(this.afterHooks,e)},_d.prototype.onReady=function(e,t){this.history.onReady(e,t)},_d.prototype.onError=function(e){this.history.onError(e)},_d.prototype.push=function(e,t,n){var a=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){a.history.push(e,t,n)}));this.history.push(e,t,n)},_d.prototype.replace=function(e,t,n){var a=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){a.history.replace(e,t,n)}));this.history.replace(e,t,n)},_d.prototype.go=function(e){this.history.go(e)},_d.prototype.back=function(){this.go(-1)},_d.prototype.forward=function(){this.go(1)},_d.prototype.getMatchedComponents=function(e){var t=e?e.matched?e:this.resolve(e).route:this.currentRoute;return t?[].concat.apply([],t.matched.map((function(e){return Object.keys(e.components).map((function(t){return e.components[t]}))}))):[]},_d.prototype.resolve=function(e,t,n){var a=_u(e,t=t||this.history.current,n,this),i=this.match(a,t),s=i.redirectedFrom||i.fullPath,r=function(e,t,n){var a="hash"===n?"#"+t:t;return e?su(e+"/"+a):a}(this.history.base,s,this.mode);return{location:a,route:i,href:r,normalizedTo:a,resolved:i}},_d.prototype.getRoutes=function(){return this.matcher.getRoutes()},_d.prototype.addRoute=function(e,t){this.matcher.addRoute(e,t),this.history.current!==Yo&&this.history.transitionTo(this.history.getCurrentLocation())},_d.prototype.addRoutes=function(e){this.matcher.addRoutes(e),this.history.current!==Yo&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(_d.prototype,Ad);var Cd=_d;function kd(e,t){return e.push(t),function(){var n=e.indexOf(t);n>-1&&e.splice(n,1)}}_d.install=function e(t){if(!e.installed||Au!==t){e.installed=!0,Au=t;var n=function(e){return void 0!==e},a=function(e,t){var a=e.$options._parentVnode;n(a)&&n(a=a.data)&&n(a=a.registerRouteInstance)&&a(e,t)};t.mixin({beforeCreate:function(){n(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),t.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,a(this,this)},destroyed:function(){a(this)}}),Object.defineProperty(t.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(t.prototype,"$route",{get:function(){return this._routerRoot._route}}),t.component("RouterView",nu),t.component("RouterLink",ku);var i=t.config.optionMergeStrategies;i.beforeRouteEnter=i.beforeRouteLeave=i.beforeRouteUpdate=i.created}},_d.version="3.6.5",_d.isNavigationFailure=sd,_d.NavigationFailureType=ed,_d.START_LOCATION=Yo,Pu&&window.Vue&&window.Vue.use(_d);var xd=function(){var e=this._self._c;return e("div",{staticClass:"min-h-screen bg-gray-100 px-4 pt-6"},[e("router-view")],1)};function Id(e,t,n,a,i,s,r,o){var u,d="function"==typeof e?e.options:e;if(t&&(d.render=t,d.staticRenderFns=n,d._compiled=!0),a&&(d.functional=!0),s&&(d._scopeId="data-v-"+s),r?(u=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),i&&i.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(r)},d._ssrRegister=u):i&&(u=o?function(){i.call(this,(d.functional?this.parent:this).$root.$options.shadowRoot)}:i),u)if(d.functional){d._injectStyles=u;var p=d.render;d.render=function(e,t){return u.call(t),p(e,t)}}else{var y=d.beforeCreate;d.beforeCreate=y?[].concat(y,u):[u]}return{exports:e,options:d}}xd._withStripped=!0,n(884);const Pd=Id({},xd,[],!1,null,null,null).exports;var Rd=function(){var e=this,t=e._self._c;return t("div",{staticClass:"w-full space-y-10 md:max-w-screen-sm lg:max-w-screen-md mx-auto"},[t("HeaderBar"),e._v(" "),t("div",{staticClass:"pb-32"},[t("div",{staticClass:"space-y-4"},[t("span",{staticClass:"text-lg"},[e._v("\n        "+e._s(e.json.source)+"\n      ")]),e._v(" "),t("h1",{staticClass:"text-xl"},[e._v("\n        "+e._s(e.json.name)+"\n      ")]),e._v(" "),t("h2",{staticClass:"text-lg"},[e._v("\n        "+e._s(e.json.title)+"\n      ")]),e._v(" "),t("h2",{staticClass:"text-lg"},[e._v("\n        "+e._s(e.json.author)+"\n      ")]),e._v(" "),t("p",[e._v(e._s(e.json.notice))]),e._v(" "),t("p",[e._v(e._s(e.json.details))])]),e._v(" "),t("div",{staticClass:"mt-8"},[e.json.hasOwnProperty("constructor")?t("Member",{attrs:{json:e.json.constructor}}):e._e()],1),e._v(" "),t("div",{staticClass:"mt-8"},[e.json.receive?t("Member",{attrs:{json:e.json.receive}}):e._e()],1),e._v(" "),t("div",{staticClass:"mt-8"},[e.json.fallback?t("Member",{attrs:{json:e.json.fallback}}):e._e()],1),e._v(" "),e.json.events?t("MemberSet",{attrs:{title:"Events",json:e.json.events}}):e._e(),e._v(" "),e.json.stateVariables?t("MemberSet",{attrs:{title:"State Variables",json:e.json.stateVariables}}):e._e(),e._v(" "),e.json.methods?t("MemberSet",{attrs:{title:"Methods",json:e.json.methods}}):e._e()],1),e._v(" "),t("FooterBar")],1)};Rd._withStripped=!0;var Sd=function(){var e=this,t=e._self._c;return t("div",{staticClass:"bg-gray-100 fixed bottom-0 right-0 w-full border-t border-dashed border-gray-300"},[t("div",{staticClass:"w-full text-center py-2 md:max-w-screen-sm lg:max-w-screen-md mx-auto"},[t("button",{staticClass:"py-1 px-2 text-gray-500",on:{click:function(t){return e.openLink(e.repository)}}},[e._v("\n      built with "+e._s(e.name)+"\n    ")])])])};Sd._withStripped=!0;const Dd=JSON.parse('{"UU":"hardhat-docgen","Jk":"https://github.com/ItsNickBarry/hardhat-docgen"}'),Od=Id({data:function(){return{repository:Dd.Jk,name:Dd.UU}},methods:{openLink(e){window.open(e,"_blank")}}},Sd,[],!1,null,null,null).exports;var Ld=function(){var e=this._self._c;return e("div",{staticClass:"w-full border-b border-dashed py-2 border-gray-300"},[e("router-link",{staticClass:"py-2 text-gray-500",attrs:{to:"/"}},[this._v("\n    <- Go back\n  ")])],1)};Ld._withStripped=!0;const Ed=Id({},Ld,[],!1,null,null,null).exports;var Ud=function(){var e=this,t=e._self._c;return t("div",{staticClass:"border-2 border-gray-400 border-dashed w-full p-2"},[t("h3",{staticClass:"text-lg pb-2 mb-2 border-b-2 border-gray-400 border-dashed"},[e._v("\n    "+e._s(e.name)+" "+e._s(e.keywords)+" "+e._s(e.inputSignature)+"\n  ")]),e._v(" "),t("div",{staticClass:"space-y-3"},[t("p",[e._v(e._s(e.json.notice))]),e._v(" "),t("p",[e._v(e._s(e.json.details))]),e._v(" "),t("MemberSection",{attrs:{name:"Parameters",items:e.inputs}}),e._v(" "),t("MemberSection",{attrs:{name:"Return Values",items:e.outputs}})],1)])};Ud._withStripped=!0;var Vd=function(){var e=this,t=e._self._c;return e.items.length>0?t("ul",[t("h4",{staticClass:"text-lg"},[e._v("\n    "+e._s(e.name)+"\n  ")]),e._v(" "),e._l(e.items,(function(n,a){return t("li",{key:a},[t("span",{staticClass:"bg-gray-300"},[e._v(e._s(n.type))]),e._v(" "),t("b",[e._v(e._s(n.name||`_${a}`))]),n.desc?t("span",[e._v(": "),t("i",[e._v(e._s(n.desc))])]):e._e()])}))],2):e._e()};Vd._withStripped=!0;const Bd={components:{MemberSection:Id({props:{name:{type:String,default:""},items:{type:Array,default:()=>new Array}}},Vd,[],!1,null,null,null).exports},props:{json:{type:Object,default:()=>new Object}},computed:{name:function(){return this.json.name||this.json.type},keywords:function(){let e=[];return this.json.stateMutability&&e.push(this.json.stateMutability),"true"===this.json.anonymous&&e.push("anonymous"),e.join(" ")},params:function(){return this.json.params||{}},returns:function(){return this.json.returns||{}},inputs:function(){return(this.json.inputs||[]).map((e=>({...e,desc:this.params[e.name]})))},inputSignature:function(){return`(${this.inputs.map((e=>e.type)).join(",")})`},outputs:function(){return(this.json.outputs||[]).map(((e,t)=>({...e,desc:this.returns[e.name||`_${t}`]})))},outputSignature:function(){return`(${this.outputs.map((e=>e.type)).join(",")})`}}},Nd=Id(Bd,Ud,[],!1,null,null,null).exports;var Fd=function(){var e=this,t=e._self._c;return t("div",{staticClass:"w-full mt-8"},[t("h2",{staticClass:"text-lg"},[e._v(e._s(e.title))]),e._v(" "),e._l(Object.keys(e.json),(function(n){return t("Member",{key:n,staticClass:"mt-3",attrs:{json:e.json[n]}})}))],2)};Fd._withStripped=!0;var qd=Id({components:{Member:Nd},props:{title:{type:String,default:""},json:{type:Object,default:()=>new Object}}},Fd,[],!1,null,null,null);const $d=Id({components:{Member:Nd,MemberSet:qd.exports,HeaderBar:Ed,FooterBar:Od},props:{json:{type:Object,default:()=>new Object}}},Rd,[],!1,null,null,null).exports;var zd=function(){var e=this,t=e._self._c;return t("div",{staticClass:"w-full space-y-10 md:max-w-screen-sm lg:max-w-screen-md mx-auto pb-32"},[t("Branch",{attrs:{json:e.trees,name:"Sources:"}}),e._v(" "),t("FooterBar",{staticClass:"mt-20"})],1)};zd._withStripped=!0;var jd=function(){var e=this,t=e._self._c;return t("div",[e._v("\n  "+e._s(e.name)+"\n  "),Array.isArray(e.json)?t("div",{staticClass:"pl-5"},e._l(e.json,(function(n,a){return t("div",{key:a},[t("router-link",{attrs:{to:`${n.source}:${n.name}`}},[e._v("\n        "+e._s(n.name)+"\n      ")])],1)})),0):t("div",{staticClass:"pl-5"},e._l(Object.keys(e.json),(function(n){return t("div",{key:n},[t("Branch",{attrs:{json:e.json[n],name:n}})],1)})),0)])};jd._withStripped=!0;var Hd=Id({name:"Branch",props:{name:{type:String,default:null},json:{type:[Object,Array],default:()=>new Object}}},jd,[],!1,null,null,null);const Wd=Id({components:{Branch:Hd.exports,FooterBar:Od},props:{json:{type:Object,default:()=>new Object}},computed:{trees:function(){let e={};for(let t in this.json)t.replace("/","//").split(/\/(?=[^\/])/).reduce(function(e,n){if(!n.includes(":"))return e[n]=e[n]||{},e[n];{let[a]=n.split(":");e[a]=e[a]||[],e[a].push(this.json[t])}}.bind(this),e);return e}}},zd,[],!1,null,null,null).exports;Xn.use(Cd);const Qd={"contracts/airdrop/MerkleDistributor.sol:MerkleDistributor":{source:"contracts/airdrop/MerkleDistributor.sol",name:"MerkleDistributor",constructor:{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"bytes32",name:"_merkleRoot",type:"bytes32"}],stateMutability:"nonpayable",type:"constructor"},events:{"Claimed(uint256,address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"_index",type:"uint256"},{indexed:!1,internalType:"address",name:"_account",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"}],name:"Claimed",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Withdrawn(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"_treasury",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"}],name:"Withdrawn",type:"event"}},methods:{"claim(uint256,address,uint256,bytes32[])":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"},{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"bytes32[]",name:"_merkleProof",type:"bytes32[]"}],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function"},"claimPeriodEndBlock()":{inputs:[],name:"claimPeriodEndBlock",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"isClaimed(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"isClaimed",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"merkleRoot()":{inputs:[],name:"merkleRoot",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"token()":{inputs:[],name:"token",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"amount of the transaction",_to:"address of the receiver",_token:"address of the ERC20 token"},notice:"Transfers an amount of an ERC20 from this contract to an address"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"withdrawUnclaimed()":{inputs:[],name:"withdrawUnclaimed",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/airdrop/interfaces/IMerkleDistributor.sol:IMerkleDistributor":{source:"contracts/airdrop/interfaces/IMerkleDistributor.sol",name:"IMerkleDistributor",events:{"Claimed(uint256,address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"_index",type:"uint256"},{indexed:!1,internalType:"address",name:"_account",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"}],name:"Claimed",type:"event"},"Withdrawn(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"_treasury",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"}],name:"Withdrawn",type:"event"}},methods:{"claim(uint256,address,uint256,bytes32[])":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"},{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"bytes32[]",name:"_merkleProof",type:"bytes32[]"}],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function"},"isClaimed(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"isClaimed",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"merkleRoot()":{inputs:[],name:"merkleRoot",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"token()":{inputs:[],name:"token",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function"},"withdrawUnclaimed()":{inputs:[],name:"withdrawUnclaimed",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/airdropV2/AirdropV2Implementation.sol:AirdropV2Implementation":{source:"contracts/airdropV2/AirdropV2Implementation.sol",name:"AirdropV2Implementation",events:{"Claimed(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"beneficiary",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Claimed",type:"event",params:{amount:"The amount of the claim",beneficiary:"The address of the beneficiary that has claimed"},notice:"Triggered after a claim"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Paused(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Paused",type:"event"},"Unpaused(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Unpaused",type:"event"}},methods:{"PACT()":{inputs:[],name:"PACT",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"beneficiaries(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"beneficiaries",outputs:[{internalType:"uint256",name:"claimedAmount",type:"uint256"},{internalType:"uint256",name:"lastClaimTime",type:"uint256"}],stateMutability:"view",type:"function"},"claim(address,bytes32[])":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"},{internalType:"bytes32[]",name:"_merkleProof",type:"bytes32[]"}],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function",params:{_beneficiaryAddress:"the address of the beneficiary",_merkleProof:"the proof vor validating the beneficiary"},notice:"Transfers PACTs to a beneficiary"},"cooldown()":{inputs:[],name:"cooldown",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function",notice:"Returns the current implementation version"},"initialize(address,uint256,uint256,uint256,uint256,bytes32)":{inputs:[{internalType:"address",name:"_PACTAddress",type:"address"},{internalType:"uint256",name:"_startTime",type:"uint256"},{internalType:"uint256",name:"_trancheAmount",type:"uint256"},{internalType:"uint256",name:"_totalAmount",type:"uint256"},{internalType:"uint256",name:"_cooldown",type:"uint256"},{internalType:"bytes32",name:"_merkleRoot",type:"bytes32"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",params:{_PACTAddress:"The address of the PACT token",_cooldown:"The minimum number of seconds between two claims",_merkleRoot:"The root of the merkle tree",_startTime:"The timestamp when the airdrop will be available",_totalAmount:"The total number of PACTs to be claimed by a beneficiary",_trancheAmount:"The number of PACTs to be claimed in one transaction"},notice:"Used to initialize a new Airdrop contract"},"merkleRoot()":{inputs:[],name:"merkleRoot",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"paused()":{inputs:[],name:"paused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns true if the contract is paused, and false otherwise."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"startTime()":{inputs:[],name:"startTime",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"totalAmount()":{inputs:[],name:"totalAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"trancheAmount()":{inputs:[],name:"trancheAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"updateCooldown(uint256)":{inputs:[{internalType:"uint256",name:"_newCooldown",type:"uint256"}],name:"updateCooldown",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newCooldown:"the new cooldown timestamp"},notice:"Updates the cooldown value"},"updateMerkleRoot(bytes32)":{inputs:[{internalType:"bytes32",name:"_newMerkleRoot",type:"bytes32"}],name:"updateMerkleRoot",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newMerkleRoot:"the new merkleRoot"},notice:"Updates the merkleRoot"},"updateStartTime(uint256)":{inputs:[{internalType:"uint256",name:"_newStartTime",type:"uint256"}],name:"updateStartTime",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newStartTime:"the new start timestamp"},notice:"Updates the startTime value"},"updateTotalAmount(uint256)":{inputs:[{internalType:"uint256",name:"_newTotalAmount",type:"uint256"}],name:"updateTotalAmount",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newTotalAmount:"the new totalAmount"},notice:"Updates the totalAmount value"},"updateTrancheAmount(uint256)":{inputs:[{internalType:"uint256",name:"_newTrancheAmount",type:"uint256"}],name:"updateTrancheAmount",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newTrancheAmount:"the new trancheAmount"},notice:"Updates the trancheAmount value"}}},"contracts/airdropV2/AirdropV2Proxy.sol:AirdropV2Proxy":{source:"contracts/airdropV2/AirdropV2Proxy.sol",name:"AirdropV2Proxy",constructor:{inputs:[{internalType:"address",name:"_logic",type:"address"},{internalType:"address",name:"_proxyAdmin",type:"address"}],stateMutability:"nonpayable",type:"constructor"},fallback:{stateMutability:"payable",type:"fallback"},receive:{stateMutability:"payable",type:"receive"},events:{"AdminChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"previousAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"AdminChanged",type:"event"},"BeaconUpgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"beacon",type:"address"}],name:"BeaconUpgraded",type:"event"},"Upgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"implementation",type:"address"}],name:"Upgraded",type:"event"}},methods:{"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"admin_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"changeAdmin(address)":{inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"changeAdmin",outputs:[],stateMutability:"nonpayable",type:"function",details:"Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."},"implementation()":{inputs:[],name:"implementation",outputs:[{internalType:"address",name:"implementation_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"},"upgradeTo(address)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"}],name:"upgradeTo",outputs:[],stateMutability:"nonpayable",type:"function",details:"Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."},"upgradeToAndCall(address,bytes)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"upgradeToAndCall",outputs:[],stateMutability:"payable",type:"function",details:"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."}}},"contracts/airdropV2/interfaces/AirdropV2StorageV1.sol:AirdropV2StorageV1":{source:"contracts/airdropV2/interfaces/AirdropV2StorageV1.sol",name:"AirdropV2StorageV1",title:"Storage for Deposit",notice:"For future upgrades, do not change DepositStorageV1. Create a new contract which implements DepositStorageV1 and following the naming convention DepositStorageVx.",methods:{"PACT()":{inputs:[],name:"PACT",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"beneficiaries(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"beneficiaries",outputs:[{internalType:"uint256",name:"claimedAmount",type:"uint256"},{internalType:"uint256",name:"lastClaimTime",type:"uint256"}],stateMutability:"view",type:"function"},"claim(address,bytes32[])":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"},{internalType:"bytes32[]",name:"_merkleProof",type:"bytes32[]"}],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function"},"cooldown()":{inputs:[],name:"cooldown",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"merkleRoot()":{inputs:[],name:"merkleRoot",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"startTime()":{inputs:[],name:"startTime",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"totalAmount()":{inputs:[],name:"totalAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"trancheAmount()":{inputs:[],name:"trancheAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"updateCooldown(uint256)":{inputs:[{internalType:"uint256",name:"_newCooldown",type:"uint256"}],name:"updateCooldown",outputs:[],stateMutability:"nonpayable",type:"function"},"updateMerkleRoot(bytes32)":{inputs:[{internalType:"bytes32",name:"_newMerkleRoot",type:"bytes32"}],name:"updateMerkleRoot",outputs:[],stateMutability:"nonpayable",type:"function"},"updateStartTime(uint256)":{inputs:[{internalType:"uint256",name:"_newStartTime",type:"uint256"}],name:"updateStartTime",outputs:[],stateMutability:"nonpayable",type:"function"},"updateTotalAmount(uint256)":{inputs:[{internalType:"uint256",name:"_newTotalAmount",type:"uint256"}],name:"updateTotalAmount",outputs:[],stateMutability:"nonpayable",type:"function"},"updateTrancheAmount(uint256)":{inputs:[{internalType:"uint256",name:"_newTrancheAmount",type:"uint256"}],name:"updateTrancheAmount",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/airdropV2/interfaces/IAirdropV2.sol:IAirdropV2":{source:"contracts/airdropV2/interfaces/IAirdropV2.sol",name:"IAirdropV2",methods:{"PACT()":{inputs:[],name:"PACT",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"claim(address,bytes32[])":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"},{internalType:"bytes32[]",name:"_merkleProof",type:"bytes32[]"}],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function"},"cooldown()":{inputs:[],name:"cooldown",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"merkleRoot()":{inputs:[],name:"merkleRoot",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"startTime()":{inputs:[],name:"startTime",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"totalAmount()":{inputs:[],name:"totalAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"trancheAmount()":{inputs:[],name:"trancheAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"updateCooldown(uint256)":{inputs:[{internalType:"uint256",name:"_newCooldown",type:"uint256"}],name:"updateCooldown",outputs:[],stateMutability:"nonpayable",type:"function"},"updateMerkleRoot(bytes32)":{inputs:[{internalType:"bytes32",name:"_newMerkleRoot",type:"bytes32"}],name:"updateMerkleRoot",outputs:[],stateMutability:"nonpayable",type:"function"},"updateStartTime(uint256)":{inputs:[{internalType:"uint256",name:"_newStartTime",type:"uint256"}],name:"updateStartTime",outputs:[],stateMutability:"nonpayable",type:"function"},"updateTotalAmount(uint256)":{inputs:[{internalType:"uint256",name:"_newTotalAmount",type:"uint256"}],name:"updateTotalAmount",outputs:[],stateMutability:"nonpayable",type:"function"},"updateTrancheAmount(uint256)":{inputs:[{internalType:"uint256",name:"_newTrancheAmount",type:"uint256"}],name:"updateTrancheAmount",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/airdropV3/AirdropV3Implementation.sol:AirdropV3Implementation":{source:"contracts/airdropV3/AirdropV3Implementation.sol",name:"AirdropV3Implementation",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Paused(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Paused",type:"event"},"Registered(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"beneficiary",type:"address"},{indexed:!0,internalType:"address",name:"community",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Registered",type:"event",params:{amount:"The amount to be registered as donation",beneficiary:"The address of the beneficiary that has claimed",community:"The address of the beneficiary's community"},notice:"Triggered after a claim"},"Unpaused(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Unpaused",type:"event"}},methods:{"amount()":{inputs:[],name:"amount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"beneficiaries(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"beneficiaries",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"donationMiner()":{inputs:[],name:"donationMiner",outputs:[{internalType:"contract IDonationMiner",name:"",type:"address"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function",notice:"Returns the current implementation version"},"initialize(address,address,address,uint256)":{inputs:[{internalType:"address",name:"_donationMiner",type:"address"},{internalType:"address",name:"_socialConnectAddress",type:"address"},{internalType:"address",name:"_socialConnectIssuer",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to be registered as donation",_donationMiner:"The address of the DonationMiner",_socialConnectAddress:"The address of the socialConnect contract",_socialConnectIssuer:"The address of impactMarket issuer"},notice:"Used to initialize a new Airdrop contract"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"paused()":{inputs:[],name:"paused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns true if the contract is paused, and false otherwise."},"register(address[],address[])":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"},{internalType:"address[]",name:"_communityAddresses",type:"address[]"}],name:"register",outputs:[],stateMutability:"nonpayable",type:"function",params:{_beneficiaryAddresses:"the addresses of the beneficiaries",_communityAddresses:"the addresses of the beneficiaries communities"},notice:"Register new beneficiaries"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"socialConnect()":{inputs:[],name:"socialConnect",outputs:[{internalType:"contract ISocialConnect",name:"",type:"address"}],stateMutability:"view",type:"function"},"socialConnectIssuer()":{inputs:[],name:"socialConnectIssuer",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"updateAmount(uint256)":{inputs:[{internalType:"uint256",name:"_newAmount",type:"uint256"}],name:"updateAmount",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newAmount:"the new amount value"},notice:"Updates the amount value"}}},"contracts/airdropV3/AirdropV3Proxy.sol:AirdropV3Proxy":{source:"contracts/airdropV3/AirdropV3Proxy.sol",name:"AirdropV3Proxy",constructor:{inputs:[{internalType:"address",name:"_logic",type:"address"},{internalType:"address",name:"_proxyAdmin",type:"address"}],stateMutability:"nonpayable",type:"constructor"},fallback:{stateMutability:"payable",type:"fallback"},receive:{stateMutability:"payable",type:"receive"},events:{"AdminChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"previousAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"AdminChanged",type:"event"},"BeaconUpgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"beacon",type:"address"}],name:"BeaconUpgraded",type:"event"},"Upgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"implementation",type:"address"}],name:"Upgraded",type:"event"}},methods:{"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"admin_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"changeAdmin(address)":{inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"changeAdmin",outputs:[],stateMutability:"nonpayable",type:"function",details:"Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."},"implementation()":{inputs:[],name:"implementation",outputs:[{internalType:"address",name:"implementation_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"},"upgradeTo(address)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"}],name:"upgradeTo",outputs:[],stateMutability:"nonpayable",type:"function",details:"Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."},"upgradeToAndCall(address,bytes)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"upgradeToAndCall",outputs:[],stateMutability:"payable",type:"function",details:"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."}}},"contracts/airdropV3/interfaces/AirdropV3StorageV1.sol:AirdropV3StorageV1":{source:"contracts/airdropV3/interfaces/AirdropV3StorageV1.sol",name:"AirdropV3StorageV1",title:"Storage for AirdropV3",notice:"For future upgrades, do not change AirdropV3StorageV1. Create a new contract which implements AirdropV3StorageV1 and following the naming convention AirdropV3StorageVx.",methods:{"amount()":{inputs:[],name:"amount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"beneficiaries(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"beneficiaries",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"donationMiner()":{inputs:[],name:"donationMiner",outputs:[{internalType:"contract IDonationMiner",name:"",type:"address"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"register(address[],address[])":{inputs:[{internalType:"address[]",name:"beneficiaryAddresses",type:"address[]"},{internalType:"address[]",name:"communityAddresses",type:"address[]"}],name:"register",outputs:[],stateMutability:"nonpayable",type:"function"},"socialConnect()":{inputs:[],name:"socialConnect",outputs:[{internalType:"contract ISocialConnect",name:"",type:"address"}],stateMutability:"view",type:"function"},"socialConnectIssuer()":{inputs:[],name:"socialConnectIssuer",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"updateAmount(uint256)":{inputs:[{internalType:"uint256",name:"newTrancheAmount",type:"uint256"}],name:"updateAmount",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/airdropV3/interfaces/IAirdropV3.sol:IAirdropV3":{source:"contracts/airdropV3/interfaces/IAirdropV3.sol",name:"IAirdropV3",methods:{"amount()":{inputs:[],name:"amount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donationMiner()":{inputs:[],name:"donationMiner",outputs:[{internalType:"contract IDonationMiner",name:"",type:"address"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"register(address[],address[])":{inputs:[{internalType:"address[]",name:"beneficiaryAddresses",type:"address[]"},{internalType:"address[]",name:"communityAddresses",type:"address[]"}],name:"register",outputs:[],stateMutability:"nonpayable",type:"function"},"socialConnect()":{inputs:[],name:"socialConnect",outputs:[{internalType:"contract ISocialConnect",name:"",type:"address"}],stateMutability:"view",type:"function"},"socialConnectIssuer()":{inputs:[],name:"socialConnectIssuer",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"updateAmount(uint256)":{inputs:[{internalType:"uint256",name:"newTrancheAmount",type:"uint256"}],name:"updateAmount",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/ambassadors/AmbassadorsImplementation.sol:AmbassadorsImplementation":{source:"contracts/ambassadors/AmbassadorsImplementation.sol",name:"AmbassadorsImplementation",notice:"Welcome to Ambassadors contract.",events:{"AmbassadorAccountReplaced(uint256,address,address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"ambassadorIndex",type:"uint256"},{indexed:!0,internalType:"address",name:"entityAccount",type:"address"},{indexed:!0,internalType:"address",name:"oldAccount",type:"address"},{indexed:!0,internalType:"address",name:"newAccount",type:"address"}],name:"AmbassadorAccountReplaced",type:"event",params:{ambassadorIndex:"Index of the ambassador being replaced",entityAccount:"Address of the entity where ambassador is being replaced",newAccount:"Ambassador's new account address",oldAccount:"Ambassador's old account address"},notice:"Triggered when an ambassador replaces it's own account."},"AmbassadorAdded(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"ambassador",type:"address"},{indexed:!0,internalType:"address",name:"entity",type:"address"}],name:"AmbassadorAdded",type:"event",params:{ambassador:"Address of the ambassador added",entity:"Address of the entity where the ambassador is added"},notice:"Triggered when an ambassador is added to an entity."},"AmbassadorRemoved(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"ambassador",type:"address"},{indexed:!0,internalType:"address",name:"entity",type:"address"}],name:"AmbassadorRemoved",type:"event",params:{ambassador:"Address of the ambassador removed",entity:"Address of the entity where the ambassador is removed"},notice:"Triggered when an ambassador is removed."},"AmbassadorReplaced(uint256,address,address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"ambassadorIndex",type:"uint256"},{indexed:!0,internalType:"address",name:"entityAccount",type:"address"},{indexed:!0,internalType:"address",name:"oldAmbassador",type:"address"},{indexed:!0,internalType:"address",name:"newAmbassador",type:"address"}],name:"AmbassadorReplaced",type:"event",params:{ambassadorIndex:"Index of the ambassador being replaced",entityAccount:"Address of the entity where ambassador is being replaced",newAmbassador:"Ambassador's new account address",oldAmbassador:"Ambassador's old account address"},notice:"Triggered when an ambassador is replaced by the entity."},"AmbassadorToCommunityUpdated(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"fromAmbassador",type:"address"},{indexed:!0,internalType:"address",name:"toAmbassador",type:"address"},{indexed:!0,internalType:"address",name:"community",type:"address"}],name:"AmbassadorToCommunityUpdated",type:"event",params:{community:"Community address being transfered",fromAmbassador:"Ambassador address from which the community is being transfered from",toAmbassador:"Ambassador address to which the community is being transfered to"},notice:"Triggered when a community is transfered from one ambassador to another."},"AmbassadorTransfered(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"ambassador",type:"address"},{indexed:!0,internalType:"address",name:"oldEntity",type:"address"},{indexed:!0,internalType:"address",name:"newEntity",type:"address"}],name:"AmbassadorTransfered",type:"event",params:{ambassador:"Ambassador address being replaced",newEntity:"Entity's new account address",oldEntity:"Entity's old account address"},notice:"Triggered when an ambassador is transfered to a new entity."},"CommunityRemoved(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"ambassador",type:"address"},{indexed:!0,internalType:"address",name:"community",type:"address"}],name:"CommunityRemoved",type:"event",params:{ambassador:"Ambassador of the community being removed",community:"Community address being removed"},notice:"Triggered when a community is removed."},"EntityAccountReplaced(uint256,address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"entityIndex",type:"uint256"},{indexed:!0,internalType:"address",name:"oldAccount",type:"address"},{indexed:!0,internalType:"address",name:"newAccount",type:"address"}],name:"EntityAccountReplaced",type:"event",params:{entityIndex:"Entity index replacing account address",newAccount:"New account address",oldAccount:"Old account address"},notice:"Triggered when an entity replaced account address."},"EntityAdded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"entity",type:"address"}],name:"EntityAdded",type:"event",params:{entity:"Address of the entity added"},notice:"Triggered when an entity is added."},"EntityRemoved(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"entity",type:"address"}],name:"EntityRemoved",type:"event",params:{entity:"Address of the entity removed"},notice:"Triggered when an entity is removed."},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"addAmbassador(address)":{inputs:[{internalType:"address",name:"_ambassador",type:"address"}],name:"addAmbassador",outputs:[],stateMutability:"nonpayable",type:"function",params:{_ambassador:"Address of the ambassador"},notice:"Registers an ambassador."},"addEntity(address)":{inputs:[{internalType:"address",name:"_entity",type:"address"}],name:"addEntity",outputs:[],stateMutability:"nonpayable",type:"function",params:{_entity:"Address of the entity"},notice:"Registers an entity."},"ambassadorByAddress(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"ambassadorByAddress",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"ambassadorByIndex(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"ambassadorByIndex",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"ambassadorIndex()":{inputs:[],name:"ambassadorIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"ambassadorToEntity(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"ambassadorToEntity",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"communityAdmin()":{inputs:[],name:"communityAdmin",outputs:[{internalType:"contract ICommunityAdmin",name:"",type:"address"}],stateMutability:"view",type:"function"},"communityToAmbassador(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"communityToAmbassador",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"entityAmbassadors(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"entityAmbassadors",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"entityByAddress(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"entityByAddress",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"entityByIndex(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"entityByIndex",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"entityIndex()":{inputs:[],name:"entityIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function",notice:"Returns the current implementation version"},"initialize(address)":{inputs:[{internalType:"contract ICommunityAdmin",name:"_communityAdmin",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",params:{_communityAdmin:"Address of the community admin contract"},notice:"Used to initialize a new Ambassadors contract"},"isAmbassador(address)":{inputs:[{internalType:"address",name:"_ambassador",type:"address"}],name:"isAmbassador",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",params:{_ambassador:"Address of the ambassador"},returns:{_0:"Boolean whether an address is ambassador or not"},notice:"Returns boolean whether an address is ambassador or not."},"isAmbassadorAt(address,address)":{inputs:[{internalType:"address",name:"_ambassador",type:"address"},{internalType:"address",name:"_entityAddress",type:"address"}],name:"isAmbassadorAt",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",params:{_ambassador:"Address of the ambassador",_entityAddress:"Address of the entity"},returns:{_0:"Boolean whether an address is ambassador at a given entity or not"},notice:"Returns boolean whether an address is ambassador at a given entity."},"isAmbassadorOf(address,address)":{inputs:[{internalType:"address",name:"_ambassador",type:"address"},{internalType:"address",name:"_community",type:"address"}],name:"isAmbassadorOf",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",params:{_ambassador:"Address of the ambassador",_community:"Address of the community"},returns:{_0:"Boolean whether an address is ambassador of a given community or not"},notice:"Returns boolean whether an address is ambassador of a given community."},"isEntityOf(address,address)":{inputs:[{internalType:"address",name:"_entity",type:"address"},{internalType:"address",name:"_community",type:"address"}],name:"isEntityOf",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",params:{_community:"Address of the community",_entity:"Address of the entity"},returns:{_0:"Boolean whether an address is entity responsible for ambassador of a given community or not"},notice:"Returns boolean whether an address is entity responsible for ambassador of a given community."},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"removeAmbassador(address)":{inputs:[{internalType:"address",name:"_ambassador",type:"address"}],name:"removeAmbassador",outputs:[],stateMutability:"nonpayable",type:"function",params:{_ambassador:"Address of the ambassador"},notice:"Removes an ambassador."},"removeCommunity(address)":{inputs:[{internalType:"address",name:"_community",type:"address"}],name:"removeCommunity",outputs:[],stateMutability:"nonpayable",type:"function",params:{_community:"Community address"},notice:"Removes community."},"removeEntity(address)":{inputs:[{internalType:"address",name:"_entity",type:"address"}],name:"removeEntity",outputs:[],stateMutability:"nonpayable",type:"function",params:{_entity:"Address of the entity"},notice:"Removes an entity."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"replaceAmbassador(address,address)":{inputs:[{internalType:"address",name:"_oldAmbassador",type:"address"},{internalType:"address",name:"_newAmbassador",type:"address"}],name:"replaceAmbassador",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newAmbassador:"New ambassador address",_oldAmbassador:"Address of the ambassador"},notice:"Replaces an ambassador. Called by entity."},"replaceAmbassadorAccount(address,address)":{inputs:[{internalType:"address",name:"_ambassador",type:"address"},{internalType:"address",name:"_newAmbassador",type:"address"}],name:"replaceAmbassadorAccount",outputs:[],stateMutability:"nonpayable",type:"function",params:{_ambassador:"Address of the ambassador",_newAmbassador:"New ambassador address"},notice:"Replace ambassador account. Called by ambassador."},"replaceEntityAccount(address,address)":{inputs:[{internalType:"address",name:"_entity",type:"address"},{internalType:"address",name:"_newEntity",type:"address"}],name:"replaceEntityAccount",outputs:[],stateMutability:"nonpayable",type:"function",params:{_entity:"Address of the entity",_newEntity:"New entity address"},notice:"Replace entity account."},"setCommunityToAmbassador(address,address)":{inputs:[{internalType:"address",name:"_ambassador",type:"address"},{internalType:"address",name:"_community",type:"address"}],name:"setCommunityToAmbassador",outputs:[],stateMutability:"nonpayable",type:"function",params:{_ambassador:"Address of the ambassador",_community:"Community address"},notice:"Sets community to ambassador."},"transferAmbassador(address,address,bool)":{inputs:[{internalType:"address",name:"_ambassador",type:"address"},{internalType:"address",name:"_toEntity",type:"address"},{internalType:"bool",name:"_keepCommunities",type:"bool"}],name:"transferAmbassador",outputs:[],stateMutability:"nonpayable",type:"function",params:{_ambassador:"Address of the ambassador",_keepCommunities:"Boolean whether to keep the ambassador's communities or not",_toEntity:"Address of the entity"},notice:"Transfers an ambassador to another entity."},"transferCommunityToAmbassador(address,address)":{inputs:[{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_community",type:"address"}],name:"transferCommunityToAmbassador",outputs:[],stateMutability:"nonpayable",type:"function",params:{_community:"Community address",_to:"Address of the ambassador to transfer the community to"},notice:"Transfers community from ambassador to another ambassador."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"updateCommunityAdmin(address)":{inputs:[{internalType:"contract ICommunityAdmin",name:"_newCommunityAdmin",type:"address"}],name:"updateCommunityAdmin",outputs:[],stateMutability:"nonpayable",type:"function",details:"used only for testing the new community upgrade flow",params:{_newCommunityAdmin:"address of the new communityAdmin"},notice:"Updates the address of the communityAdmin"}}},"contracts/ambassadors/AmbassadorsProxy.sol:AmbassadorsProxy":{source:"contracts/ambassadors/AmbassadorsProxy.sol",name:"AmbassadorsProxy",constructor:{inputs:[{internalType:"address",name:"_logic",type:"address"},{internalType:"address",name:"_proxyAdmin",type:"address"}],stateMutability:"nonpayable",type:"constructor"},fallback:{stateMutability:"payable",type:"fallback"},receive:{stateMutability:"payable",type:"receive"},events:{"AdminChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"previousAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"AdminChanged",type:"event"},"BeaconUpgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"beacon",type:"address"}],name:"BeaconUpgraded",type:"event"},"Upgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"implementation",type:"address"}],name:"Upgraded",type:"event"}},methods:{"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"admin_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"changeAdmin(address)":{inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"changeAdmin",outputs:[],stateMutability:"nonpayable",type:"function",details:"Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."},"implementation()":{inputs:[],name:"implementation",outputs:[{internalType:"address",name:"implementation_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"},"upgradeTo(address)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"}],name:"upgradeTo",outputs:[],stateMutability:"nonpayable",type:"function",details:"Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."},"upgradeToAndCall(address,bytes)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"upgradeToAndCall",outputs:[],stateMutability:"payable",type:"function",details:"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."}}},"contracts/ambassadors/interfaces/AmbassadorsStorageV1.sol:AmbassadorsStorageV1":{source:"contracts/ambassadors/interfaces/AmbassadorsStorageV1.sol",name:"AmbassadorsStorageV1",title:"Storage for Ambassadors",notice:"For future upgrades, do not change AmbassadorsStorageV1. Create a new contract which implements AmbassadorsStorageV1 and following the naming convention AmbassadorsStorageVX.",methods:{"addAmbassador(address)":{inputs:[{internalType:"address",name:"_ambassador",type:"address"}],name:"addAmbassador",outputs:[],stateMutability:"nonpayable",type:"function"},"addEntity(address)":{inputs:[{internalType:"address",name:"_entity",type:"address"}],name:"addEntity",outputs:[],stateMutability:"nonpayable",type:"function"},"ambassadorByAddress(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"ambassadorByAddress",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"ambassadorByIndex(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"ambassadorByIndex",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"ambassadorIndex()":{inputs:[],name:"ambassadorIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"ambassadorToEntity(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"ambassadorToEntity",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"communityAdmin()":{inputs:[],name:"communityAdmin",outputs:[{internalType:"contract ICommunityAdmin",name:"",type:"address"}],stateMutability:"view",type:"function"},"communityToAmbassador(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"communityToAmbassador",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"entityAmbassadors(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"entityAmbassadors",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"entityByAddress(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"entityByAddress",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"entityByIndex(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"entityByIndex",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"entityIndex()":{inputs:[],name:"entityIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"isAmbassador(address)":{inputs:[{internalType:"address",name:"_ambassador",type:"address"}],name:"isAmbassador",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"isAmbassadorAt(address,address)":{inputs:[{internalType:"address",name:"_ambassador",type:"address"},{internalType:"address",name:"_entityAddress",type:"address"}],name:"isAmbassadorAt",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"isAmbassadorOf(address,address)":{inputs:[{internalType:"address",name:"_ambassador",type:"address"},{internalType:"address",name:"_community",type:"address"}],name:"isAmbassadorOf",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"isEntityOf(address,address)":{inputs:[{internalType:"address",name:"_ambassador",type:"address"},{internalType:"address",name:"_entityAddress",type:"address"}],name:"isEntityOf",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"removeAmbassador(address)":{inputs:[{internalType:"address",name:"_ambassador",type:"address"}],name:"removeAmbassador",outputs:[],stateMutability:"nonpayable",type:"function"},"removeCommunity(address)":{inputs:[{internalType:"address",name:"_community",type:"address"}],name:"removeCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"removeEntity(address)":{inputs:[{internalType:"address",name:"_entity",type:"address"}],name:"removeEntity",outputs:[],stateMutability:"nonpayable",type:"function"},"replaceAmbassador(address,address)":{inputs:[{internalType:"address",name:"_oldAmbassador",type:"address"},{internalType:"address",name:"_newAmbassador",type:"address"}],name:"replaceAmbassador",outputs:[],stateMutability:"nonpayable",type:"function"},"replaceAmbassadorAccount(address,address)":{inputs:[{internalType:"address",name:"_ambassador",type:"address"},{internalType:"address",name:"_newAmbassador",type:"address"}],name:"replaceAmbassadorAccount",outputs:[],stateMutability:"nonpayable",type:"function"},"replaceEntityAccount(address,address)":{inputs:[{internalType:"address",name:"_entity",type:"address"},{internalType:"address",name:"_newEntity",type:"address"}],name:"replaceEntityAccount",outputs:[],stateMutability:"nonpayable",type:"function"},"setCommunityToAmbassador(address,address)":{inputs:[{internalType:"address",name:"_ambassador",type:"address"},{internalType:"address",name:"_community",type:"address"}],name:"setCommunityToAmbassador",outputs:[],stateMutability:"nonpayable",type:"function"},"transferAmbassador(address,address,bool)":{inputs:[{internalType:"address",name:"_ambassador",type:"address"},{internalType:"address",name:"_toEntity",type:"address"},{internalType:"bool",name:"_keepCommunities",type:"bool"}],name:"transferAmbassador",outputs:[],stateMutability:"nonpayable",type:"function"},"transferCommunityToAmbassador(address,address)":{inputs:[{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_community",type:"address"}],name:"transferCommunityToAmbassador",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/ambassadors/interfaces/IAmbassadors.sol:IAmbassadors":{source:"contracts/ambassadors/interfaces/IAmbassadors.sol",name:"IAmbassadors",methods:{"addAmbassador(address)":{inputs:[{internalType:"address",name:"_ambassador",type:"address"}],name:"addAmbassador",outputs:[],stateMutability:"nonpayable",type:"function"},"addEntity(address)":{inputs:[{internalType:"address",name:"_entity",type:"address"}],name:"addEntity",outputs:[],stateMutability:"nonpayable",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"isAmbassador(address)":{inputs:[{internalType:"address",name:"_ambassador",type:"address"}],name:"isAmbassador",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"isAmbassadorAt(address,address)":{inputs:[{internalType:"address",name:"_ambassador",type:"address"},{internalType:"address",name:"_entityAddress",type:"address"}],name:"isAmbassadorAt",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"isAmbassadorOf(address,address)":{inputs:[{internalType:"address",name:"_ambassador",type:"address"},{internalType:"address",name:"_community",type:"address"}],name:"isAmbassadorOf",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"isEntityOf(address,address)":{inputs:[{internalType:"address",name:"_ambassador",type:"address"},{internalType:"address",name:"_entityAddress",type:"address"}],name:"isEntityOf",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"removeAmbassador(address)":{inputs:[{internalType:"address",name:"_ambassador",type:"address"}],name:"removeAmbassador",outputs:[],stateMutability:"nonpayable",type:"function"},"removeCommunity(address)":{inputs:[{internalType:"address",name:"_community",type:"address"}],name:"removeCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"removeEntity(address)":{inputs:[{internalType:"address",name:"_entity",type:"address"}],name:"removeEntity",outputs:[],stateMutability:"nonpayable",type:"function"},"replaceAmbassador(address,address)":{inputs:[{internalType:"address",name:"_oldAmbassador",type:"address"},{internalType:"address",name:"_newAmbassador",type:"address"}],name:"replaceAmbassador",outputs:[],stateMutability:"nonpayable",type:"function"},"replaceAmbassadorAccount(address,address)":{inputs:[{internalType:"address",name:"_ambassador",type:"address"},{internalType:"address",name:"_newAmbassador",type:"address"}],name:"replaceAmbassadorAccount",outputs:[],stateMutability:"nonpayable",type:"function"},"replaceEntityAccount(address,address)":{inputs:[{internalType:"address",name:"_entity",type:"address"},{internalType:"address",name:"_newEntity",type:"address"}],name:"replaceEntityAccount",outputs:[],stateMutability:"nonpayable",type:"function"},"setCommunityToAmbassador(address,address)":{inputs:[{internalType:"address",name:"_ambassador",type:"address"},{internalType:"address",name:"_community",type:"address"}],name:"setCommunityToAmbassador",outputs:[],stateMutability:"nonpayable",type:"function"},"transferAmbassador(address,address,bool)":{inputs:[{internalType:"address",name:"_ambassador",type:"address"},{internalType:"address",name:"_toEntity",type:"address"},{internalType:"bool",name:"_keepCommunities",type:"bool"}],name:"transferAmbassador",outputs:[],stateMutability:"nonpayable",type:"function"},"transferCommunityToAmbassador(address,address)":{inputs:[{internalType:"address",name:"_to",type:"address"},{internalType:"address",name:"_community",type:"address"}],name:"transferCommunityToAmbassador",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/community/CommunityAdminImplementation.sol:CommunityAdminImplementation":{source:"contracts/community/CommunityAdminImplementation.sol",name:"CommunityAdminImplementation",notice:"Welcome to CommunityAdmin, the main contract. This is an administrative (for now) contract where the admins have control over the list of communities. Being only able to add and remove communities",events:{"AmbassadorsUpdated(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"oldAmbassadors",type:"address"},{indexed:!0,internalType:"address",name:"newAmbassadors",type:"address"}],name:"AmbassadorsUpdated",type:"event",params:{newAmbassadors:"New Ambassador address",oldAmbassadors:"Old Ambassador address"},notice:"Triggered when the ambassadors has been updated"},"CommunityAdded(address,address[],uint256,uint256,uint256,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"communityAddress",type:"address"},{indexed:!1,internalType:"address[]",name:"managers",type:"address[]"},{indexed:!1,internalType:"uint256",name:"originalClaimAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"maxTotalClaim",type:"uint256"},{indexed:!1,internalType:"uint256",name:"decreaseStep",type:"uint256"},{indexed:!1,internalType:"uint256",name:"baseInterval",type:"uint256"},{indexed:!1,internalType:"uint256",name:"incrementInterval",type:"uint256"},{indexed:!1,internalType:"uint256",name:"minTranche",type:"uint256"},{indexed:!1,internalType:"uint256",name:"maxTranche",type:"uint256"}],name:"CommunityAdded",type:"event",params:{baseInterval:"Value of the baseInterval",communityAddress:"Address of the community that has been added",decreaseStep:"Value of the decreaseStep",incrementInterval:"Value of the incrementInterval",managers:"Addresses of the initial managers",maxTotalClaim:"Value of the maxTotalClaim",maxTranche:"Value of the maxTranche For further information regarding each parameter, see *Community* smart contract initialize method.",minTranche:"Value of the minTranche",originalClaimAmount:"Value of the originalClaimAmount"},notice:"Triggered when a community has been added"},"CommunityCopied(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"originalCommunity",type:"address"},{indexed:!0,internalType:"address",name:"copyCommunity",type:"address"}],name:"CommunityCopied",type:"event",params:{copyCommunity:"Address of the copy",originalCommunity:"Address of the community that has been copied"},notice:"Triggered when a community has been copied"},"CommunityFunded(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"community",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"CommunityFunded",type:"event",params:{amount:"Amount of the funding",community:"Address of the community"},notice:"Triggered when a community has been funded"},"CommunityImplementationUpdated(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"oldCommunityImplementation",type:"address"},{indexed:!0,internalType:"address",name:"newCommunityImplementation",type:"address"}],name:"CommunityImplementationUpdated",type:"event",params:{newCommunityImplementation:"New communityImplementation address",oldCommunityImplementation:"Old communityImplementation address"},notice:"Triggered when the communityImplementation address has been updated"},"CommunityMiddleProxyUpdated(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldCommunityMiddleProxy",type:"address"},{indexed:!1,internalType:"address",name:"newCommunityMiddleProxy",type:"address"}],name:"CommunityMiddleProxyUpdated",type:"event",params:{newCommunityMiddleProxy:"New communityMiddleProxy address",oldCommunityMiddleProxy:"Old communityMiddleProxy address"},notice:"Triggered when the communityMiddleProxy address has been updated"},"CommunityMigrated(address[],address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address[]",name:"managers",type:"address[]"},{indexed:!0,internalType:"address",name:"communityAddress",type:"address"},{indexed:!0,internalType:"address",name:"previousCommunityAddress",type:"address"}],name:"CommunityMigrated",type:"event",params:{communityAddress:"New community address",managers:"Addresses of the new community's initial managers",previousCommunityAddress:"Old community address"},notice:"Triggered when a community has been migrated"},"CommunityRemoved(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"communityAddress",type:"address"}],name:"CommunityRemoved",type:"event",params:{communityAddress:"Address of the community that has been removed"},notice:"Triggered when a community has been removed"},"ImpactMarketCouncilUpdated(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"oldImpactMarketCouncil",type:"address"},{indexed:!0,internalType:"address",name:"newImpactMarketCouncil",type:"address"}],name:"ImpactMarketCouncilUpdated",type:"event",params:{newImpactMarketCouncil:"New impactMarket Council address",oldImpactMarketCouncil:"Old impactMarket Council address"},notice:"Triggered when the impactMarket Council has been updated"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"TransferERC20(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TransferERC20",type:"event",params:{amount:"Amount of the transaction",to:"Address of the receiver",token:"ERC20 token address"},notice:"Triggered when an amount of an ERC20 has been transferred from this contract to an address"},"TreasuryUpdated(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"oldTreasury",type:"address"},{indexed:!0,internalType:"address",name:"newTreasury",type:"address"}],name:"TreasuryUpdated",type:"event",params:{newTreasury:"New treasury address",oldTreasury:"Old treasury address"},notice:"Triggered when the treasury address has been updated"}},methods:{"addCommunity(address,address[],address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"address[]",name:"_managers",type:"address[]"},{internalType:"address",name:"_ambassador",type:"address"},{internalType:"uint256",name:"_originalClaimAmount",type:"uint256"},{internalType:"uint256",name:"_maxTotalClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"},{internalType:"uint256",name:"_minTranche",type:"uint256"},{internalType:"uint256",name:"_maxTranche",type:"uint256"},{internalType:"uint256",name:"_maxBeneficiaries",type:"uint256"}],name:"addCommunity",outputs:[],stateMutability:"nonpayable",type:"function",params:{_ambassador:"address of the ambassador",_baseInterval:"base interval to start claiming",_decreaseStep:"value decreased from maxTotalClaim for every beneficiary added",_incrementInterval:"increment interval used in each claim",_managers:"addresses of the community managers",_maxBeneficiaries:"maximum number of valid beneficiaries",_maxTotalClaim:"limit that a beneficiary can claim at in total",_maxTranche:"maximum amount that the community will receive when requesting funds",_minTranche:"minimum amount that the community will receive when requesting funds",_originalClaimAmount:"maximum base amount to be claim by the beneficiary",_tokenAddress:"address of the token used by the community"},notice:"Adds a new community"},"ambassadors()":{inputs:[],name:"ambassadors",outputs:[{internalType:"contract IAmbassadors",name:"",type:"address"}],stateMutability:"view",type:"function"},"authorizedWalletAddress()":{inputs:[],name:"authorizedWalletAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"cUSD()":{inputs:[],name:"cUSD",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"calculateCommunityTrancheAmount(address)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"}],name:"calculateCommunityTrancheAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Calculates the tranche amount of a community.",params:{_community:"address of the community"},returns:{_0:"uint256        the value of the tranche amount"}},"communities(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"communities",outputs:[{internalType:"enum ICommunityAdmin.CommunityState",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"communityImplementation()":{inputs:[],name:"communityImplementation",outputs:[{internalType:"contract ICommunity",name:"",type:"address"}],stateMutability:"view",type:"function"},"communityListAt(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"communityListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",params:{_index:"index of the community"},returns:{_0:"address of the community"},notice:"Returns the address of a community from communityList"},"communityListLength()":{inputs:[],name:"communityListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",returns:{_0:"uint256 number of communities"},notice:"Returns the number of communities"},"communityMiddleProxy()":{inputs:[],name:"communityMiddleProxy",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"communityProxyAdmin()":{inputs:[],name:"communityProxyAdmin",outputs:[{internalType:"contract ProxyAdmin",name:"",type:"address"}],stateMutability:"view",type:"function"},"fundCommunity()":{inputs:[],name:"fundCommunity",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function",details:"Funds an existing community if it hasn't enough funds"},"getCommunityProxyImplementation(address)":{inputs:[{internalType:"address",name:"_communityProxyAddress",type:"address"}],name:"getCommunityProxyImplementation",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",params:{_communityProxyAddress:"address of the community"},notice:"Gets a community implementation address"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function",notice:"Returns the current implementation version"},"impactMarketCouncil()":{inputs:[],name:"impactMarketCouncil",outputs:[{internalType:"contract IImpactMarketCouncil",name:"",type:"address"}],stateMutability:"view",type:"function"},"initialize(address,address)":{inputs:[{internalType:"contract ICommunity",name:"_communityImplementation",type:"address"},{internalType:"contract IERC20Upgradeable",name:"_cUSD",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",params:{_cUSD:"Address of the cUSD token",_communityImplementation:"Address of the Community implementation                              used for deploying new communities"},notice:"Used to initialize a new CommunityAdmin contract"},"isAmbassadorOrEntityOfCommunity(address,address)":{inputs:[{internalType:"address",name:"_community",type:"address"},{internalType:"address",name:"_ambassadorOrEntity",type:"address"}],name:"isAmbassadorOrEntityOfCommunity",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",returns:{_0:"bool true if the address is an ambassador or entity of the community"},notice:"Returns if an address is the ambassador or entity of the community"},"migrateCommunity(address[],address)":{inputs:[{internalType:"address[]",name:"_managers",type:"address[]"},{internalType:"contract ICommunity",name:"_previousCommunity",type:"address"}],name:"migrateCommunity",outputs:[],stateMutability:"nonpayable",type:"function",params:{_managers:"address of the community managers",_previousCommunity:"address of the community to be migrated"},notice:"Migrates a community by deploying a new contract."},"minClaimAmountRatio()":{inputs:[],name:"minClaimAmountRatio",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"minClaimAmountRatioPrecision()":{inputs:[],name:"minClaimAmountRatioPrecision",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function",returns:{_0:"uint256 number of communities"},notice:"Returns the MIN_CLAIM_AMOUNT_RATIO_PRECISION"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"removeCommunity(address)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"}],name:"removeCommunity",outputs:[],stateMutability:"nonpayable",type:"function",params:{_community:"address of the community"},notice:"Removes an existing community. All community funds are transferred to the treasury"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setCommunityToAmbassador(address,address)":{inputs:[{internalType:"address",name:"_ambassador",type:"address"},{internalType:"contract ICommunity",name:"_community",type:"address"}],name:"setCommunityToAmbassador",outputs:[],stateMutability:"nonpayable",type:"function",params:{_ambassador:"address of the ambassador",_community:"address of the community contract"},notice:"Set an existing ambassador to an existing community"},"splitCommunity(address,uint256,address,address[])":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"uint256",name:"_numberOfCopies",type:"uint256"},{internalType:"address",name:"_ambassador",type:"address"},{internalType:"address[]",name:"_managers",type:"address[]"}],name:"splitCommunity",outputs:[],stateMutability:"nonpayable",type:"function",params:{_ambassador:"address of the ambassador",_community:"address of the community to be split",_managers:"address of the community managers",_numberOfCopies:"the number of communities that will copy the data"},notice:"Migrates a community by deploying a new contract."},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"amount of the transaction",_to:"address of the receiver",_token:"address of the ERC20 token"},notice:"Transfers an amount of an ERC20 from this contract to an address"},"transferFromCommunity(address,address,address,uint256)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferFromCommunity",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"amount of the transaction",_community:"address of the community",_to:"address of the receiver",_token:"address of the ERC20 token"},notice:"Transfers an amount of an ERC20 from community to an address"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"transferToBeneficiary(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_beneficiary",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferToBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers community tokens from the treasury to a community",params:{_amount:"amount to be transferred from treasury to community",_beneficiary:"address of the beneficiary"}},"treasury()":{inputs:[],name:"treasury",outputs:[{internalType:"contract ITreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"treasuryMinBalance()":{inputs:[],name:"treasuryMinBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"treasurySafetyPercentage()":{inputs:[],name:"treasurySafetyPercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"updateAmbassadors(address)":{inputs:[{internalType:"contract IAmbassadors",name:"_newAmbassadors",type:"address"}],name:"updateAmbassadors",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newAmbassadors:"address of new implementation contract"},notice:"Updates proxy implementation address of ambassadors"},"updateAuthorizedWalletAddress(address)":{inputs:[{internalType:"address",name:"_newAuthorizedWalletAddress",type:"address"}],name:"updateAuthorizedWalletAddress",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newAuthorizedWalletAddress:"address of the new backend wallet"},notice:"Updates the address of the backend wallet"},"updateBeneficiaryParams(address,uint256,uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"uint256",name:"_originalClaimAmount",type:"uint256"},{internalType:"uint256",name:"_maxTotalClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"},{internalType:"uint256",name:"_maxBeneficiaries",type:"uint256"}],name:"updateBeneficiaryParams",outputs:[],stateMutability:"nonpayable",type:"function",params:{_baseInterval:"base interval to start claiming",_community:"address of the community",_decreaseStep:"value decreased from maxTotalClaim each time a is beneficiary added",_incrementInterval:"increment interval used in each claim",_maxBeneficiaries:"maximum number of beneficiaries",_maxTotalClaim:"limit that a beneficiary can claim  in total",_originalClaimAmount:"maximum base amount to be claim by the beneficiary"},notice:"Updates the beneficiary params of a community"},"updateCommunityImplementation(address)":{inputs:[{internalType:"contract ICommunity",name:"_newCommunityImplementation",type:"address"}],name:"updateCommunityImplementation",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newCommunityImplementation:"address of the new communityImplementation contract"},notice:"Updates the address of the the communityImplementation"},"updateCommunityMiddleProxy(address)":{inputs:[{internalType:"address",name:"_newCommunityMiddleProxy",type:"address"}],name:"updateCommunityMiddleProxy",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newCommunityMiddleProxy:"address of new implementation contract"},notice:"Updates communityMiddleProxy address"},"updateCommunityParams(address,uint256,uint256)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"uint256",name:"_minTranche",type:"uint256"},{internalType:"uint256",name:"_maxTranche",type:"uint256"}],name:"updateCommunityParams",outputs:[],stateMutability:"nonpayable",type:"function",params:{_community:"address of the community",_maxTranche:"maximum amount that the community will receive when requesting funds",_minTranche:"minimum amount that the community will receive when requesting funds"},notice:"Updates params of a community"},"updateCommunityToken(address,address,bytes,uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"contract IERC20Upgradeable",name:"_newToken",type:"address"},{internalType:"bytes",name:"_exchangePath",type:"bytes"},{internalType:"uint256",name:"_originalClaimAmount",type:"uint256"},{internalType:"uint256",name:"_maxTotalClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"}],name:"updateCommunityToken",outputs:[],stateMutability:"nonpayable",type:"function",params:{_community:"address of the community",_exchangePath:"path used by uniswap to exchange the current tokens to the new tokens",_newToken:"new token address"},notice:"Updates token address of a community"},"updateImpactMarketCouncil(address)":{inputs:[{internalType:"contract IImpactMarketCouncil",name:"_newImpactMarketCouncil",type:"address"}],name:"updateImpactMarketCouncil",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newImpactMarketCouncil:"address of new implementation contract"},notice:"Updates proxy implementation address of impactMarket council"},"updateMinClaimAmountRatio(uint256)":{inputs:[{internalType:"uint256",name:"_newMinClaimAmountRatio",type:"uint256"}],name:"updateMinClaimAmountRatio",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newMinClaimAmountRatio:"value of the minClaimAmountRatio !!! be aware that this value will be divided by MIN_CLAIM_AMOUNT_RATIO_PRECISION"},notice:"Updates the value of the minClaimAmountRatio"},"updateProxyImplementation(address,address)":{inputs:[{internalType:"address",name:"_communityMiddleProxy",type:"address"},{internalType:"address",name:"_newCommunityImplementation",type:"address"}],name:"updateProxyImplementation",outputs:[],stateMutability:"nonpayable",type:"function",params:{_communityMiddleProxy:"address of the community",_newCommunityImplementation:"address of new implementation contract"},notice:"Updates proxy implementation address of a community use this only for changing the implementation for one community for updating the implementation for (almost) all communities, just update the communityImplementation param"},"updateTreasury(address)":{inputs:[{internalType:"contract ITreasury",name:"_newTreasury",type:"address"}],name:"updateTreasury",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newTreasury:"address of the new treasury contract"},notice:"Updates the address of the treasury"},"updateTreasuryMinBalance(uint256)":{inputs:[{internalType:"uint256",name:"_newTreasuryMinBalance",type:"uint256"}],name:"updateTreasuryMinBalance",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newTreasuryMinBalance:"value of the treasuryMinBalance"},notice:"Updates the value of the treasuryMinBalance"},"updateTreasurySafetyPercentage(uint256)":{inputs:[{internalType:"uint256",name:"_newTreasurySafetyPercentage",type:"uint256"}],name:"updateTreasurySafetyPercentage",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newTreasurySafetyPercentage:"value of the treasurySafetyPercentage"},notice:"Updates the value of the treasurySafetyPercentage"}}},"contracts/community/CommunityAdminProxy.sol:CommunityAdminProxy":{source:"contracts/community/CommunityAdminProxy.sol",name:"CommunityAdminProxy",constructor:{inputs:[{internalType:"address",name:"_logic",type:"address"},{internalType:"address",name:"_proxyAdmin",type:"address"}],stateMutability:"nonpayable",type:"constructor"},fallback:{stateMutability:"payable",type:"fallback"},receive:{stateMutability:"payable",type:"receive"},events:{"AdminChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"previousAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"AdminChanged",type:"event"},"BeaconUpgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"beacon",type:"address"}],name:"BeaconUpgraded",type:"event"},"Upgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"implementation",type:"address"}],name:"Upgraded",type:"event"}},methods:{"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"admin_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"changeAdmin(address)":{inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"changeAdmin",outputs:[],stateMutability:"nonpayable",type:"function",details:"Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."},"implementation()":{inputs:[],name:"implementation",outputs:[{internalType:"address",name:"implementation_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"},"upgradeTo(address)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"}],name:"upgradeTo",outputs:[],stateMutability:"nonpayable",type:"function",details:"Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."},"upgradeToAndCall(address,bytes)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"upgradeToAndCall",outputs:[],stateMutability:"payable",type:"function",details:"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."}}},"contracts/community/CommunityImplementation.sol:CommunityImplementation":{source:"contracts/community/CommunityImplementation.sol",name:"CommunityImplementation",notice:"Welcome to the Community contract. For each community there will be one proxy contract deployed by CommunityAdmin. The implementation of the proxy is this contract. This enable us to save tokens on the contract itself, and avoid the problems of having everything in one single contract. Each community has it's own members and and managers.",events:{"BeneficiaryAdded(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"manager",type:"address"},{indexed:!0,internalType:"address",name:"beneficiary",type:"address"}],name:"BeneficiaryAdded",type:"event",params:{beneficiary:"Address of the beneficiary that has been added",manager:"Address of the manager that triggered the event"},notice:"Triggered when a beneficiary has been added"},"BeneficiaryAddressChanged(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"beneficiary1",type:"address"},{indexed:!0,internalType:"address",name:"beneficiary2",type:"address"}],name:"BeneficiaryAddressChanged",type:"event",params:{beneficiary1:"Address of the first beneficiary",beneficiary2:"Address of the second beneficiary"},notice:"Triggered when two beneficiaries has been merged"},"BeneficiaryClaim(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"beneficiary",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"BeneficiaryClaim",type:"event",params:{amount:"Amount of the claim",beneficiary:"Address of the beneficiary that has claimed"},notice:"Triggered when a beneficiary has claimed"},"BeneficiaryCopied(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"manager",type:"address"},{indexed:!0,internalType:"address",name:"beneficiary",type:"address"}],name:"BeneficiaryCopied",type:"event",params:{beneficiary:"Address of the beneficiary that has been added",manager:"Address of the manager that triggered the event"},notice:"Triggered when a beneficiary has been copied"},"BeneficiaryJoined(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"beneficiary",type:"address"}],name:"BeneficiaryJoined",type:"event",params:{beneficiary:"Address of the beneficiary"},notice:"Triggered when a beneficiary from previous community has joined in the current community"},"BeneficiaryLocked(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"manager",type:"address"},{indexed:!0,internalType:"address",name:"beneficiary",type:"address"}],name:"BeneficiaryLocked",type:"event",params:{beneficiary:"Address of the beneficiary that has been locked",manager:"Address of the manager that triggered the event"},notice:"Triggered when a beneficiary has been locked"},"BeneficiaryParamsUpdated(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldOriginalClaimAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"oldMaxTotalClaim",type:"uint256"},{indexed:!1,internalType:"uint256",name:"oldDecreaseStep",type:"uint256"},{indexed:!1,internalType:"uint256",name:"oldBaseInterval",type:"uint256"},{indexed:!1,internalType:"uint256",name:"oldIncrementInterval",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newOriginalClaimAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newMaxTotalClaim",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDecreaseStep",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newBaseInterval",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newIncrementInterval",type:"uint256"}],name:"BeneficiaryParamsUpdated",type:"event",params:{newBaseInterval:"New baseInterval value",newDecreaseStep:"New decreaseStep value",newIncrementInterval:"New incrementInterval value For further information regarding each parameter, see *Community* smart contract initialize method.",newMaxTotalClaim:"New maxTotalClaim value",newOriginalClaimAmount:"New originalClaimAmount value",oldBaseInterval:"Old baseInterval value",oldDecreaseStep:"Old decreaseStep value",oldIncrementInterval:"Old incrementInterval value",oldMaxTotalClaim:"Old maxTotalClaim value",oldOriginalClaimAmount:"Old originalClaimAmount value"},notice:"Triggered when beneficiary params has been updated"},"BeneficiaryRemoved(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"manager",type:"address"},{indexed:!0,internalType:"address",name:"beneficiary",type:"address"}],name:"BeneficiaryRemoved",type:"event",params:{beneficiary:"Address of the beneficiary that has been removed",manager:"Address of the manager that triggered the event"},notice:"Triggered when a beneficiary has been removed"},"BeneficiaryUnlocked(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"manager",type:"address"},{indexed:!0,internalType:"address",name:"beneficiary",type:"address"}],name:"BeneficiaryUnlocked",type:"event",params:{beneficiary:"Address of the beneficiary that has been unlocked",manager:"Address of the manager that triggered the event"},notice:"Triggered when a beneficiary has been unlocked"},"ClaimAmountUpdated(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldClaimAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newClaimAmount",type:"uint256"}],name:"ClaimAmountUpdated",type:"event",params:{newClaimAmount:"New claimAmount value",oldClaimAmount:"Old claimAmount value"},notice:"Triggered when claimAmount has been changed"},"CommunityAdminUpdated(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"oldCommunityAdmin",type:"address"},{indexed:!0,internalType:"address",name:"newCommunityAdmin",type:"address"}],name:"CommunityAdminUpdated",type:"event",params:{newCommunityAdmin:"New communityAdmin address",oldCommunityAdmin:"Old communityAdmin address"},notice:"Triggered when communityAdmin has been updated"},"CommunityLocked(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"manager",type:"address"}],name:"CommunityLocked",type:"event",params:{manager:"Address of the manager that triggered the event"},notice:"Triggered when a community has been locked"},"CommunityParamsUpdated(uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldMinTranche",type:"uint256"},{indexed:!1,internalType:"uint256",name:"oldMaxTranche",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newMinTranche",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newMaxTranche",type:"uint256"}],name:"CommunityParamsUpdated",type:"event",params:{newMaxTranche:"New maxTranche value For further information regarding each parameter, see *Community* smart contract initialize method.",newMinTranche:"New minTranche value",oldMaxTranche:"Old maxTranche value",oldMinTranche:"Old minTranche value"},notice:"Triggered when community params has been updated"},"CommunityUnlocked(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"manager",type:"address"}],name:"CommunityUnlocked",type:"event",params:{manager:"Address of the manager that triggered the event"},notice:"Triggered when a community has been unlocked"},"Donate(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"donor",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Donate",type:"event",params:{amount:"Amount of the donation",donor:"Address of the donor"},notice:"Triggered when someone has donated token"},"FundsRequested(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"manager",type:"address"}],name:"FundsRequested",type:"event",params:{manager:"Address of the manager that triggered the event"},notice:"Triggered when a manager has requested funds for community"},"ManagerAdded(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"manager",type:"address"},{indexed:!0,internalType:"address",name:"account",type:"address"}],name:"ManagerAdded",type:"event",params:{account:"Address of the manager that has been added",manager:"Address of the manager that triggered the event                          or address of the CommunityAdmin if it's first manager"},notice:"Triggered when a manager has been added"},"ManagerRemoved(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"manager",type:"address"},{indexed:!0,internalType:"address",name:"account",type:"address"}],name:"ManagerRemoved",type:"event",params:{account:"Address of the manager that has been removed",manager:"Address of the manager that triggered the event"},notice:"Triggered when a manager has been removed"},"MaxBeneficiariesUpdated(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldMaxBeneficiaries",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newMaxBeneficiaries",type:"uint256"}],name:"MaxBeneficiariesUpdated",type:"event",params:{newMaxBeneficiaries:"New maxBeneficiaries value",oldMaxBeneficiaries:"Old maxBeneficiaries value"},notice:"Triggered when maxBeneficiaries has been updated"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"PreviousCommunityUpdated(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"oldPreviousCommunity",type:"address"},{indexed:!0,internalType:"address",name:"newPreviousCommunity",type:"address"}],name:"PreviousCommunityUpdated",type:"event",params:{newPreviousCommunity:"New previousCommunity address",oldPreviousCommunity:"Old previousCommunity address"},notice:"Triggered when previousCommunity has been updated"},"RoleAdminChanged(bytes32,bytes32,bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},"RoleGranted(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},"RoleRevoked(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},"TokenUpdated(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"oldTokenAddress",type:"address"},{indexed:!0,internalType:"address",name:"newTokenAddress",type:"address"}],name:"TokenUpdated",type:"event",params:{newTokenAddress:"New token address",oldTokenAddress:"Old token address"},notice:"Triggered when token address has been updated"},"TransferERC20(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TransferERC20",type:"event",params:{amount:"Amount of the transaction",to:"Address of the receiver",token:"ERC20 token address"},notice:"Triggered when an amount of an ERC20 has been transferred from this contract to an address"}},methods:{"DEFAULT_ADMIN_ROLE()":{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"_token()":{inputs:[],name:"_token",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"addBeneficiaries(address[])":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"}],name:"addBeneficiaries",outputs:[],stateMutability:"nonpayable",type:"function",params:{_beneficiaryAddresses:"addresses of the beneficiaries to be added"},notice:"Adds new beneficiaries"},"addBeneficiariesUsingSignature(address[],uint256,bytes)":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"},{internalType:"uint256",name:"_expirationTimestamp",type:"uint256"},{internalType:"bytes",name:"_signature",type:"bytes"}],name:"addBeneficiariesUsingSignature",outputs:[],stateMutability:"nonpayable",type:"function",params:{_beneficiaryAddresses:"addresses of the beneficiaries to be added",_expirationTimestamp:"timestamp when the signature will expire/expired",_signature:"the signature of a manager"},notice:"Adds new beneficiaries using a manager signature"},"addBeneficiary(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"addBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function",params:{_beneficiaryAddress:"address of the beneficiary to be added"},notice:"Adds a new beneficiary"},"addCopy(address)":{inputs:[{internalType:"contract ICommunity",name:"_copy",type:"address"}],name:"addCopy",outputs:[],stateMutability:"nonpayable",type:"function",params:{_copy:"address of the 'child' community"},notice:"Adds a new copy of this community"},"addManager(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"addManager",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"address of the manager to be added"},notice:"Adds a new manager"},"baseInterval()":{inputs:[],name:"baseInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"beneficiaries(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"beneficiaries",outputs:[{internalType:"enum ICommunity.BeneficiaryState",name:"state",type:"uint8"},{internalType:"uint256",name:"claims",type:"uint256"},{internalType:"uint256",name:"claimedAmount",type:"uint256"},{internalType:"uint256",name:"lastClaim",type:"uint256"}],stateMutability:"view",type:"function",params:{_beneficiaryAddress:"address of the beneficiary"},returns:{claimedAmount:"        the amount he has claimed",claims:"               how many times the beneficiary has claimed",lastClaim:"            block number of the last claim",state:"                the status of the beneficiary"},notice:"Returns the data of a beneficiary"},"beneficiaryClaimedAmounts(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"beneficiaryClaimedAmounts",outputs:[{internalType:"uint256[]",name:"claimedAmounts",type:"uint256[]"}],stateMutability:"view",type:"function",params:{_beneficiaryAddress:"address of the beneficiary"},returns:{claimedAmounts:"       a uint256 array with all claimed amounts in the same order as tokenList array"},notice:"Returns the beneficiary's claimed amounts for each token"},"beneficiaryJoinFromMigrated(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"beneficiaryJoinFromMigrated",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Allows a beneficiary from the previousCommunity to join in this community"},"beneficiaryListAt(uint256)":{inputs:[{internalType:"uint256",name:"index_",type:"uint256"}],name:"beneficiaryListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",params:{index_:"index value"},returns:{_0:"address of the beneficiary"},notice:"Returns an address from the beneficiaryList"},"beneficiaryListLength()":{inputs:[],name:"beneficiaryListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Returns the length of the beneficiaryList"},"cUSD()":{inputs:[],name:"cUSD",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the cUSD contract address todo: to be removed, use token() instead"},"changeBeneficiaryAddress(address)":{inputs:[{internalType:"address",name:"_newBeneficiaryAddress",type:"address"}],name:"changeBeneficiaryAddress",outputs:[],stateMutability:"nonpayable",type:"function",details:"used by beneficiaries",notice:"Allows a beneficiary to use another address this action adds claim details from both addresses"},"changeBeneficiaryAddressByManager(address,address)":{inputs:[{internalType:"address",name:"_oldBeneficiaryAddress",type:"address"},{internalType:"address",name:"_newBeneficiaryAddress",type:"address"}],name:"changeBeneficiaryAddressByManager",outputs:[],stateMutability:"nonpayable",type:"function",details:"used by managers",notice:"Changes the address of a beneficiary this action adds claim details from both addresses"},"claim()":{inputs:[],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers tokens to a valid beneficiary"},"claimAmount()":{inputs:[],name:"claimAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"claimCooldown(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"claimCooldown",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_beneficiaryAddress:"address of the beneficiary"},returns:{_0:"uint256 number of block when the beneficiary can claim"},notice:"Returns the block number when a beneficiary can claim again"},"communityAdmin()":{inputs:[],name:"communityAdmin",outputs:[{internalType:"contract ICommunityAdmin",name:"",type:"address"}],stateMutability:"view",type:"function"},"copies()":{inputs:[],name:"copies",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function",notice:"Returns the list with all communities copies"},"copyBeneficiaries(address[])":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"}],name:"copyBeneficiaries",outputs:[],stateMutability:"nonpayable",type:"function",params:{_beneficiaryAddresses:"addresses of the beneficiaries to be copied"},notice:"Copies beneficiaries from the original community"},"copyCommunityDetails(address)":{inputs:[{internalType:"contract ICommunity",name:"_originalCommunity",type:"address"}],name:"copyCommunityDetails",outputs:[],stateMutability:"nonpayable",type:"function",params:{_originalCommunity:"address of the 'parent' community"},notice:"Copies the original community details that haven't been copied in the initialize method  !!used only by communityAdmin.copyCommunity method"},"copyOf()":{inputs:[],name:"copyOf",outputs:[{internalType:"contract ICommunity",name:"",type:"address"}],stateMutability:"view",type:"function"},"decreaseStep()":{inputs:[],name:"decreaseStep",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donate(address,uint256)":{inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"donate",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"amount to be donated",_sender:"address of the sender"},notice:"Transfers tokens from donor to this community Used by donationToCommunity method from DonationMiner contract"},"getInitialMaxClaim()":{inputs:[],name:"getInitialMaxClaim",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Returns the initial maxTotalClaim todo: do be deleted after updating all communities to v3"},"getInitialMaxTotalClaim()":{inputs:[],name:"getInitialMaxTotalClaim",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Returns the initial maxTotalClaim"},"getRoleAdmin(bytes32)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function",notice:"Returns the current implementation version"},"grantRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"",type:"address"}],name:"grantRole",outputs:[],stateMutability:"pure",type:"function",notice:"Enforces managers to use addManager method"},"hasRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns `true` if `account` has been granted `role`."},"impactMarketAddress()":{inputs:[],name:"impactMarketAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"pure",type:"function",notice:"Returns the 0 address only used for backwards compatibility"},"incrementInterval()":{inputs:[],name:"incrementInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"initialize(address,address[],uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"address[]",name:"_managers",type:"address[]"},{internalType:"uint256",name:"_originalClaimAmount",type:"uint256"},{internalType:"uint256",name:"_maxTotalClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"},{internalType:"uint256",name:"_minTranche",type:"uint256"},{internalType:"uint256",name:"_maxTranche",type:"uint256"},{internalType:"uint256",name:"_maxBeneficiaries",type:"uint256"},{internalType:"contract ICommunity",name:"_previousCommunity",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",params:{_baseInterval:"Base interval to start claiming",_decreaseStep:"Value decreased from maxTotalClaim each time a beneficiary is added",_incrementInterval:"Increment interval used in each claim",_managers:"Community's initial managers                             Will be able to add others",_maxBeneficiaries:"Maximum valid beneficiaries number",_maxTotalClaim:"Limit that a beneficiary can claim in total",_maxTranche:"Maximum amount that the community will receive when requesting funds",_minTranche:"Minimum amount that the community will receive when requesting funds",_originalClaimAmount:"Maximum base amount to be claim by the beneficiary",_previousCommunity:"Previous smart contract address of community",_tokenAddress:"Address of the token used by the community"},notice:"Used to initialize a new Community contract"},"isSelfFunding()":{inputs:[],name:"isSelfFunding",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"lastFundRequest()":{inputs:[],name:"lastFundRequest",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lastInterval(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"lastInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_beneficiaryAddress:"address of the beneficiary"},returns:{_0:"uint256 number of blocks for the lastInterval"},notice:"Returns the number of blocks that a beneficiary have to wait between claims"},"lock()":{inputs:[],name:"lock",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Locks the community"},"lockBeneficiaries(address[])":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"}],name:"lockBeneficiaries",outputs:[],stateMutability:"nonpayable",type:"function",params:{_beneficiaryAddresses:"addresses of the beneficiaries to be locked"},notice:"Locks a list of beneficiaries"},"lockBeneficiariesUsingSignature(address[],uint256,bytes)":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"},{internalType:"uint256",name:"_expirationTimestamp",type:"uint256"},{internalType:"bytes",name:"_signature",type:"bytes"}],name:"lockBeneficiariesUsingSignature",outputs:[],stateMutability:"nonpayable",type:"function",params:{_beneficiaryAddresses:"addresses of the beneficiaries to be locked",_expirationTimestamp:"timestamp when the signature will expire/expired",_signature:"the signature of a manager"},notice:"Locks a list of beneficiaries using a manager signature"},"lockBeneficiary(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"lockBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function",params:{_beneficiaryAddress:"address of the beneficiary to be locked"},notice:"Locks a valid beneficiary"},"locked()":{inputs:[],name:"locked",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"maxBeneficiaries()":{inputs:[],name:"maxBeneficiaries",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxClaim()":{inputs:[],name:"maxClaim",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Returns the amount that can be claimed by a beneficiary in total todo: remove it after the frontend is updated to the new function: maxTotalClaim()"},"maxTotalClaim()":{inputs:[],name:"maxTotalClaim",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxTranche()":{inputs:[],name:"maxTranche",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"minTranche()":{inputs:[],name:"minTranche",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"originalClaimAmount()":{inputs:[],name:"originalClaimAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"previousCommunity()":{inputs:[],name:"previousCommunity",outputs:[{internalType:"contract ICommunity",name:"",type:"address"}],stateMutability:"view",type:"function"},"privateFunds()":{inputs:[],name:"privateFunds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"removeBeneficiaries(address[])":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"}],name:"removeBeneficiaries",outputs:[],stateMutability:"nonpayable",type:"function",params:{_beneficiaryAddresses:"addresses of the beneficiaries to be removed"},notice:"Removes a list of beneficiaries"},"removeBeneficiariesUsingSignature(address[],uint256,bytes)":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"},{internalType:"uint256",name:"_expirationTimestamp",type:"uint256"},{internalType:"bytes",name:"_signature",type:"bytes"}],name:"removeBeneficiariesUsingSignature",outputs:[],stateMutability:"nonpayable",type:"function",params:{_beneficiaryAddresses:"addresses of the beneficiaries to be removed",_expirationTimestamp:"timestamp when the signature will expire/expired",_signature:"the signature of a manager"},notice:"Removes a list of beneficiaries using a manager signature"},"removeBeneficiary(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"removeBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function",params:{_beneficiaryAddress:"address of the beneficiary to be removed"},notice:"Remove an existing beneficiary"},"removeManager(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"removeManager",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"address of the manager to be removed"},notice:"Remove an existing manager"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"renounceRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"requestFunds()":{inputs:[],name:"requestFunds",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Requests treasury funds from the communityAdmin"},"revokeRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"pure",type:"function",notice:"Enforces managers to use removeManager method"},"setBeneficiaryState(address,uint8)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"},{internalType:"enum ICommunity.BeneficiaryState",name:"_state",type:"uint8"}],name:"setBeneficiaryState",outputs:[],stateMutability:"nonpayable",type:"function",params:{_beneficiaryAddress:"address of the beneficiary",_state:"beneficiary's state"},notice:"Sets a beneficiary's state"},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC165-supportsInterface}."},"token()":{inputs:[],name:"token",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the address of the token used by this community"},"tokenList()":{inputs:[],name:"tokenList",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},"tokenUpdates(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"tokenUpdates",outputs:[{internalType:"address",name:"tokenAddress",type:"address"},{internalType:"uint256",name:"ratio",type:"uint256"},{internalType:"uint256",name:"startBlock",type:"uint256"}],stateMutability:"view",type:"function"},"tokenUpdatesLength()":{inputs:[],name:"tokenUpdatesLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Returns the length of the tokenList"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"amount of the transaction",_to:"address of the receiver",_token:"address of the ERC20 token"},notice:"Transfers an amount of an ERC20 from this contract to an address"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"treasuryFunds()":{inputs:[],name:"treasuryFunds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"unlock()":{inputs:[],name:"unlock",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Unlocks the community"},"unlockBeneficiaries(address[])":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"}],name:"unlockBeneficiaries",outputs:[],stateMutability:"nonpayable",type:"function",params:{_beneficiaryAddresses:"addresses of the beneficiaries to be unlocked"},notice:"Unlocks a list of beneficiaries"},"unlockBeneficiariesUsingSignature(address[],uint256,bytes)":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"},{internalType:"uint256",name:"_expirationTimestamp",type:"uint256"},{internalType:"bytes",name:"_signature",type:"bytes"}],name:"unlockBeneficiariesUsingSignature",outputs:[],stateMutability:"nonpayable",type:"function",params:{_beneficiaryAddresses:"addresses of the beneficiaries to be unlocked",_expirationTimestamp:"timestamp when the signature will expire/expired",_signature:"the signature of a manager"},notice:"Unlocks a list of beneficiaries using a manager signature"},"unlockBeneficiary(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"unlockBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function",params:{_beneficiaryAddress:"address of the beneficiary to be unlocked"},notice:"Unlocks a locked beneficiary"},"updateBeneficiaryParams(uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"_originalClaimAmount",type:"uint256"},{internalType:"uint256",name:"_maxTotalClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"}],name:"updateBeneficiaryParams",outputs:[],stateMutability:"nonpayable",type:"function",params:{_baseInterval:"base interval to start claiming",_decreaseStep:"value decreased from maxTotalClaim each time a is beneficiary added",_incrementInterval:"increment interval used in each claim",_maxTotalClaim:"limit that a beneficiary can claim  in total",_originalClaimAmount:"maximum base amount to be claim by the beneficiary"},notice:"Updates beneficiary paramsbe aware that max claim will not be the same with the value you've provided             maxTotalClaim = _maxTotalClaim - validBeneficiaryCount * _decreaseStep"},"updateCommunityAdmin(address)":{inputs:[{internalType:"contract ICommunityAdmin",name:"_newCommunityAdmin",type:"address"}],name:"updateCommunityAdmin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newCommunityAdmin:"address of the new communityAdmin"},notice:"Updates the address of the communityAdmin"},"updateCommunityParams(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_minTranche",type:"uint256"},{internalType:"uint256",name:"_maxTranche",type:"uint256"}],name:"updateCommunityParams",outputs:[],stateMutability:"nonpayable",type:"function",params:{_maxTranche:"maximum amount that the community will receive when requesting funds",_minTranche:"minimum amount that the community will receive when requesting funds"},notice:"Updates params of a community"},"updateMaxBeneficiaries(uint256)":{inputs:[{internalType:"uint256",name:"_newMaxBeneficiaries",type:"uint256"}],name:"updateMaxBeneficiaries",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newMaxBeneficiaries:"new _maxBeneficiaries value"},notice:"Updates maxBeneficiaries"},"updatePreviousCommunity(address)":{inputs:[{internalType:"contract ICommunity",name:"_newPreviousCommunity",type:"address"}],name:"updatePreviousCommunity",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newPreviousCommunity:"address of the new previousCommunity"},notice:"Updates the address of the previousCommunity"},"updateToken(address,bytes,uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_newToken",type:"address"},{internalType:"bytes",name:"_exchangePath",type:"bytes"},{internalType:"uint256",name:"_originalClaimAmount",type:"uint256"},{internalType:"uint256",name:"_maxTotalClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"}],name:"updateToken",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Updates token address   !!!!!! you must be careful about _maxTotalClaim value. This value determines all beneficiaries claimedAmounts"},"validBeneficiaryCount()":{inputs:[],name:"validBeneficiaryCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/community/CommunityMiddleProxy.sol:CommunityMiddleProxy":{source:"contracts/community/CommunityMiddleProxy.sol",name:"CommunityMiddleProxy",constructor:{inputs:[{internalType:"address",name:"_fakeLogic",type:"address"},{internalType:"address",name:"_fakeProxyAdmin",type:"address"}],stateMutability:"nonpayable",type:"constructor"},fallback:{stateMutability:"payable",type:"fallback"},receive:{stateMutability:"payable",type:"receive"},events:{"AdminChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"previousAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"AdminChanged",type:"event"},"BeaconUpgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"beacon",type:"address"}],name:"BeaconUpgraded",type:"event"},"Upgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"implementation",type:"address"}],name:"Upgraded",type:"event"}},methods:{"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"admin_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"changeAdmin(address)":{inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"changeAdmin",outputs:[],stateMutability:"nonpayable",type:"function",details:"Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."},"implementation()":{inputs:[],name:"implementation",outputs:[{internalType:"address",name:"implementation_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"},"upgradeTo(address)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"}],name:"upgradeTo",outputs:[],stateMutability:"nonpayable",type:"function",details:"Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."},"upgradeToAndCall(address,bytes)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"upgradeToAndCall",outputs:[],stateMutability:"payable",type:"function",details:"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."}}},"contracts/community/interfaces/CommunityAdminStorageV1.sol:CommunityAdminStorageV1":{source:"contracts/community/interfaces/CommunityAdminStorageV1.sol",name:"CommunityAdminStorageV1",title:"Storage for CommunityAdmin",notice:"For future upgrades, do not change CommunityAdminStorageV1. Create a new contract which implements CommunityAdminStorageV1 and following the naming convention CommunityAdminStorageVX.",methods:{"addCommunity(address,address[],address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"address[]",name:"_managers",type:"address[]"},{internalType:"address",name:"_ambassador",type:"address"},{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"},{internalType:"uint256",name:"_minTranche",type:"uint256"},{internalType:"uint256",name:"_maxTranche",type:"uint256"},{internalType:"uint256",name:"_maxBeneficiaries",type:"uint256"}],name:"addCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"ambassadors()":{inputs:[],name:"ambassadors",outputs:[{internalType:"contract IAmbassadors",name:"",type:"address"}],stateMutability:"view",type:"function"},"authorizedWalletAddress()":{inputs:[],name:"authorizedWalletAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"cUSD()":{inputs:[],name:"cUSD",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"calculateCommunityTrancheAmount(address)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"}],name:"calculateCommunityTrancheAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"communities(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"communities",outputs:[{internalType:"enum ICommunityAdmin.CommunityState",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"communityImplementation()":{inputs:[],name:"communityImplementation",outputs:[{internalType:"contract ICommunity",name:"",type:"address"}],stateMutability:"view",type:"function"},"communityListAt(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"communityListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"communityListLength()":{inputs:[],name:"communityListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"communityMiddleProxy()":{inputs:[],name:"communityMiddleProxy",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"communityProxyAdmin()":{inputs:[],name:"communityProxyAdmin",outputs:[{internalType:"contract ProxyAdmin",name:"",type:"address"}],stateMutability:"view",type:"function"},"fundCommunity()":{inputs:[],name:"fundCommunity",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"getCommunityProxyImplementation(address)":{inputs:[{internalType:"address",name:"_communityProxyAddress",type:"address"}],name:"getCommunityProxyImplementation",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"impactMarketCouncil()":{inputs:[],name:"impactMarketCouncil",outputs:[{internalType:"contract IImpactMarketCouncil",name:"",type:"address"}],stateMutability:"view",type:"function"},"isAmbassadorOrEntityOfCommunity(address,address)":{inputs:[{internalType:"address",name:"_community",type:"address"},{internalType:"address",name:"_ambassadorOrEntity",type:"address"}],name:"isAmbassadorOrEntityOfCommunity",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"migrateCommunity(address[],address)":{inputs:[{internalType:"address[]",name:"_managers",type:"address[]"},{internalType:"contract ICommunity",name:"_previousCommunity",type:"address"}],name:"migrateCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"minClaimAmountRatio()":{inputs:[],name:"minClaimAmountRatio",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"minClaimAmountRatioPrecision()":{inputs:[],name:"minClaimAmountRatioPrecision",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"removeCommunity(address)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"}],name:"removeCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"setCommunityToAmbassador(address,address)":{inputs:[{internalType:"address",name:"_ambassador",type:"address"},{internalType:"contract ICommunity",name:"_communityAddress",type:"address"}],name:"setCommunityToAmbassador",outputs:[],stateMutability:"nonpayable",type:"function"},"splitCommunity(address,uint256,address,address[])":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"uint256",name:"_numberOfCopies",type:"uint256"},{internalType:"address",name:"_ambassador",type:"address"},{internalType:"address[]",name:"_managers",type:"address[]"}],name:"splitCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function"},"transferFromCommunity(address,address,address,uint256)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferFromCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"transferToBeneficiary(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"beneficiary",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferToBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function"},"treasury()":{inputs:[],name:"treasury",outputs:[{internalType:"contract ITreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"treasuryMinBalance()":{inputs:[],name:"treasuryMinBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"treasurySafetyPercentage()":{inputs:[],name:"treasurySafetyPercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"updateAmbassadors(address)":{inputs:[{internalType:"contract IAmbassadors",name:"_newAmbassadors",type:"address"}],name:"updateAmbassadors",outputs:[],stateMutability:"nonpayable",type:"function"},"updateAuthorizedWalletAddress(address)":{inputs:[{internalType:"address",name:"_newSignerAddress",type:"address"}],name:"updateAuthorizedWalletAddress",outputs:[],stateMutability:"nonpayable",type:"function"},"updateBeneficiaryParams(address,uint256,uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"},{internalType:"uint256",name:"_maxBeneficiaries",type:"uint256"}],name:"updateBeneficiaryParams",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityImplementation(address)":{inputs:[{internalType:"contract ICommunity",name:"_communityImplementation_",type:"address"}],name:"updateCommunityImplementation",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityMiddleProxy(address)":{inputs:[{internalType:"address",name:"_communityMiddleProxy",type:"address"}],name:"updateCommunityMiddleProxy",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityParams(address,uint256,uint256)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"uint256",name:"_minTranche",type:"uint256"},{internalType:"uint256",name:"_maxTranche",type:"uint256"}],name:"updateCommunityParams",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityToken(address,address,bytes,uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"contract IERC20Upgradeable",name:"_newToken",type:"address"},{internalType:"bytes",name:"_exchangePath",type:"bytes"},{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"}],name:"updateCommunityToken",outputs:[],stateMutability:"nonpayable",type:"function"},"updateImpactMarketCouncil(address)":{inputs:[{internalType:"contract IImpactMarketCouncil",name:"_newImpactMarketCouncil",type:"address"}],name:"updateImpactMarketCouncil",outputs:[],stateMutability:"nonpayable",type:"function"},"updateMinClaimAmountRatio(uint256)":{inputs:[{internalType:"uint256",name:"_newMinClaimAmountRatio",type:"uint256"}],name:"updateMinClaimAmountRatio",outputs:[],stateMutability:"nonpayable",type:"function"},"updateProxyImplementation(address,address)":{inputs:[{internalType:"address",name:"_communityMiddleProxy",type:"address"},{internalType:"address",name:"_newLogic",type:"address"}],name:"updateProxyImplementation",outputs:[],stateMutability:"nonpayable",type:"function"},"updateTreasury(address)":{inputs:[{internalType:"contract ITreasury",name:"_newTreasury",type:"address"}],name:"updateTreasury",outputs:[],stateMutability:"nonpayable",type:"function"},"updateTreasuryMinBalance(uint256)":{inputs:[{internalType:"uint256",name:"_newTreasuryMinBalance",type:"uint256"}],name:"updateTreasuryMinBalance",outputs:[],stateMutability:"nonpayable",type:"function"},"updateTreasurySafetyPercentage(uint256)":{inputs:[{internalType:"uint256",name:"_newTreasurySafetyPercentage",type:"uint256"}],name:"updateTreasurySafetyPercentage",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/community/interfaces/CommunityAdminStorageV2.sol:CommunityAdminStorageV2":{source:"contracts/community/interfaces/CommunityAdminStorageV2.sol",name:"CommunityAdminStorageV2",title:"Storage for CommunityAdmin",notice:"For future upgrades, do not change CommunityAdminStorageV1. Create a new contract which implements CommunityAdminStorageV1 and following the naming convention CommunityAdminStorageVX.",methods:{"addCommunity(address,address[],address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"address[]",name:"_managers",type:"address[]"},{internalType:"address",name:"_ambassador",type:"address"},{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"},{internalType:"uint256",name:"_minTranche",type:"uint256"},{internalType:"uint256",name:"_maxTranche",type:"uint256"},{internalType:"uint256",name:"_maxBeneficiaries",type:"uint256"}],name:"addCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"ambassadors()":{inputs:[],name:"ambassadors",outputs:[{internalType:"contract IAmbassadors",name:"",type:"address"}],stateMutability:"view",type:"function"},"authorizedWalletAddress()":{inputs:[],name:"authorizedWalletAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"cUSD()":{inputs:[],name:"cUSD",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"calculateCommunityTrancheAmount(address)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"}],name:"calculateCommunityTrancheAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"communities(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"communities",outputs:[{internalType:"enum ICommunityAdmin.CommunityState",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"communityImplementation()":{inputs:[],name:"communityImplementation",outputs:[{internalType:"contract ICommunity",name:"",type:"address"}],stateMutability:"view",type:"function"},"communityListAt(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"communityListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"communityListLength()":{inputs:[],name:"communityListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"communityMiddleProxy()":{inputs:[],name:"communityMiddleProxy",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"communityProxyAdmin()":{inputs:[],name:"communityProxyAdmin",outputs:[{internalType:"contract ProxyAdmin",name:"",type:"address"}],stateMutability:"view",type:"function"},"fundCommunity()":{inputs:[],name:"fundCommunity",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"getCommunityProxyImplementation(address)":{inputs:[{internalType:"address",name:"_communityProxyAddress",type:"address"}],name:"getCommunityProxyImplementation",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"impactMarketCouncil()":{inputs:[],name:"impactMarketCouncil",outputs:[{internalType:"contract IImpactMarketCouncil",name:"",type:"address"}],stateMutability:"view",type:"function"},"isAmbassadorOrEntityOfCommunity(address,address)":{inputs:[{internalType:"address",name:"_community",type:"address"},{internalType:"address",name:"_ambassadorOrEntity",type:"address"}],name:"isAmbassadorOrEntityOfCommunity",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"migrateCommunity(address[],address)":{inputs:[{internalType:"address[]",name:"_managers",type:"address[]"},{internalType:"contract ICommunity",name:"_previousCommunity",type:"address"}],name:"migrateCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"minClaimAmountRatio()":{inputs:[],name:"minClaimAmountRatio",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"minClaimAmountRatioPrecision()":{inputs:[],name:"minClaimAmountRatioPrecision",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"removeCommunity(address)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"}],name:"removeCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"setCommunityToAmbassador(address,address)":{inputs:[{internalType:"address",name:"_ambassador",type:"address"},{internalType:"contract ICommunity",name:"_communityAddress",type:"address"}],name:"setCommunityToAmbassador",outputs:[],stateMutability:"nonpayable",type:"function"},"splitCommunity(address,uint256,address,address[])":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"uint256",name:"_numberOfCopies",type:"uint256"},{internalType:"address",name:"_ambassador",type:"address"},{internalType:"address[]",name:"_managers",type:"address[]"}],name:"splitCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function"},"transferFromCommunity(address,address,address,uint256)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferFromCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"transferToBeneficiary(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"beneficiary",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferToBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function"},"treasury()":{inputs:[],name:"treasury",outputs:[{internalType:"contract ITreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"treasuryMinBalance()":{inputs:[],name:"treasuryMinBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"treasurySafetyPercentage()":{inputs:[],name:"treasurySafetyPercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"updateAmbassadors(address)":{inputs:[{internalType:"contract IAmbassadors",name:"_newAmbassadors",type:"address"}],name:"updateAmbassadors",outputs:[],stateMutability:"nonpayable",type:"function"},"updateAuthorizedWalletAddress(address)":{inputs:[{internalType:"address",name:"_newSignerAddress",type:"address"}],name:"updateAuthorizedWalletAddress",outputs:[],stateMutability:"nonpayable",type:"function"},"updateBeneficiaryParams(address,uint256,uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"},{internalType:"uint256",name:"_maxBeneficiaries",type:"uint256"}],name:"updateBeneficiaryParams",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityImplementation(address)":{inputs:[{internalType:"contract ICommunity",name:"_communityImplementation_",type:"address"}],name:"updateCommunityImplementation",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityMiddleProxy(address)":{inputs:[{internalType:"address",name:"_communityMiddleProxy",type:"address"}],name:"updateCommunityMiddleProxy",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityParams(address,uint256,uint256)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"uint256",name:"_minTranche",type:"uint256"},{internalType:"uint256",name:"_maxTranche",type:"uint256"}],name:"updateCommunityParams",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityToken(address,address,bytes,uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"contract IERC20Upgradeable",name:"_newToken",type:"address"},{internalType:"bytes",name:"_exchangePath",type:"bytes"},{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"}],name:"updateCommunityToken",outputs:[],stateMutability:"nonpayable",type:"function"},"updateImpactMarketCouncil(address)":{inputs:[{internalType:"contract IImpactMarketCouncil",name:"_newImpactMarketCouncil",type:"address"}],name:"updateImpactMarketCouncil",outputs:[],stateMutability:"nonpayable",type:"function"},"updateMinClaimAmountRatio(uint256)":{inputs:[{internalType:"uint256",name:"_newMinClaimAmountRatio",type:"uint256"}],name:"updateMinClaimAmountRatio",outputs:[],stateMutability:"nonpayable",type:"function"},"updateProxyImplementation(address,address)":{inputs:[{internalType:"address",name:"_communityMiddleProxy",type:"address"},{internalType:"address",name:"_newLogic",type:"address"}],name:"updateProxyImplementation",outputs:[],stateMutability:"nonpayable",type:"function"},"updateTreasury(address)":{inputs:[{internalType:"contract ITreasury",name:"_newTreasury",type:"address"}],name:"updateTreasury",outputs:[],stateMutability:"nonpayable",type:"function"},"updateTreasuryMinBalance(uint256)":{inputs:[{internalType:"uint256",name:"_newTreasuryMinBalance",type:"uint256"}],name:"updateTreasuryMinBalance",outputs:[],stateMutability:"nonpayable",type:"function"},"updateTreasurySafetyPercentage(uint256)":{inputs:[{internalType:"uint256",name:"_newTreasurySafetyPercentage",type:"uint256"}],name:"updateTreasurySafetyPercentage",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/community/interfaces/CommunityAdminStorageV3.sol:CommunityAdminStorageV3":{source:"contracts/community/interfaces/CommunityAdminStorageV3.sol",name:"CommunityAdminStorageV3",title:"Storage for CommunityAdmin",notice:"For future upgrades, do not change CommunityAdminStorageV2. Create a new contract which implements CommunityAdminStorageV2 and following the naming convention CommunityAdminStorageVX.",methods:{"addCommunity(address,address[],address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"address[]",name:"_managers",type:"address[]"},{internalType:"address",name:"_ambassador",type:"address"},{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"},{internalType:"uint256",name:"_minTranche",type:"uint256"},{internalType:"uint256",name:"_maxTranche",type:"uint256"},{internalType:"uint256",name:"_maxBeneficiaries",type:"uint256"}],name:"addCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"ambassadors()":{inputs:[],name:"ambassadors",outputs:[{internalType:"contract IAmbassadors",name:"",type:"address"}],stateMutability:"view",type:"function"},"authorizedWalletAddress()":{inputs:[],name:"authorizedWalletAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"cUSD()":{inputs:[],name:"cUSD",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"calculateCommunityTrancheAmount(address)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"}],name:"calculateCommunityTrancheAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"communities(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"communities",outputs:[{internalType:"enum ICommunityAdmin.CommunityState",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"communityImplementation()":{inputs:[],name:"communityImplementation",outputs:[{internalType:"contract ICommunity",name:"",type:"address"}],stateMutability:"view",type:"function"},"communityListAt(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"communityListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"communityListLength()":{inputs:[],name:"communityListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"communityMiddleProxy()":{inputs:[],name:"communityMiddleProxy",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"communityProxyAdmin()":{inputs:[],name:"communityProxyAdmin",outputs:[{internalType:"contract ProxyAdmin",name:"",type:"address"}],stateMutability:"view",type:"function"},"fundCommunity()":{inputs:[],name:"fundCommunity",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"getCommunityProxyImplementation(address)":{inputs:[{internalType:"address",name:"_communityProxyAddress",type:"address"}],name:"getCommunityProxyImplementation",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"impactMarketCouncil()":{inputs:[],name:"impactMarketCouncil",outputs:[{internalType:"contract IImpactMarketCouncil",name:"",type:"address"}],stateMutability:"view",type:"function"},"isAmbassadorOrEntityOfCommunity(address,address)":{inputs:[{internalType:"address",name:"_community",type:"address"},{internalType:"address",name:"_ambassadorOrEntity",type:"address"}],name:"isAmbassadorOrEntityOfCommunity",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"migrateCommunity(address[],address)":{inputs:[{internalType:"address[]",name:"_managers",type:"address[]"},{internalType:"contract ICommunity",name:"_previousCommunity",type:"address"}],name:"migrateCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"minClaimAmountRatio()":{inputs:[],name:"minClaimAmountRatio",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"minClaimAmountRatioPrecision()":{inputs:[],name:"minClaimAmountRatioPrecision",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"removeCommunity(address)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"}],name:"removeCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"setCommunityToAmbassador(address,address)":{inputs:[{internalType:"address",name:"_ambassador",type:"address"},{internalType:"contract ICommunity",name:"_communityAddress",type:"address"}],name:"setCommunityToAmbassador",outputs:[],stateMutability:"nonpayable",type:"function"},"splitCommunity(address,uint256,address,address[])":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"uint256",name:"_numberOfCopies",type:"uint256"},{internalType:"address",name:"_ambassador",type:"address"},{internalType:"address[]",name:"_managers",type:"address[]"}],name:"splitCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function"},"transferFromCommunity(address,address,address,uint256)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferFromCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"transferToBeneficiary(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"beneficiary",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferToBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function"},"treasury()":{inputs:[],name:"treasury",outputs:[{internalType:"contract ITreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"treasuryMinBalance()":{inputs:[],name:"treasuryMinBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"treasurySafetyPercentage()":{inputs:[],name:"treasurySafetyPercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"updateAmbassadors(address)":{inputs:[{internalType:"contract IAmbassadors",name:"_newAmbassadors",type:"address"}],name:"updateAmbassadors",outputs:[],stateMutability:"nonpayable",type:"function"},"updateAuthorizedWalletAddress(address)":{inputs:[{internalType:"address",name:"_newSignerAddress",type:"address"}],name:"updateAuthorizedWalletAddress",outputs:[],stateMutability:"nonpayable",type:"function"},"updateBeneficiaryParams(address,uint256,uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"},{internalType:"uint256",name:"_maxBeneficiaries",type:"uint256"}],name:"updateBeneficiaryParams",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityImplementation(address)":{inputs:[{internalType:"contract ICommunity",name:"_communityImplementation_",type:"address"}],name:"updateCommunityImplementation",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityMiddleProxy(address)":{inputs:[{internalType:"address",name:"_communityMiddleProxy",type:"address"}],name:"updateCommunityMiddleProxy",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityParams(address,uint256,uint256)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"uint256",name:"_minTranche",type:"uint256"},{internalType:"uint256",name:"_maxTranche",type:"uint256"}],name:"updateCommunityParams",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityToken(address,address,bytes,uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"contract IERC20Upgradeable",name:"_newToken",type:"address"},{internalType:"bytes",name:"_exchangePath",type:"bytes"},{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"}],name:"updateCommunityToken",outputs:[],stateMutability:"nonpayable",type:"function"},"updateImpactMarketCouncil(address)":{inputs:[{internalType:"contract IImpactMarketCouncil",name:"_newImpactMarketCouncil",type:"address"}],name:"updateImpactMarketCouncil",outputs:[],stateMutability:"nonpayable",type:"function"},"updateMinClaimAmountRatio(uint256)":{inputs:[{internalType:"uint256",name:"_newMinClaimAmountRatio",type:"uint256"}],name:"updateMinClaimAmountRatio",outputs:[],stateMutability:"nonpayable",type:"function"},"updateProxyImplementation(address,address)":{inputs:[{internalType:"address",name:"_communityMiddleProxy",type:"address"},{internalType:"address",name:"_newLogic",type:"address"}],name:"updateProxyImplementation",outputs:[],stateMutability:"nonpayable",type:"function"},"updateTreasury(address)":{inputs:[{internalType:"contract ITreasury",name:"_newTreasury",type:"address"}],name:"updateTreasury",outputs:[],stateMutability:"nonpayable",type:"function"},"updateTreasuryMinBalance(uint256)":{inputs:[{internalType:"uint256",name:"_newTreasuryMinBalance",type:"uint256"}],name:"updateTreasuryMinBalance",outputs:[],stateMutability:"nonpayable",type:"function"},"updateTreasurySafetyPercentage(uint256)":{inputs:[{internalType:"uint256",name:"_newTreasurySafetyPercentage",type:"uint256"}],name:"updateTreasurySafetyPercentage",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/community/interfaces/CommunityStorageV1.sol:CommunityStorageV1":{source:"contracts/community/interfaces/CommunityStorageV1.sol",name:"CommunityStorageV1",title:"Storage for Community",notice:"For future upgrades, do not change CommunityStorageV1. Create a new contract which implements CommunityStorageV1 and following the naming convention CommunityStorageVX.",methods:{"addBeneficiaries(address[])":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"}],name:"addBeneficiaries",outputs:[],stateMutability:"nonpayable",type:"function"},"addBeneficiariesUsingSignature(address[],uint256,bytes)":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"},{internalType:"uint256",name:"_expirationTimestamp",type:"uint256"},{internalType:"bytes",name:"_signature",type:"bytes"}],name:"addBeneficiariesUsingSignature",outputs:[],stateMutability:"nonpayable",type:"function"},"addBeneficiary(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"addBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function"},"addCopy(address)":{inputs:[{internalType:"contract ICommunity",name:"_copy",type:"address"}],name:"addCopy",outputs:[],stateMutability:"nonpayable",type:"function"},"addManager(address)":{inputs:[{internalType:"address",name:"_managerAddress",type:"address"}],name:"addManager",outputs:[],stateMutability:"nonpayable",type:"function"},"baseInterval()":{inputs:[],name:"baseInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"beneficiaries(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"beneficiaries",outputs:[{internalType:"enum ICommunity.BeneficiaryState",name:"state",type:"uint8"},{internalType:"uint256",name:"claims",type:"uint256"},{internalType:"uint256",name:"claimedAmount",type:"uint256"},{internalType:"uint256",name:"lastClaim",type:"uint256"}],stateMutability:"view",type:"function"},"beneficiaryClaimedAmounts(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"beneficiaryClaimedAmounts",outputs:[{internalType:"uint256[]",name:"claimedAmounts",type:"uint256[]"}],stateMutability:"view",type:"function"},"beneficiaryJoinFromMigrated(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"beneficiaryJoinFromMigrated",outputs:[],stateMutability:"nonpayable",type:"function"},"beneficiaryListAt(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"beneficiaryListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"beneficiaryListLength()":{inputs:[],name:"beneficiaryListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"cUSD()":{inputs:[],name:"cUSD",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"changeBeneficiaryAddress(address)":{inputs:[{internalType:"address",name:"_newBeneficiaryAddress",type:"address"}],name:"changeBeneficiaryAddress",outputs:[],stateMutability:"nonpayable",type:"function"},"changeBeneficiaryAddressByManager(address,address)":{inputs:[{internalType:"address",name:"_oldBeneficiaryAddress",type:"address"},{internalType:"address",name:"_newBeneficiaryAddress",type:"address"}],name:"changeBeneficiaryAddressByManager",outputs:[],stateMutability:"nonpayable",type:"function"},"claim()":{inputs:[],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function"},"claimAmount()":{inputs:[],name:"claimAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"claimCooldown(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"claimCooldown",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"communityAdmin()":{inputs:[],name:"communityAdmin",outputs:[{internalType:"contract ICommunityAdmin",name:"",type:"address"}],stateMutability:"view",type:"function"},"copies()":{inputs:[],name:"copies",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},"copyBeneficiaries(address[])":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"}],name:"copyBeneficiaries",outputs:[],stateMutability:"nonpayable",type:"function"},"copyCommunityDetails(address)":{inputs:[{internalType:"contract ICommunity",name:"_originalCommunity",type:"address"}],name:"copyCommunityDetails",outputs:[],stateMutability:"nonpayable",type:"function"},"copyOf()":{inputs:[],name:"copyOf",outputs:[{internalType:"contract ICommunity",name:"",type:"address"}],stateMutability:"view",type:"function"},"decreaseStep()":{inputs:[],name:"decreaseStep",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donate(address,uint256)":{inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"donate",outputs:[],stateMutability:"nonpayable",type:"function"},"getInitialMaxClaim()":{inputs:[],name:"getInitialMaxClaim",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"impactMarketAddress()":{inputs:[],name:"impactMarketAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"pure",type:"function"},"incrementInterval()":{inputs:[],name:"incrementInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"initialize(address,address[],uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"address[]",name:"_managers",type:"address[]"},{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"},{internalType:"uint256",name:"_minTranche",type:"uint256"},{internalType:"uint256",name:"_maxTranche",type:"uint256"},{internalType:"uint256",name:"_maxBeneficiaries",type:"uint256"},{internalType:"contract ICommunity",name:"_previousCommunity",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},"isSelfFunding()":{inputs:[],name:"isSelfFunding",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"lastFundRequest()":{inputs:[],name:"lastFundRequest",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lastInterval(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"lastInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lock()":{inputs:[],name:"lock",outputs:[],stateMutability:"nonpayable",type:"function"},"lockBeneficiaries(address[])":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"}],name:"lockBeneficiaries",outputs:[],stateMutability:"nonpayable",type:"function"},"lockBeneficiariesUsingSignature(address[],uint256,bytes)":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"},{internalType:"uint256",name:"_expirationTimestamp",type:"uint256"},{internalType:"bytes",name:"_signature",type:"bytes"}],name:"lockBeneficiariesUsingSignature",outputs:[],stateMutability:"nonpayable",type:"function"},"lockBeneficiary(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"lockBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function"},"locked()":{inputs:[],name:"locked",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"maxBeneficiaries()":{inputs:[],name:"maxBeneficiaries",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxClaim()":{inputs:[],name:"maxClaim",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxTotalClaim()":{inputs:[],name:"maxTotalClaim",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxTranche()":{inputs:[],name:"maxTranche",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"minTranche()":{inputs:[],name:"minTranche",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"originalClaimAmount()":{inputs:[],name:"originalClaimAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"previousCommunity()":{inputs:[],name:"previousCommunity",outputs:[{internalType:"contract ICommunity",name:"",type:"address"}],stateMutability:"view",type:"function"},"privateFunds()":{inputs:[],name:"privateFunds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"removeBeneficiaries(address[])":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"}],name:"removeBeneficiaries",outputs:[],stateMutability:"nonpayable",type:"function"},"removeBeneficiariesUsingSignature(address[],uint256,bytes)":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"},{internalType:"uint256",name:"_expirationTimestamp",type:"uint256"},{internalType:"bytes",name:"_signature",type:"bytes"}],name:"removeBeneficiariesUsingSignature",outputs:[],stateMutability:"nonpayable",type:"function"},"removeBeneficiary(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"removeBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function"},"removeManager(address)":{inputs:[{internalType:"address",name:"_managerAddress",type:"address"}],name:"removeManager",outputs:[],stateMutability:"nonpayable",type:"function"},"requestFunds()":{inputs:[],name:"requestFunds",outputs:[],stateMutability:"nonpayable",type:"function"},"setBeneficiaryState(address,uint8)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"},{internalType:"enum ICommunity.BeneficiaryState",name:"_state",type:"uint8"}],name:"setBeneficiaryState",outputs:[],stateMutability:"nonpayable",type:"function"},"token()":{inputs:[],name:"token",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"tokenList()":{inputs:[],name:"tokenList",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},"tokenUpdates(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"tokenUpdates",outputs:[{internalType:"address",name:"tokenAddress",type:"address"},{internalType:"uint256",name:"ratio",type:"uint256"},{internalType:"uint256",name:"startBlock",type:"uint256"}],stateMutability:"view",type:"function"},"tokenUpdatesLength()":{inputs:[],name:"tokenUpdatesLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function"},"treasuryFunds()":{inputs:[],name:"treasuryFunds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"unlock()":{inputs:[],name:"unlock",outputs:[],stateMutability:"nonpayable",type:"function"},"unlockBeneficiaries(address[])":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"}],name:"unlockBeneficiaries",outputs:[],stateMutability:"nonpayable",type:"function"},"unlockBeneficiariesUsingSignature(address[],uint256,bytes)":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"},{internalType:"uint256",name:"_expirationTimestamp",type:"uint256"},{internalType:"bytes",name:"_signature",type:"bytes"}],name:"unlockBeneficiariesUsingSignature",outputs:[],stateMutability:"nonpayable",type:"function"},"unlockBeneficiary(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"unlockBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function"},"updateBeneficiaryParams(uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"}],name:"updateBeneficiaryParams",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityAdmin(address)":{inputs:[{internalType:"contract ICommunityAdmin",name:"_communityAdmin",type:"address"}],name:"updateCommunityAdmin",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityParams(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_minTranche",type:"uint256"},{internalType:"uint256",name:"_maxTranche",type:"uint256"}],name:"updateCommunityParams",outputs:[],stateMutability:"nonpayable",type:"function"},"updateMaxBeneficiaries(uint256)":{inputs:[{internalType:"uint256",name:"_newMaxBeneficiaries",type:"uint256"}],name:"updateMaxBeneficiaries",outputs:[],stateMutability:"nonpayable",type:"function"},"updatePreviousCommunity(address)":{inputs:[{internalType:"contract ICommunity",name:"_newPreviousCommunity",type:"address"}],name:"updatePreviousCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"updateToken(address,bytes,uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_newToken",type:"address"},{internalType:"bytes",name:"_exchangePath",type:"bytes"},{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"}],name:"updateToken",outputs:[],stateMutability:"nonpayable",type:"function"},"validBeneficiaryCount()":{inputs:[],name:"validBeneficiaryCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/community/interfaces/CommunityStorageV2.sol:CommunityStorageV2":{source:"contracts/community/interfaces/CommunityStorageV2.sol",name:"CommunityStorageV2",title:"Storage for Community",notice:"For future upgrades, do not change CommunityStorageV2. Create a new contract which implements CommunityStorageV2 and following the naming convention CommunityStorageVX.",methods:{"_token()":{inputs:[],name:"_token",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"addBeneficiaries(address[])":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"}],name:"addBeneficiaries",outputs:[],stateMutability:"nonpayable",type:"function"},"addBeneficiariesUsingSignature(address[],uint256,bytes)":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"},{internalType:"uint256",name:"_expirationTimestamp",type:"uint256"},{internalType:"bytes",name:"_signature",type:"bytes"}],name:"addBeneficiariesUsingSignature",outputs:[],stateMutability:"nonpayable",type:"function"},"addBeneficiary(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"addBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function"},"addCopy(address)":{inputs:[{internalType:"contract ICommunity",name:"_copy",type:"address"}],name:"addCopy",outputs:[],stateMutability:"nonpayable",type:"function"},"addManager(address)":{inputs:[{internalType:"address",name:"_managerAddress",type:"address"}],name:"addManager",outputs:[],stateMutability:"nonpayable",type:"function"},"baseInterval()":{inputs:[],name:"baseInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"beneficiaries(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"beneficiaries",outputs:[{internalType:"enum ICommunity.BeneficiaryState",name:"state",type:"uint8"},{internalType:"uint256",name:"claims",type:"uint256"},{internalType:"uint256",name:"claimedAmount",type:"uint256"},{internalType:"uint256",name:"lastClaim",type:"uint256"}],stateMutability:"view",type:"function"},"beneficiaryClaimedAmounts(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"beneficiaryClaimedAmounts",outputs:[{internalType:"uint256[]",name:"claimedAmounts",type:"uint256[]"}],stateMutability:"view",type:"function"},"beneficiaryJoinFromMigrated(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"beneficiaryJoinFromMigrated",outputs:[],stateMutability:"nonpayable",type:"function"},"beneficiaryListAt(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"beneficiaryListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"beneficiaryListLength()":{inputs:[],name:"beneficiaryListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"cUSD()":{inputs:[],name:"cUSD",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"changeBeneficiaryAddress(address)":{inputs:[{internalType:"address",name:"_newBeneficiaryAddress",type:"address"}],name:"changeBeneficiaryAddress",outputs:[],stateMutability:"nonpayable",type:"function"},"changeBeneficiaryAddressByManager(address,address)":{inputs:[{internalType:"address",name:"_oldBeneficiaryAddress",type:"address"},{internalType:"address",name:"_newBeneficiaryAddress",type:"address"}],name:"changeBeneficiaryAddressByManager",outputs:[],stateMutability:"nonpayable",type:"function"},"claim()":{inputs:[],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function"},"claimAmount()":{inputs:[],name:"claimAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"claimCooldown(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"claimCooldown",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"communityAdmin()":{inputs:[],name:"communityAdmin",outputs:[{internalType:"contract ICommunityAdmin",name:"",type:"address"}],stateMutability:"view",type:"function"},"copies()":{inputs:[],name:"copies",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},"copyBeneficiaries(address[])":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"}],name:"copyBeneficiaries",outputs:[],stateMutability:"nonpayable",type:"function"},"copyCommunityDetails(address)":{inputs:[{internalType:"contract ICommunity",name:"_originalCommunity",type:"address"}],name:"copyCommunityDetails",outputs:[],stateMutability:"nonpayable",type:"function"},"copyOf()":{inputs:[],name:"copyOf",outputs:[{internalType:"contract ICommunity",name:"",type:"address"}],stateMutability:"view",type:"function"},"decreaseStep()":{inputs:[],name:"decreaseStep",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donate(address,uint256)":{inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"donate",outputs:[],stateMutability:"nonpayable",type:"function"},"getInitialMaxClaim()":{inputs:[],name:"getInitialMaxClaim",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"impactMarketAddress()":{inputs:[],name:"impactMarketAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"pure",type:"function"},"incrementInterval()":{inputs:[],name:"incrementInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"initialize(address,address[],uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"address[]",name:"_managers",type:"address[]"},{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"},{internalType:"uint256",name:"_minTranche",type:"uint256"},{internalType:"uint256",name:"_maxTranche",type:"uint256"},{internalType:"uint256",name:"_maxBeneficiaries",type:"uint256"},{internalType:"contract ICommunity",name:"_previousCommunity",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},"isSelfFunding()":{inputs:[],name:"isSelfFunding",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"lastFundRequest()":{inputs:[],name:"lastFundRequest",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lastInterval(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"lastInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lock()":{inputs:[],name:"lock",outputs:[],stateMutability:"nonpayable",type:"function"},"lockBeneficiaries(address[])":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"}],name:"lockBeneficiaries",outputs:[],stateMutability:"nonpayable",type:"function"},"lockBeneficiariesUsingSignature(address[],uint256,bytes)":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"},{internalType:"uint256",name:"_expirationTimestamp",type:"uint256"},{internalType:"bytes",name:"_signature",type:"bytes"}],name:"lockBeneficiariesUsingSignature",outputs:[],stateMutability:"nonpayable",type:"function"},"lockBeneficiary(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"lockBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function"},"locked()":{inputs:[],name:"locked",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"maxBeneficiaries()":{inputs:[],name:"maxBeneficiaries",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxClaim()":{inputs:[],name:"maxClaim",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxTotalClaim()":{inputs:[],name:"maxTotalClaim",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxTranche()":{inputs:[],name:"maxTranche",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"minTranche()":{inputs:[],name:"minTranche",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"originalClaimAmount()":{inputs:[],name:"originalClaimAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"previousCommunity()":{inputs:[],name:"previousCommunity",outputs:[{internalType:"contract ICommunity",name:"",type:"address"}],stateMutability:"view",type:"function"},"privateFunds()":{inputs:[],name:"privateFunds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"removeBeneficiaries(address[])":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"}],name:"removeBeneficiaries",outputs:[],stateMutability:"nonpayable",type:"function"},"removeBeneficiariesUsingSignature(address[],uint256,bytes)":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"},{internalType:"uint256",name:"_expirationTimestamp",type:"uint256"},{internalType:"bytes",name:"_signature",type:"bytes"}],name:"removeBeneficiariesUsingSignature",outputs:[],stateMutability:"nonpayable",type:"function"},"removeBeneficiary(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"removeBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function"},"removeManager(address)":{inputs:[{internalType:"address",name:"_managerAddress",type:"address"}],name:"removeManager",outputs:[],stateMutability:"nonpayable",type:"function"},"requestFunds()":{inputs:[],name:"requestFunds",outputs:[],stateMutability:"nonpayable",type:"function"},"setBeneficiaryState(address,uint8)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"},{internalType:"enum ICommunity.BeneficiaryState",name:"_state",type:"uint8"}],name:"setBeneficiaryState",outputs:[],stateMutability:"nonpayable",type:"function"},"token()":{inputs:[],name:"token",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"tokenList()":{inputs:[],name:"tokenList",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},"tokenUpdates(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"tokenUpdates",outputs:[{internalType:"address",name:"tokenAddress",type:"address"},{internalType:"uint256",name:"ratio",type:"uint256"},{internalType:"uint256",name:"startBlock",type:"uint256"}],stateMutability:"view",type:"function"},"tokenUpdatesLength()":{inputs:[],name:"tokenUpdatesLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function"},"treasuryFunds()":{inputs:[],name:"treasuryFunds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"unlock()":{inputs:[],name:"unlock",outputs:[],stateMutability:"nonpayable",type:"function"},"unlockBeneficiaries(address[])":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"}],name:"unlockBeneficiaries",outputs:[],stateMutability:"nonpayable",type:"function"},"unlockBeneficiariesUsingSignature(address[],uint256,bytes)":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"},{internalType:"uint256",name:"_expirationTimestamp",type:"uint256"},{internalType:"bytes",name:"_signature",type:"bytes"}],name:"unlockBeneficiariesUsingSignature",outputs:[],stateMutability:"nonpayable",type:"function"},"unlockBeneficiary(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"unlockBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function"},"updateBeneficiaryParams(uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"}],name:"updateBeneficiaryParams",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityAdmin(address)":{inputs:[{internalType:"contract ICommunityAdmin",name:"_communityAdmin",type:"address"}],name:"updateCommunityAdmin",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityParams(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_minTranche",type:"uint256"},{internalType:"uint256",name:"_maxTranche",type:"uint256"}],name:"updateCommunityParams",outputs:[],stateMutability:"nonpayable",type:"function"},"updateMaxBeneficiaries(uint256)":{inputs:[{internalType:"uint256",name:"_newMaxBeneficiaries",type:"uint256"}],name:"updateMaxBeneficiaries",outputs:[],stateMutability:"nonpayable",type:"function"},"updatePreviousCommunity(address)":{inputs:[{internalType:"contract ICommunity",name:"_newPreviousCommunity",type:"address"}],name:"updatePreviousCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"updateToken(address,bytes,uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_newToken",type:"address"},{internalType:"bytes",name:"_exchangePath",type:"bytes"},{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"}],name:"updateToken",outputs:[],stateMutability:"nonpayable",type:"function"},"validBeneficiaryCount()":{inputs:[],name:"validBeneficiaryCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/community/interfaces/CommunityStorageV3.sol:CommunityStorageV3":{source:"contracts/community/interfaces/CommunityStorageV3.sol",name:"CommunityStorageV3",title:"Storage for Community",notice:"For future upgrades, do not change CommunityStorageV3. Create a new contract which implements CommunityStorageV3 and following the naming convention CommunityStorageVX.",methods:{"_token()":{inputs:[],name:"_token",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"addBeneficiaries(address[])":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"}],name:"addBeneficiaries",outputs:[],stateMutability:"nonpayable",type:"function"},"addBeneficiariesUsingSignature(address[],uint256,bytes)":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"},{internalType:"uint256",name:"_expirationTimestamp",type:"uint256"},{internalType:"bytes",name:"_signature",type:"bytes"}],name:"addBeneficiariesUsingSignature",outputs:[],stateMutability:"nonpayable",type:"function"},"addBeneficiary(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"addBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function"},"addCopy(address)":{inputs:[{internalType:"contract ICommunity",name:"_copy",type:"address"}],name:"addCopy",outputs:[],stateMutability:"nonpayable",type:"function"},"addManager(address)":{inputs:[{internalType:"address",name:"_managerAddress",type:"address"}],name:"addManager",outputs:[],stateMutability:"nonpayable",type:"function"},"baseInterval()":{inputs:[],name:"baseInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"beneficiaries(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"beneficiaries",outputs:[{internalType:"enum ICommunity.BeneficiaryState",name:"state",type:"uint8"},{internalType:"uint256",name:"claims",type:"uint256"},{internalType:"uint256",name:"claimedAmount",type:"uint256"},{internalType:"uint256",name:"lastClaim",type:"uint256"}],stateMutability:"view",type:"function"},"beneficiaryClaimedAmounts(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"beneficiaryClaimedAmounts",outputs:[{internalType:"uint256[]",name:"claimedAmounts",type:"uint256[]"}],stateMutability:"view",type:"function"},"beneficiaryJoinFromMigrated(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"beneficiaryJoinFromMigrated",outputs:[],stateMutability:"nonpayable",type:"function"},"beneficiaryListAt(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"beneficiaryListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"beneficiaryListLength()":{inputs:[],name:"beneficiaryListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"cUSD()":{inputs:[],name:"cUSD",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"changeBeneficiaryAddress(address)":{inputs:[{internalType:"address",name:"_newBeneficiaryAddress",type:"address"}],name:"changeBeneficiaryAddress",outputs:[],stateMutability:"nonpayable",type:"function"},"changeBeneficiaryAddressByManager(address,address)":{inputs:[{internalType:"address",name:"_oldBeneficiaryAddress",type:"address"},{internalType:"address",name:"_newBeneficiaryAddress",type:"address"}],name:"changeBeneficiaryAddressByManager",outputs:[],stateMutability:"nonpayable",type:"function"},"claim()":{inputs:[],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function"},"claimAmount()":{inputs:[],name:"claimAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"claimCooldown(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"claimCooldown",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"communityAdmin()":{inputs:[],name:"communityAdmin",outputs:[{internalType:"contract ICommunityAdmin",name:"",type:"address"}],stateMutability:"view",type:"function"},"copies()":{inputs:[],name:"copies",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},"copyBeneficiaries(address[])":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"}],name:"copyBeneficiaries",outputs:[],stateMutability:"nonpayable",type:"function"},"copyCommunityDetails(address)":{inputs:[{internalType:"contract ICommunity",name:"_originalCommunity",type:"address"}],name:"copyCommunityDetails",outputs:[],stateMutability:"nonpayable",type:"function"},"copyOf()":{inputs:[],name:"copyOf",outputs:[{internalType:"contract ICommunity",name:"",type:"address"}],stateMutability:"view",type:"function"},"decreaseStep()":{inputs:[],name:"decreaseStep",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donate(address,uint256)":{inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"donate",outputs:[],stateMutability:"nonpayable",type:"function"},"getInitialMaxClaim()":{inputs:[],name:"getInitialMaxClaim",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"impactMarketAddress()":{inputs:[],name:"impactMarketAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"pure",type:"function"},"incrementInterval()":{inputs:[],name:"incrementInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"initialize(address,address[],uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"address[]",name:"_managers",type:"address[]"},{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"},{internalType:"uint256",name:"_minTranche",type:"uint256"},{internalType:"uint256",name:"_maxTranche",type:"uint256"},{internalType:"uint256",name:"_maxBeneficiaries",type:"uint256"},{internalType:"contract ICommunity",name:"_previousCommunity",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},"isSelfFunding()":{inputs:[],name:"isSelfFunding",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"lastFundRequest()":{inputs:[],name:"lastFundRequest",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lastInterval(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"lastInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lock()":{inputs:[],name:"lock",outputs:[],stateMutability:"nonpayable",type:"function"},"lockBeneficiaries(address[])":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"}],name:"lockBeneficiaries",outputs:[],stateMutability:"nonpayable",type:"function"},"lockBeneficiariesUsingSignature(address[],uint256,bytes)":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"},{internalType:"uint256",name:"_expirationTimestamp",type:"uint256"},{internalType:"bytes",name:"_signature",type:"bytes"}],name:"lockBeneficiariesUsingSignature",outputs:[],stateMutability:"nonpayable",type:"function"},"lockBeneficiary(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"lockBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function"},"locked()":{inputs:[],name:"locked",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"maxBeneficiaries()":{inputs:[],name:"maxBeneficiaries",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxClaim()":{inputs:[],name:"maxClaim",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxTotalClaim()":{inputs:[],name:"maxTotalClaim",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxTranche()":{inputs:[],name:"maxTranche",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"minTranche()":{inputs:[],name:"minTranche",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"originalClaimAmount()":{inputs:[],name:"originalClaimAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"previousCommunity()":{inputs:[],name:"previousCommunity",outputs:[{internalType:"contract ICommunity",name:"",type:"address"}],stateMutability:"view",type:"function"},"privateFunds()":{inputs:[],name:"privateFunds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"removeBeneficiaries(address[])":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"}],name:"removeBeneficiaries",outputs:[],stateMutability:"nonpayable",type:"function"},"removeBeneficiariesUsingSignature(address[],uint256,bytes)":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"},{internalType:"uint256",name:"_expirationTimestamp",type:"uint256"},{internalType:"bytes",name:"_signature",type:"bytes"}],name:"removeBeneficiariesUsingSignature",outputs:[],stateMutability:"nonpayable",type:"function"},"removeBeneficiary(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"removeBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function"},"removeManager(address)":{inputs:[{internalType:"address",name:"_managerAddress",type:"address"}],name:"removeManager",outputs:[],stateMutability:"nonpayable",type:"function"},"requestFunds()":{inputs:[],name:"requestFunds",outputs:[],stateMutability:"nonpayable",type:"function"},"setBeneficiaryState(address,uint8)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"},{internalType:"enum ICommunity.BeneficiaryState",name:"_state",type:"uint8"}],name:"setBeneficiaryState",outputs:[],stateMutability:"nonpayable",type:"function"},"token()":{inputs:[],name:"token",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"tokenList()":{inputs:[],name:"tokenList",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},"tokenUpdates(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"tokenUpdates",outputs:[{internalType:"address",name:"tokenAddress",type:"address"},{internalType:"uint256",name:"ratio",type:"uint256"},{internalType:"uint256",name:"startBlock",type:"uint256"}],stateMutability:"view",type:"function"},"tokenUpdatesLength()":{inputs:[],name:"tokenUpdatesLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function"},"treasuryFunds()":{inputs:[],name:"treasuryFunds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"unlock()":{inputs:[],name:"unlock",outputs:[],stateMutability:"nonpayable",type:"function"},"unlockBeneficiaries(address[])":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"}],name:"unlockBeneficiaries",outputs:[],stateMutability:"nonpayable",type:"function"},"unlockBeneficiariesUsingSignature(address[],uint256,bytes)":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"},{internalType:"uint256",name:"_expirationTimestamp",type:"uint256"},{internalType:"bytes",name:"_signature",type:"bytes"}],name:"unlockBeneficiariesUsingSignature",outputs:[],stateMutability:"nonpayable",type:"function"},"unlockBeneficiary(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"unlockBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function"},"updateBeneficiaryParams(uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"}],name:"updateBeneficiaryParams",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityAdmin(address)":{inputs:[{internalType:"contract ICommunityAdmin",name:"_communityAdmin",type:"address"}],name:"updateCommunityAdmin",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityParams(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_minTranche",type:"uint256"},{internalType:"uint256",name:"_maxTranche",type:"uint256"}],name:"updateCommunityParams",outputs:[],stateMutability:"nonpayable",type:"function"},"updateMaxBeneficiaries(uint256)":{inputs:[{internalType:"uint256",name:"_newMaxBeneficiaries",type:"uint256"}],name:"updateMaxBeneficiaries",outputs:[],stateMutability:"nonpayable",type:"function"},"updatePreviousCommunity(address)":{inputs:[{internalType:"contract ICommunity",name:"_newPreviousCommunity",type:"address"}],name:"updatePreviousCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"updateToken(address,bytes,uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_newToken",type:"address"},{internalType:"bytes",name:"_exchangePath",type:"bytes"},{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"}],name:"updateToken",outputs:[],stateMutability:"nonpayable",type:"function"},"validBeneficiaryCount()":{inputs:[],name:"validBeneficiaryCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/community/interfaces/CommunityStorageV4.sol:CommunityStorageV4":{source:"contracts/community/interfaces/CommunityStorageV4.sol",name:"CommunityStorageV4",title:"Storage for Community",notice:"For future upgrades, do not change CommunityStorageV4. Create a new contract which implements CommunityStorageV4 and following the naming convention CommunityStorageVX.",methods:{"_token()":{inputs:[],name:"_token",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"addBeneficiaries(address[])":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"}],name:"addBeneficiaries",outputs:[],stateMutability:"nonpayable",type:"function"},"addBeneficiariesUsingSignature(address[],uint256,bytes)":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"},{internalType:"uint256",name:"_expirationTimestamp",type:"uint256"},{internalType:"bytes",name:"_signature",type:"bytes"}],name:"addBeneficiariesUsingSignature",outputs:[],stateMutability:"nonpayable",type:"function"},"addBeneficiary(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"addBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function"},"addCopy(address)":{inputs:[{internalType:"contract ICommunity",name:"_copy",type:"address"}],name:"addCopy",outputs:[],stateMutability:"nonpayable",type:"function"},"addManager(address)":{inputs:[{internalType:"address",name:"_managerAddress",type:"address"}],name:"addManager",outputs:[],stateMutability:"nonpayable",type:"function"},"baseInterval()":{inputs:[],name:"baseInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"beneficiaries(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"beneficiaries",outputs:[{internalType:"enum ICommunity.BeneficiaryState",name:"state",type:"uint8"},{internalType:"uint256",name:"claims",type:"uint256"},{internalType:"uint256",name:"claimedAmount",type:"uint256"},{internalType:"uint256",name:"lastClaim",type:"uint256"}],stateMutability:"view",type:"function"},"beneficiaryClaimedAmounts(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"beneficiaryClaimedAmounts",outputs:[{internalType:"uint256[]",name:"claimedAmounts",type:"uint256[]"}],stateMutability:"view",type:"function"},"beneficiaryJoinFromMigrated(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"beneficiaryJoinFromMigrated",outputs:[],stateMutability:"nonpayable",type:"function"},"beneficiaryListAt(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"beneficiaryListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"beneficiaryListLength()":{inputs:[],name:"beneficiaryListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"cUSD()":{inputs:[],name:"cUSD",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"changeBeneficiaryAddress(address)":{inputs:[{internalType:"address",name:"_newBeneficiaryAddress",type:"address"}],name:"changeBeneficiaryAddress",outputs:[],stateMutability:"nonpayable",type:"function"},"changeBeneficiaryAddressByManager(address,address)":{inputs:[{internalType:"address",name:"_oldBeneficiaryAddress",type:"address"},{internalType:"address",name:"_newBeneficiaryAddress",type:"address"}],name:"changeBeneficiaryAddressByManager",outputs:[],stateMutability:"nonpayable",type:"function"},"claim()":{inputs:[],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function"},"claimAmount()":{inputs:[],name:"claimAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"claimCooldown(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"claimCooldown",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"communityAdmin()":{inputs:[],name:"communityAdmin",outputs:[{internalType:"contract ICommunityAdmin",name:"",type:"address"}],stateMutability:"view",type:"function"},"copies()":{inputs:[],name:"copies",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},"copyBeneficiaries(address[])":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"}],name:"copyBeneficiaries",outputs:[],stateMutability:"nonpayable",type:"function"},"copyCommunityDetails(address)":{inputs:[{internalType:"contract ICommunity",name:"_originalCommunity",type:"address"}],name:"copyCommunityDetails",outputs:[],stateMutability:"nonpayable",type:"function"},"copyOf()":{inputs:[],name:"copyOf",outputs:[{internalType:"contract ICommunity",name:"",type:"address"}],stateMutability:"view",type:"function"},"decreaseStep()":{inputs:[],name:"decreaseStep",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donate(address,uint256)":{inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"donate",outputs:[],stateMutability:"nonpayable",type:"function"},"getInitialMaxClaim()":{inputs:[],name:"getInitialMaxClaim",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"impactMarketAddress()":{inputs:[],name:"impactMarketAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"pure",type:"function"},"incrementInterval()":{inputs:[],name:"incrementInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"initialize(address,address[],uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"address[]",name:"_managers",type:"address[]"},{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"},{internalType:"uint256",name:"_minTranche",type:"uint256"},{internalType:"uint256",name:"_maxTranche",type:"uint256"},{internalType:"uint256",name:"_maxBeneficiaries",type:"uint256"},{internalType:"contract ICommunity",name:"_previousCommunity",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},"isSelfFunding()":{inputs:[],name:"isSelfFunding",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"lastFundRequest()":{inputs:[],name:"lastFundRequest",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lastInterval(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"lastInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lock()":{inputs:[],name:"lock",outputs:[],stateMutability:"nonpayable",type:"function"},"lockBeneficiaries(address[])":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"}],name:"lockBeneficiaries",outputs:[],stateMutability:"nonpayable",type:"function"},"lockBeneficiariesUsingSignature(address[],uint256,bytes)":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"},{internalType:"uint256",name:"_expirationTimestamp",type:"uint256"},{internalType:"bytes",name:"_signature",type:"bytes"}],name:"lockBeneficiariesUsingSignature",outputs:[],stateMutability:"nonpayable",type:"function"},"lockBeneficiary(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"lockBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function"},"locked()":{inputs:[],name:"locked",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"maxBeneficiaries()":{inputs:[],name:"maxBeneficiaries",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxClaim()":{inputs:[],name:"maxClaim",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxTotalClaim()":{inputs:[],name:"maxTotalClaim",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxTranche()":{inputs:[],name:"maxTranche",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"minTranche()":{inputs:[],name:"minTranche",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"originalClaimAmount()":{inputs:[],name:"originalClaimAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"previousCommunity()":{inputs:[],name:"previousCommunity",outputs:[{internalType:"contract ICommunity",name:"",type:"address"}],stateMutability:"view",type:"function"},"privateFunds()":{inputs:[],name:"privateFunds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"removeBeneficiaries(address[])":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"}],name:"removeBeneficiaries",outputs:[],stateMutability:"nonpayable",type:"function"},"removeBeneficiariesUsingSignature(address[],uint256,bytes)":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"},{internalType:"uint256",name:"_expirationTimestamp",type:"uint256"},{internalType:"bytes",name:"_signature",type:"bytes"}],name:"removeBeneficiariesUsingSignature",outputs:[],stateMutability:"nonpayable",type:"function"},"removeBeneficiary(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"removeBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function"},"removeManager(address)":{inputs:[{internalType:"address",name:"_managerAddress",type:"address"}],name:"removeManager",outputs:[],stateMutability:"nonpayable",type:"function"},"requestFunds()":{inputs:[],name:"requestFunds",outputs:[],stateMutability:"nonpayable",type:"function"},"setBeneficiaryState(address,uint8)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"},{internalType:"enum ICommunity.BeneficiaryState",name:"_state",type:"uint8"}],name:"setBeneficiaryState",outputs:[],stateMutability:"nonpayable",type:"function"},"token()":{inputs:[],name:"token",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"tokenList()":{inputs:[],name:"tokenList",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},"tokenUpdates(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"tokenUpdates",outputs:[{internalType:"address",name:"tokenAddress",type:"address"},{internalType:"uint256",name:"ratio",type:"uint256"},{internalType:"uint256",name:"startBlock",type:"uint256"}],stateMutability:"view",type:"function"},"tokenUpdatesLength()":{inputs:[],name:"tokenUpdatesLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function"},"treasuryFunds()":{inputs:[],name:"treasuryFunds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"unlock()":{inputs:[],name:"unlock",outputs:[],stateMutability:"nonpayable",type:"function"},"unlockBeneficiaries(address[])":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"}],name:"unlockBeneficiaries",outputs:[],stateMutability:"nonpayable",type:"function"},"unlockBeneficiariesUsingSignature(address[],uint256,bytes)":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"},{internalType:"uint256",name:"_expirationTimestamp",type:"uint256"},{internalType:"bytes",name:"_signature",type:"bytes"}],name:"unlockBeneficiariesUsingSignature",outputs:[],stateMutability:"nonpayable",type:"function"},"unlockBeneficiary(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"unlockBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function"},"updateBeneficiaryParams(uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"}],name:"updateBeneficiaryParams",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityAdmin(address)":{inputs:[{internalType:"contract ICommunityAdmin",name:"_communityAdmin",type:"address"}],name:"updateCommunityAdmin",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityParams(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_minTranche",type:"uint256"},{internalType:"uint256",name:"_maxTranche",type:"uint256"}],name:"updateCommunityParams",outputs:[],stateMutability:"nonpayable",type:"function"},"updateMaxBeneficiaries(uint256)":{inputs:[{internalType:"uint256",name:"_newMaxBeneficiaries",type:"uint256"}],name:"updateMaxBeneficiaries",outputs:[],stateMutability:"nonpayable",type:"function"},"updatePreviousCommunity(address)":{inputs:[{internalType:"contract ICommunity",name:"_newPreviousCommunity",type:"address"}],name:"updatePreviousCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"updateToken(address,bytes,uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_newToken",type:"address"},{internalType:"bytes",name:"_exchangePath",type:"bytes"},{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"}],name:"updateToken",outputs:[],stateMutability:"nonpayable",type:"function"},"validBeneficiaryCount()":{inputs:[],name:"validBeneficiaryCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/community/interfaces/ICommunity.sol:ICommunity":{source:"contracts/community/interfaces/ICommunity.sol",name:"ICommunity",methods:{"addBeneficiaries(address[])":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"}],name:"addBeneficiaries",outputs:[],stateMutability:"nonpayable",type:"function"},"addBeneficiariesUsingSignature(address[],uint256,bytes)":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"},{internalType:"uint256",name:"_expirationTimestamp",type:"uint256"},{internalType:"bytes",name:"_signature",type:"bytes"}],name:"addBeneficiariesUsingSignature",outputs:[],stateMutability:"nonpayable",type:"function"},"addBeneficiary(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"addBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function"},"addCopy(address)":{inputs:[{internalType:"contract ICommunity",name:"_copy",type:"address"}],name:"addCopy",outputs:[],stateMutability:"nonpayable",type:"function"},"addManager(address)":{inputs:[{internalType:"address",name:"_managerAddress",type:"address"}],name:"addManager",outputs:[],stateMutability:"nonpayable",type:"function"},"baseInterval()":{inputs:[],name:"baseInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"beneficiaries(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"beneficiaries",outputs:[{internalType:"enum ICommunity.BeneficiaryState",name:"state",type:"uint8"},{internalType:"uint256",name:"claims",type:"uint256"},{internalType:"uint256",name:"claimedAmount",type:"uint256"},{internalType:"uint256",name:"lastClaim",type:"uint256"}],stateMutability:"view",type:"function"},"beneficiaryClaimedAmounts(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"beneficiaryClaimedAmounts",outputs:[{internalType:"uint256[]",name:"claimedAmounts",type:"uint256[]"}],stateMutability:"view",type:"function"},"beneficiaryJoinFromMigrated(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"beneficiaryJoinFromMigrated",outputs:[],stateMutability:"nonpayable",type:"function"},"beneficiaryListAt(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"beneficiaryListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"beneficiaryListLength()":{inputs:[],name:"beneficiaryListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"cUSD()":{inputs:[],name:"cUSD",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"changeBeneficiaryAddress(address)":{inputs:[{internalType:"address",name:"_newBeneficiaryAddress",type:"address"}],name:"changeBeneficiaryAddress",outputs:[],stateMutability:"nonpayable",type:"function"},"changeBeneficiaryAddressByManager(address,address)":{inputs:[{internalType:"address",name:"_oldBeneficiaryAddress",type:"address"},{internalType:"address",name:"_newBeneficiaryAddress",type:"address"}],name:"changeBeneficiaryAddressByManager",outputs:[],stateMutability:"nonpayable",type:"function"},"claim()":{inputs:[],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function"},"claimAmount()":{inputs:[],name:"claimAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"claimCooldown(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"claimCooldown",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"communityAdmin()":{inputs:[],name:"communityAdmin",outputs:[{internalType:"contract ICommunityAdmin",name:"",type:"address"}],stateMutability:"view",type:"function"},"copies()":{inputs:[],name:"copies",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},"copyBeneficiaries(address[])":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"}],name:"copyBeneficiaries",outputs:[],stateMutability:"nonpayable",type:"function"},"copyCommunityDetails(address)":{inputs:[{internalType:"contract ICommunity",name:"_originalCommunity",type:"address"}],name:"copyCommunityDetails",outputs:[],stateMutability:"nonpayable",type:"function"},"copyOf()":{inputs:[],name:"copyOf",outputs:[{internalType:"contract ICommunity",name:"",type:"address"}],stateMutability:"view",type:"function"},"decreaseStep()":{inputs:[],name:"decreaseStep",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donate(address,uint256)":{inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"donate",outputs:[],stateMutability:"nonpayable",type:"function"},"getInitialMaxClaim()":{inputs:[],name:"getInitialMaxClaim",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"impactMarketAddress()":{inputs:[],name:"impactMarketAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"pure",type:"function"},"incrementInterval()":{inputs:[],name:"incrementInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"initialize(address,address[],uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"address[]",name:"_managers",type:"address[]"},{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"},{internalType:"uint256",name:"_minTranche",type:"uint256"},{internalType:"uint256",name:"_maxTranche",type:"uint256"},{internalType:"uint256",name:"_maxBeneficiaries",type:"uint256"},{internalType:"contract ICommunity",name:"_previousCommunity",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},"isSelfFunding()":{inputs:[],name:"isSelfFunding",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"lastFundRequest()":{inputs:[],name:"lastFundRequest",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lastInterval(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"lastInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lock()":{inputs:[],name:"lock",outputs:[],stateMutability:"nonpayable",type:"function"},"lockBeneficiaries(address[])":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"}],name:"lockBeneficiaries",outputs:[],stateMutability:"nonpayable",type:"function"},"lockBeneficiariesUsingSignature(address[],uint256,bytes)":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"},{internalType:"uint256",name:"_expirationTimestamp",type:"uint256"},{internalType:"bytes",name:"_signature",type:"bytes"}],name:"lockBeneficiariesUsingSignature",outputs:[],stateMutability:"nonpayable",type:"function"},"lockBeneficiary(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"lockBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function"},"locked()":{inputs:[],name:"locked",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"maxBeneficiaries()":{inputs:[],name:"maxBeneficiaries",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxClaim()":{inputs:[],name:"maxClaim",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxTotalClaim()":{inputs:[],name:"maxTotalClaim",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxTranche()":{inputs:[],name:"maxTranche",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"minTranche()":{inputs:[],name:"minTranche",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"originalClaimAmount()":{inputs:[],name:"originalClaimAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"previousCommunity()":{inputs:[],name:"previousCommunity",outputs:[{internalType:"contract ICommunity",name:"",type:"address"}],stateMutability:"view",type:"function"},"privateFunds()":{inputs:[],name:"privateFunds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"removeBeneficiaries(address[])":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"}],name:"removeBeneficiaries",outputs:[],stateMutability:"nonpayable",type:"function"},"removeBeneficiariesUsingSignature(address[],uint256,bytes)":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"},{internalType:"uint256",name:"_expirationTimestamp",type:"uint256"},{internalType:"bytes",name:"_signature",type:"bytes"}],name:"removeBeneficiariesUsingSignature",outputs:[],stateMutability:"nonpayable",type:"function"},"removeBeneficiary(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"removeBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function"},"removeManager(address)":{inputs:[{internalType:"address",name:"_managerAddress",type:"address"}],name:"removeManager",outputs:[],stateMutability:"nonpayable",type:"function"},"requestFunds()":{inputs:[],name:"requestFunds",outputs:[],stateMutability:"nonpayable",type:"function"},"setBeneficiaryState(address,uint8)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"},{internalType:"enum ICommunity.BeneficiaryState",name:"_state",type:"uint8"}],name:"setBeneficiaryState",outputs:[],stateMutability:"nonpayable",type:"function"},"token()":{inputs:[],name:"token",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"tokenList()":{inputs:[],name:"tokenList",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},"tokenUpdates(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"tokenUpdates",outputs:[{internalType:"address",name:"tokenAddress",type:"address"},{internalType:"uint256",name:"ratio",type:"uint256"},{internalType:"uint256",name:"startBlock",type:"uint256"}],stateMutability:"view",type:"function"},"tokenUpdatesLength()":{inputs:[],name:"tokenUpdatesLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function"},"treasuryFunds()":{inputs:[],name:"treasuryFunds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"unlock()":{inputs:[],name:"unlock",outputs:[],stateMutability:"nonpayable",type:"function"},"unlockBeneficiaries(address[])":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"}],name:"unlockBeneficiaries",outputs:[],stateMutability:"nonpayable",type:"function"},"unlockBeneficiariesUsingSignature(address[],uint256,bytes)":{inputs:[{internalType:"address[]",name:"_beneficiaryAddresses",type:"address[]"},{internalType:"uint256",name:"_expirationTimestamp",type:"uint256"},{internalType:"bytes",name:"_signature",type:"bytes"}],name:"unlockBeneficiariesUsingSignature",outputs:[],stateMutability:"nonpayable",type:"function"},"unlockBeneficiary(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"unlockBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function"},"updateBeneficiaryParams(uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"}],name:"updateBeneficiaryParams",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityAdmin(address)":{inputs:[{internalType:"contract ICommunityAdmin",name:"_communityAdmin",type:"address"}],name:"updateCommunityAdmin",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityParams(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_minTranche",type:"uint256"},{internalType:"uint256",name:"_maxTranche",type:"uint256"}],name:"updateCommunityParams",outputs:[],stateMutability:"nonpayable",type:"function"},"updateMaxBeneficiaries(uint256)":{inputs:[{internalType:"uint256",name:"_newMaxBeneficiaries",type:"uint256"}],name:"updateMaxBeneficiaries",outputs:[],stateMutability:"nonpayable",type:"function"},"updatePreviousCommunity(address)":{inputs:[{internalType:"contract ICommunity",name:"_newPreviousCommunity",type:"address"}],name:"updatePreviousCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"updateToken(address,bytes,uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_newToken",type:"address"},{internalType:"bytes",name:"_exchangePath",type:"bytes"},{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"}],name:"updateToken",outputs:[],stateMutability:"nonpayable",type:"function"},"validBeneficiaryCount()":{inputs:[],name:"validBeneficiaryCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/community/interfaces/ICommunityAdmin.sol:ICommunityAdmin":{source:"contracts/community/interfaces/ICommunityAdmin.sol",name:"ICommunityAdmin",methods:{"addCommunity(address,address[],address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"address[]",name:"_managers",type:"address[]"},{internalType:"address",name:"_ambassador",type:"address"},{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"},{internalType:"uint256",name:"_minTranche",type:"uint256"},{internalType:"uint256",name:"_maxTranche",type:"uint256"},{internalType:"uint256",name:"_maxBeneficiaries",type:"uint256"}],name:"addCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"ambassadors()":{inputs:[],name:"ambassadors",outputs:[{internalType:"contract IAmbassadors",name:"",type:"address"}],stateMutability:"view",type:"function"},"authorizedWalletAddress()":{inputs:[],name:"authorizedWalletAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"cUSD()":{inputs:[],name:"cUSD",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"calculateCommunityTrancheAmount(address)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"}],name:"calculateCommunityTrancheAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"communities(address)":{inputs:[{internalType:"address",name:"_community",type:"address"}],name:"communities",outputs:[{internalType:"enum ICommunityAdmin.CommunityState",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"communityImplementation()":{inputs:[],name:"communityImplementation",outputs:[{internalType:"contract ICommunity",name:"",type:"address"}],stateMutability:"view",type:"function"},"communityListAt(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"communityListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"communityListLength()":{inputs:[],name:"communityListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"communityMiddleProxy()":{inputs:[],name:"communityMiddleProxy",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"communityProxyAdmin()":{inputs:[],name:"communityProxyAdmin",outputs:[{internalType:"contract ProxyAdmin",name:"",type:"address"}],stateMutability:"view",type:"function"},"fundCommunity()":{inputs:[],name:"fundCommunity",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"getCommunityProxyImplementation(address)":{inputs:[{internalType:"address",name:"_communityProxyAddress",type:"address"}],name:"getCommunityProxyImplementation",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"impactMarketCouncil()":{inputs:[],name:"impactMarketCouncil",outputs:[{internalType:"contract IImpactMarketCouncil",name:"",type:"address"}],stateMutability:"view",type:"function"},"isAmbassadorOrEntityOfCommunity(address,address)":{inputs:[{internalType:"address",name:"_community",type:"address"},{internalType:"address",name:"_ambassadorOrEntity",type:"address"}],name:"isAmbassadorOrEntityOfCommunity",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"migrateCommunity(address[],address)":{inputs:[{internalType:"address[]",name:"_managers",type:"address[]"},{internalType:"contract ICommunity",name:"_previousCommunity",type:"address"}],name:"migrateCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"minClaimAmountRatio()":{inputs:[],name:"minClaimAmountRatio",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"minClaimAmountRatioPrecision()":{inputs:[],name:"minClaimAmountRatioPrecision",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"removeCommunity(address)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"}],name:"removeCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"setCommunityToAmbassador(address,address)":{inputs:[{internalType:"address",name:"_ambassador",type:"address"},{internalType:"contract ICommunity",name:"_communityAddress",type:"address"}],name:"setCommunityToAmbassador",outputs:[],stateMutability:"nonpayable",type:"function"},"splitCommunity(address,uint256,address,address[])":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"uint256",name:"_numberOfCopies",type:"uint256"},{internalType:"address",name:"_ambassador",type:"address"},{internalType:"address[]",name:"_managers",type:"address[]"}],name:"splitCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function"},"transferFromCommunity(address,address,address,uint256)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferFromCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"transferToBeneficiary(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"beneficiary",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferToBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function"},"treasury()":{inputs:[],name:"treasury",outputs:[{internalType:"contract ITreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"treasuryMinBalance()":{inputs:[],name:"treasuryMinBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"treasurySafetyPercentage()":{inputs:[],name:"treasurySafetyPercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"updateAmbassadors(address)":{inputs:[{internalType:"contract IAmbassadors",name:"_newAmbassadors",type:"address"}],name:"updateAmbassadors",outputs:[],stateMutability:"nonpayable",type:"function"},"updateAuthorizedWalletAddress(address)":{inputs:[{internalType:"address",name:"_newSignerAddress",type:"address"}],name:"updateAuthorizedWalletAddress",outputs:[],stateMutability:"nonpayable",type:"function"},"updateBeneficiaryParams(address,uint256,uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"},{internalType:"uint256",name:"_maxBeneficiaries",type:"uint256"}],name:"updateBeneficiaryParams",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityImplementation(address)":{inputs:[{internalType:"contract ICommunity",name:"_communityImplementation_",type:"address"}],name:"updateCommunityImplementation",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityMiddleProxy(address)":{inputs:[{internalType:"address",name:"_communityMiddleProxy",type:"address"}],name:"updateCommunityMiddleProxy",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityParams(address,uint256,uint256)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"uint256",name:"_minTranche",type:"uint256"},{internalType:"uint256",name:"_maxTranche",type:"uint256"}],name:"updateCommunityParams",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityToken(address,address,bytes,uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"contract IERC20Upgradeable",name:"_newToken",type:"address"},{internalType:"bytes",name:"_exchangePath",type:"bytes"},{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"}],name:"updateCommunityToken",outputs:[],stateMutability:"nonpayable",type:"function"},"updateImpactMarketCouncil(address)":{inputs:[{internalType:"contract IImpactMarketCouncil",name:"_newImpactMarketCouncil",type:"address"}],name:"updateImpactMarketCouncil",outputs:[],stateMutability:"nonpayable",type:"function"},"updateMinClaimAmountRatio(uint256)":{inputs:[{internalType:"uint256",name:"_newMinClaimAmountRatio",type:"uint256"}],name:"updateMinClaimAmountRatio",outputs:[],stateMutability:"nonpayable",type:"function"},"updateProxyImplementation(address,address)":{inputs:[{internalType:"address",name:"_communityMiddleProxy",type:"address"},{internalType:"address",name:"_newLogic",type:"address"}],name:"updateProxyImplementation",outputs:[],stateMutability:"nonpayable",type:"function"},"updateTreasury(address)":{inputs:[{internalType:"contract ITreasury",name:"_newTreasury",type:"address"}],name:"updateTreasury",outputs:[],stateMutability:"nonpayable",type:"function"},"updateTreasuryMinBalance(uint256)":{inputs:[{internalType:"uint256",name:"_newTreasuryMinBalance",type:"uint256"}],name:"updateTreasuryMinBalance",outputs:[],stateMutability:"nonpayable",type:"function"},"updateTreasurySafetyPercentage(uint256)":{inputs:[{internalType:"uint256",name:"_newTreasurySafetyPercentage",type:"uint256"}],name:"updateTreasurySafetyPercentage",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/community/interfaces/IPreviousCommunity.sol:IPreviousCommunity":{source:"contracts/community/interfaces/IPreviousCommunity.sol",name:"IPreviousCommunity",methods:{"cUSD()":{inputs:[],name:"cUSD",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"claimAmount()":{inputs:[],name:"claimAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"}}},"contracts/deposit/DepositImplementation.sol:DepositImplementation":{source:"contracts/deposit/DepositImplementation.sol",name:"DepositImplementation",events:{"DepositAdded(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"depositorAddress",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"DepositAdded",type:"event",params:{amount:"Amount of the deposit",depositorAddress:"The address of the depositor that makes the deposit",token:"ERC20 token address"},notice:"Triggered when an amount of an ERC20 has been deposited"},"DonateInterest(address,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"depositorAddress",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"interest",type:"uint256"}],name:"DonateInterest",type:"event",params:{amount:"Amount of the withdrawal",depositorAddress:"The address of the depositor",interest:"Interest earned (and donated to DonationMiner)",token:"ERC20 token address"},notice:"Triggered when the interest of an amount of an ERC20 has been donated"},"DonationMinerUpdated(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"oldDonationMiner",type:"address"},{indexed:!0,internalType:"address",name:"newDonationMiner",type:"address"}],name:"DonationMinerUpdated",type:"event",params:{newDonationMiner:"New donationMiner address",oldDonationMiner:"Old donationMiner address"},notice:"Triggered when the donationMiner address has been updated"},"LendingPoolUpdated(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"oldLendingPool",type:"address"},{indexed:!0,internalType:"address",name:"newLendingPool",type:"address"}],name:"LendingPoolUpdated",type:"event",params:{newLendingPool:"New lendingPool address",oldLendingPool:"Old lendingPool address"},notice:"Triggered when LendingPool has been updated"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Paused(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Paused",type:"event"},"TokenAdded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenAddress",type:"address"}],name:"TokenAdded",type:"event",params:{tokenAddress:"Address of the token"},notice:"Triggered when a token has been added"},"TokenRemoved(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenAddress",type:"address"}],name:"TokenRemoved",type:"event",params:{tokenAddress:"Address of the token"},notice:"Triggered when a token has been removed"},"TreasuryUpdated(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"oldTreasury",type:"address"},{indexed:!0,internalType:"address",name:"newTreasury",type:"address"}],name:"TreasuryUpdated",type:"event",params:{newTreasury:"New treasury address",oldTreasury:"Old treasury address"},notice:"Triggered when the treasury address has been updated"},"Unpaused(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Unpaused",type:"event"},"Withdraw(address,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"depositorAddress",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"interest",type:"uint256"}],name:"Withdraw",type:"event",params:{amount:"Amount of the withdrawal",depositorAddress:"The address of the depositor that makes the withdrawal",interest:"Interest earned (and donated to DonationMiner)",token:"ERC20 token address"},notice:"Triggered when an amount of an ERC20 has been withdrawn"}},methods:{"addToken(address)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"}],name:"addToken",outputs:[],stateMutability:"nonpayable",type:"function"},"deposit(address,uint256)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"deposit",outputs:[],stateMutability:"nonpayable",type:"function"},"donateInterest(address,address,uint256)":{inputs:[{internalType:"address",name:"_depositorAddress",type:"address"},{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"donateInterest",outputs:[],stateMutability:"nonpayable",type:"function"},"donationMiner()":{inputs:[],name:"donationMiner",outputs:[{internalType:"contract IDonationMiner",name:"",type:"address"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function",notice:"Returns the current implementation version"},"initialize(address,address,address,address[])":{inputs:[{internalType:"contract ITreasury",name:"_treasury",type:"address"},{internalType:"contract IDonationMiner",name:"_donationMiner",type:"address"},{internalType:"contract ILendingPool",name:"_lendingPool",type:"address"},{internalType:"address[]",name:"_tokenListAddresses",type:"address[]"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",params:{_lendingPool:"Address of the LendingPool",_treasury:"Address of the Treasury"},notice:"Used to initialize a new DonationMiner contract"},"interest(address,address,uint256)":{inputs:[{internalType:"address",name:"_depositorAddress",type:"address"},{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"interest",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"isToken(address)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"}],name:"isToken",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",params:{_tokenAddress:"token address to be checked"},returns:{_0:"bool true if the tokenAddress is an accepted token"},notice:"Returns if an address is an accepted token"},"lendingPool()":{inputs:[],name:"lendingPool",outputs:[{internalType:"contract ILendingPool",name:"",type:"address"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"paused()":{inputs:[],name:"paused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns true if the contract is paused, and false otherwise."},"removeToken(address)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"}],name:"removeToken",outputs:[],stateMutability:"nonpayable",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"token(address)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"}],name:"token",outputs:[{internalType:"uint256",name:"totalAmount",type:"uint256"},{internalType:"uint256",name:"depositorListLength",type:"uint256"}],stateMutability:"view",type:"function"},"tokenDepositor(address,address)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"address",name:"_depositorAddress",type:"address"}],name:"tokenDepositor",outputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"scaledBalance",type:"uint256"}],stateMutability:"view",type:"function"},"tokenDepositorListAt(address,uint256)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_index",type:"uint256"}],name:"tokenDepositorListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"tokenListAt(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"tokenListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",params:{_index:"index of the token"},returns:{_0:"address of the token"},notice:"Returns the address of a token from tokenList"},"tokenListLength()":{inputs:[],name:"tokenListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",returns:{_0:"uint256 number of tokens"},notice:"Returns the number of tokens"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"treasury()":{inputs:[],name:"treasury",outputs:[{internalType:"contract ITreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"updateDonationMiner(address)":{inputs:[{internalType:"contract IDonationMiner",name:"_newDonationMiner",type:"address"}],name:"updateDonationMiner",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newDonationMiner:"address of new donationMiner contract"},notice:"Updates DonationMiner address"},"updateLendingPool(address)":{inputs:[{internalType:"contract ILendingPool",name:"_newLendingPool",type:"address"}],name:"updateLendingPool",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newLendingPool:"address of the new LendingPool contract"},notice:"Updates the LendingPool contract address"},"updateTreasury(address)":{inputs:[{internalType:"contract ITreasury",name:"_newTreasury",type:"address"}],name:"updateTreasury",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newTreasury:"address of new treasury contract"},notice:"Updates Treasury address"},"withdraw(address,uint256)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/deposit/DepositProxy.sol:DepositProxy":{source:"contracts/deposit/DepositProxy.sol",name:"DepositProxy",constructor:{inputs:[{internalType:"address",name:"_logic",type:"address"},{internalType:"address",name:"_proxyAdmin",type:"address"}],stateMutability:"nonpayable",type:"constructor"},fallback:{stateMutability:"payable",type:"fallback"},receive:{stateMutability:"payable",type:"receive"},events:{"AdminChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"previousAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"AdminChanged",type:"event"},"BeaconUpgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"beacon",type:"address"}],name:"BeaconUpgraded",type:"event"},"Upgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"implementation",type:"address"}],name:"Upgraded",type:"event"}},methods:{"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"admin_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"changeAdmin(address)":{inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"changeAdmin",outputs:[],stateMutability:"nonpayable",type:"function",details:"Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."},"implementation()":{inputs:[],name:"implementation",outputs:[{internalType:"address",name:"implementation_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"},"upgradeTo(address)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"}],name:"upgradeTo",outputs:[],stateMutability:"nonpayable",type:"function",details:"Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."},"upgradeToAndCall(address,bytes)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"upgradeToAndCall",outputs:[],stateMutability:"payable",type:"function",details:"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."}}},"contracts/deposit/interfaces/DepositStorageV1.sol:DepositStorageV1":{source:"contracts/deposit/interfaces/DepositStorageV1.sol",name:"DepositStorageV1",title:"Storage for Deposit",notice:"For future upgrades, do not change DepositStorageV1. Create a new contract which implements DepositStorageV1 and following the naming convention DepositStorageVx.",methods:{"addToken(address)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"}],name:"addToken",outputs:[],stateMutability:"nonpayable",type:"function"},"deposit(address,uint256)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"deposit",outputs:[],stateMutability:"nonpayable",type:"function"},"donateInterest(address,address,uint256)":{inputs:[{internalType:"address",name:"_depositorAddress",type:"address"},{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"donateInterest",outputs:[],stateMutability:"nonpayable",type:"function"},"donationMiner()":{inputs:[],name:"donationMiner",outputs:[{internalType:"contract IDonationMiner",name:"",type:"address"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"interest(address,address,uint256)":{inputs:[{internalType:"address",name:"_depositorAddress",type:"address"},{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"interest",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"isToken(address)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"}],name:"isToken",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"lendingPool()":{inputs:[],name:"lendingPool",outputs:[{internalType:"contract ILendingPool",name:"",type:"address"}],stateMutability:"view",type:"function"},"removeToken(address)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"}],name:"removeToken",outputs:[],stateMutability:"nonpayable",type:"function"},"token(address)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"}],name:"token",outputs:[{internalType:"uint256",name:"totalAmount",type:"uint256"},{internalType:"uint256",name:"depositorListLength",type:"uint256"}],stateMutability:"view",type:"function"},"tokenDepositor(address,address)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"address",name:"_depositorAddress",type:"address"}],name:"tokenDepositor",outputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"scaledBalance",type:"uint256"}],stateMutability:"view",type:"function"},"tokenDepositorListAt(address,uint256)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_index",type:"uint256"}],name:"tokenDepositorListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"tokenListAt(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"tokenListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"tokenListLength()":{inputs:[],name:"tokenListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"treasury()":{inputs:[],name:"treasury",outputs:[{internalType:"contract ITreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"updateDonationMiner(address)":{inputs:[{internalType:"contract IDonationMiner",name:"_newDonationMiner",type:"address"}],name:"updateDonationMiner",outputs:[],stateMutability:"nonpayable",type:"function"},"updateLendingPool(address)":{inputs:[{internalType:"contract ILendingPool",name:"_lendingPool",type:"address"}],name:"updateLendingPool",outputs:[],stateMutability:"nonpayable",type:"function"},"updateTreasury(address)":{inputs:[{internalType:"contract ITreasury",name:"_newTreasury",type:"address"}],name:"updateTreasury",outputs:[],stateMutability:"nonpayable",type:"function"},"withdraw(address,uint256)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/deposit/interfaces/IDeposit.sol:IDeposit":{source:"contracts/deposit/interfaces/IDeposit.sol",name:"IDeposit",methods:{"addToken(address)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"}],name:"addToken",outputs:[],stateMutability:"nonpayable",type:"function"},"deposit(address,uint256)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"deposit",outputs:[],stateMutability:"nonpayable",type:"function"},"donateInterest(address,address,uint256)":{inputs:[{internalType:"address",name:"_depositorAddress",type:"address"},{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"donateInterest",outputs:[],stateMutability:"nonpayable",type:"function"},"donationMiner()":{inputs:[],name:"donationMiner",outputs:[{internalType:"contract IDonationMiner",name:"",type:"address"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"interest(address,address,uint256)":{inputs:[{internalType:"address",name:"_depositorAddress",type:"address"},{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"interest",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"isToken(address)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"}],name:"isToken",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"lendingPool()":{inputs:[],name:"lendingPool",outputs:[{internalType:"contract ILendingPool",name:"",type:"address"}],stateMutability:"view",type:"function"},"removeToken(address)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"}],name:"removeToken",outputs:[],stateMutability:"nonpayable",type:"function"},"token(address)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"}],name:"token",outputs:[{internalType:"uint256",name:"totalAmount",type:"uint256"},{internalType:"uint256",name:"depositorListLength",type:"uint256"}],stateMutability:"view",type:"function"},"tokenDepositor(address,address)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"address",name:"_depositorAddress",type:"address"}],name:"tokenDepositor",outputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"scaledBalance",type:"uint256"}],stateMutability:"view",type:"function"},"tokenDepositorListAt(address,uint256)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_index",type:"uint256"}],name:"tokenDepositorListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"tokenListAt(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"tokenListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"tokenListLength()":{inputs:[],name:"tokenListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"treasury()":{inputs:[],name:"treasury",outputs:[{internalType:"contract ITreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"updateDonationMiner(address)":{inputs:[{internalType:"contract IDonationMiner",name:"_newDonationMiner",type:"address"}],name:"updateDonationMiner",outputs:[],stateMutability:"nonpayable",type:"function"},"updateLendingPool(address)":{inputs:[{internalType:"contract ILendingPool",name:"_lendingPool",type:"address"}],name:"updateLendingPool",outputs:[],stateMutability:"nonpayable",type:"function"},"updateTreasury(address)":{inputs:[{internalType:"contract ITreasury",name:"_newTreasury",type:"address"}],name:"updateTreasury",outputs:[],stateMutability:"nonpayable",type:"function"},"withdraw(address,uint256)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/donationMiner/DonationMinerImplementation.sol:DonationMinerImplementation":{source:"contracts/donationMiner/DonationMinerImplementation.sol",name:"DonationMinerImplementation",events:{"AgainstPeriodsUpdated(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldAgainstPeriods",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newAgainstPeriods",type:"uint256"}],name:"AgainstPeriodsUpdated",type:"event",params:{newAgainstPeriods:"New againstPeriods value",oldAgainstPeriods:"Old againstPeriods value"},notice:"Triggered when the againstPeriods value has been updated"},"ClaimDelayUpdated(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldClaimDelay",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newClaimDelay",type:"uint256"}],name:"ClaimDelayUpdated",type:"event",params:{newClaimDelay:"New claimDelay value",oldClaimDelay:"Old claimDelay value"},notice:"Triggered when the claimDelay value has been updated"},"CommunityDonationRatioUpdated(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldCommunityDonationRatio",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newCommunityDonationRatio",type:"uint256"}],name:"CommunityDonationRatioUpdated",type:"event",params:{newCommunityDonationRatio:"New communityDonationRatio value",oldCommunityDonationRatio:"Old communityDonationRatio value"},notice:"Triggered when the communityDonationRatio value has been updated"},"DonationAdded(uint256,address,uint256,address,uint256,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"donationId",type:"uint256"},{indexed:!0,internalType:"address",name:"delegateAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"initialAmount",type:"uint256"},{indexed:!0,internalType:"address",name:"target",type:"address"}],name:"DonationAdded",type:"event",params:{amount:"Number of token donated",delegateAddress:"Address of the delegate",donationId:"Id of the donation",target:"Address of the receiver (community or treasury)                          or address of the DonationMiner contract otherwise",token:"Address of the token after conversion"},notice:"Triggered when a donation has been added"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Paused(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Paused",type:"event"},"RewardClaimed(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"donor",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"RewardClaimed",type:"event",params:{amount:"Value of the reward",donor:"Address of the donner"},notice:"Triggered when a donor has claimed his reward"},"RewardClaimedPartial(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"donor",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lastRewardPeriod",type:"uint256"}],name:"RewardClaimedPartial",type:"event",params:{amount:"Value of the reward",donor:"Address of the donner",lastRewardPeriod:"Number of the last reward period for witch the claim was made"},notice:"Triggered when a donor has claimed his reward"},"RewardPeriodParamsUpdated(uint256,uint256,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldRewardPeriodSize",type:"uint256"},{indexed:!1,internalType:"uint256",name:"oldDecayNumerator",type:"uint256"},{indexed:!1,internalType:"uint256",name:"oldDecayDenominator",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newRewardPeriodSize",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDecayNumerator",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDecayDenominator",type:"uint256"}],name:"RewardPeriodParamsUpdated",type:"event",params:{newDecayDenominator:"New decayDenominator value For further information regarding each parameter, see *DonationMiner* smart contract initialize method.",newDecayNumerator:"New decayNumerator value",newRewardPeriodSize:"New rewardPeriodSize value",oldDecayDenominator:"Old decayDenominator value",oldDecayNumerator:"Old decayNumerator value",oldRewardPeriodSize:"Old rewardPeriodSize value"},notice:"Triggered when reward period params have been updated"},"RewardStaked(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"donor",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"RewardStaked",type:"event",params:{amount:"Value of the reward",donor:"Address of the donner"},notice:"Triggered when a donor has staked his reward"},"RewardStakedPartial(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"donor",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lastRewardPeriod",type:"uint256"}],name:"RewardStakedPartial",type:"event",params:{amount:"Value of the reward",donor:"Address of the donner",lastRewardPeriod:"Number of the last reward period for witch tha stake was made"},notice:"Triggered when a donor has staked his reward"},"StakingDonationRatioUpdated(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldStakingDonationRatio",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newStakingDonationRatio",type:"uint256"}],name:"StakingDonationRatioUpdated",type:"event",params:{newStakingDonationRatio:"New stakingDonationRatio value",oldStakingDonationRatio:"Old stakingDonationRatio value"},notice:"Triggered when the stakingDonationRatio value has been updated"},"StakingUpdated(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"oldStaking",type:"address"},{indexed:!0,internalType:"address",name:"newStaking",type:"address"}],name:"StakingUpdated",type:"event",params:{newStaking:"New staking address",oldStaking:"Old staking address"},notice:"Triggered when the staking address has been updated"},"TransferERC20(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TransferERC20",type:"event",params:{amount:"Amount of the transaction",to:"Address of the receiver",token:"ERC20 token address"},notice:"Triggered when an amount of an ERC20 has been transferred from this contract to an address"},"TreasuryUpdated(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"oldTreasury",type:"address"},{indexed:!0,internalType:"address",name:"newTreasury",type:"address"}],name:"TreasuryUpdated",type:"event",params:{newTreasury:"New treasury address",oldTreasury:"Old treasury address"},notice:"Triggered when the treasury address has been updated"},"Unpaused(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Unpaused",type:"event"}},methods:{"PACT()":{inputs:[],name:"PACT",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"againstPeriods()":{inputs:[],name:"againstPeriods",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"airdropV3()":{inputs:[],name:"airdropV3",outputs:[{internalType:"contract IAirdropV3",name:"",type:"address"}],stateMutability:"view",type:"function"},"apr(address)":{inputs:[{internalType:"address",name:"_stakeholderAddress",type:"address"}],name:"apr",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_stakeholderAddress:"address of the stakeHolder"},returns:{_0:"uint256 APR of the user"},notice:"Calculates the APR of a user based on his staking"},"cUSD()":{inputs:[],name:"cUSD",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"calculateClaimableRewards(address)":{inputs:[{internalType:"address",name:"_donorAddress",type:"address"}],name:"calculateClaimableRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_donorAddress:"address of the donor"},returns:{_0:"claimAmount uint256 sum of all donor's rewards that has not been claimed until _lastPeriodNumber"},notice:"Calculates the rewards from ended reward periods of a donor"},"calculateClaimableRewardsByPeriodNumber(address,uint256)":{inputs:[{internalType:"address",name:"_donorAddress",type:"address"},{internalType:"uint256",name:"_lastPeriodNumber",type:"uint256"}],name:"calculateClaimableRewardsByPeriodNumber",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_donorAddress:"address of the donor",_lastPeriodNumber:"last reward period number to be computed"},returns:{_0:"uint256 sum of all donor's rewards that has not been claimed until _lastPeriodNumber"},notice:"Calculates the rewards from ended reward periods of a donor"},"claimDelay()":{inputs:[],name:"claimDelay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"claimRewards()":{inputs:[],name:"claimRewards",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Transfers to the sender the rewards"},"claimRewardsPartial(uint256)":{inputs:[{internalType:"uint256",name:"_lastPeriodNumber",type:"uint256"}],name:"claimRewardsPartial",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Transfers to the sender the rewards"},"communityDonationRatio()":{inputs:[],name:"communityDonationRatio",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"currentRewardPeriodNumber()":{inputs:[],name:"currentRewardPeriodNumber",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"decayDenominator()":{inputs:[],name:"decayDenominator",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"decayNumerator()":{inputs:[],name:"decayNumerator",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donate(address,uint256,address)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_delegateAddress",type:"address"}],name:"donate",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"Amount of tokens to deposit.",_delegateAddress:"the address that will claim the reward for the donation",_token:"address of the token"},notice:"Transfers tokens to the treasury contract"},"donateFrom(address,address,uint256,address)":{inputs:[{internalType:"address",name:"_from",type:"address"},{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_delegateAddress",type:"address"}],name:"donateFrom",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"Amount of tokens to deposit.",_delegateAddress:"the address that will claim the reward for the donation",_from:"address of the user",_token:"address of the token"},notice:"Transfers tokens from the _from to the treasury contract"},"donateToCommunity(address,address,uint256,address)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_delegateAddress",type:"address"}],name:"donateToCommunity",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers tokens to the community contract",params:{_amount:"amount of tokens to deposit",_community:"address of the community",_delegateAddress:"the address that will claim the reward for the donation",_token:"address of the token"}},"donateVirtual(uint256,address)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_delegateAddress",type:"address"}],name:"donateVirtual",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"Amount of tokens to fake deposit.",_delegateAddress:"the address that will claim the reward for the donation"},notice:"Virtual donate tokens to the treasury contract"},"donationCount()":{inputs:[],name:"donationCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donations(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"donations",outputs:[{internalType:"address",name:"donor",type:"address"},{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"rewardPeriod",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"contract IERC20Upgradeable",name:"token",type:"address"},{internalType:"uint256",name:"initialAmount",type:"uint256"}],stateMutability:"view",type:"function"},"donorRewardPeriod(address,uint256)":{inputs:[{internalType:"address",name:"_donor",type:"address"},{internalType:"uint256",name:"_rewardPeriodIndex",type:"uint256"}],name:"donorRewardPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_donor:"address of the donor",_rewardPeriodIndex:"index of the reward period"},returns:{_0:"uint256 number of the reward period"},notice:"Returns a reward period number from a donor reward period list"},"donorScore(address)":{inputs:[{internalType:"address",name:"_donorAddress",type:"address"}],name:"donorScore",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Calculate the score of a user based as this ratio (his donation and staking) / (all donation and staking) E.G. score = 0.01 * 1e18 => the donor have have 1% score      so he will get 1% of the reward",params:{_donorAddress:"address of the donor"},returns:{_0:"uint256    donor's score"}},"donors(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"donors",outputs:[{internalType:"uint256",name:"lastClaim",type:"uint256"},{internalType:"uint256",name:"rewardPeriodsCount",type:"uint256"},{internalType:"uint256",name:"lastClaimPeriod",type:"uint256"}],stateMutability:"view",type:"function"},"estimateClaimableReward(address)":{inputs:[{internalType:"address",name:"_donorAddress",type:"address"}],name:"estimateClaimableReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_donorAddress:"address of the donor"},returns:{_0:"uint256 reward that donor will receive in current reward period if there isn't another donation"},notice:"Calculates the estimate reward of a donor for current reward period"},"estimateClaimableRewardAdvance(address)":{inputs:[{internalType:"address",name:"_donorAddress",type:"address"}],name:"estimateClaimableRewardAdvance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_donorAddress:"address of the donor"},returns:{_0:"uint256 the estimate reward donor will receive after against periods based on the current donations and stakings"},notice:"Calculates the estimate reward of a donor for the next x reward periods"},"estimateClaimableRewardByStaking(address)":{inputs:[{internalType:"address",name:"_donorAddress",type:"address"}],name:"estimateClaimableRewardByStaking",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",returns:{_0:"uint256 estimated reward by donor stakes"},notice:"Calculates the estimate reward of a donor for current reward period based on his staking"},"estimateNewDonationClaimableRewardAdvance(uint256)":{inputs:[{internalType:"uint256",name:"_donationAmount",type:"uint256"}],name:"estimateNewDonationClaimableRewardAdvance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_donationAmount:"amount of the donation"},returns:{_0:"uint256 the estimate reward donor will receive after against periods based on the current donations and stakings"},notice:"Calculates the estimate reward of a possible new donation  for the next againstPeriods reward periods"},"generalApr()":{inputs:[],name:"generalApr",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",returns:{_0:"uint256 APR"},notice:"Calculates the APR"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function",notice:"Returns the current implementation version"},"initialize(address,address,address,uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_cUSD",type:"address"},{internalType:"contract IERC20Upgradeable",name:"_PACT",type:"address"},{internalType:"contract ITreasury",name:"_treasury",type:"address"},{internalType:"uint256",name:"_firstRewardPerBlock",type:"uint256"},{internalType:"uint256",name:"_rewardPeriodSize",type:"uint256"},{internalType:"uint256",name:"_startingBlock",type:"uint256"},{internalType:"uint256",name:"_decayNumerator",type:"uint256"},{internalType:"uint256",name:"_decayDenominator",type:"uint256"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",params:{_PACT:"Address of the PACT Token",_cUSD:"Address of the cUSD token",_decayDenominator:"Decay denominator used for calculating the new reward per block based on the previous reward per block",_decayNumerator:"Decay numerator used for calculating the new reward per block based on the previous reward per block",_firstRewardPerBlock:"Number of PACTs given for each block                              from the first reward period",_rewardPeriodSize:"Number of blocks of the reward period",_startingBlock:"First block of the first reward period",_treasury:"Address of the Treasury"},notice:"Used to initialize a new DonationMiner contract"},"lastPeriodsDonations(address)":{inputs:[{internalType:"address",name:"_donorAddress",type:"address"}],name:"lastPeriodsDonations",outputs:[{internalType:"uint256",name:"donorAmount",type:"uint256"},{internalType:"uint256",name:"totalAmount",type:"uint256"}],stateMutability:"view",type:"function",details:"Calculate all donations on the last X epochs as well as everyone else in the same period.",params:{_donorAddress:"address of the donor"},returns:{donorAmount:"uint256    sum of donor's donations",totalAmount:"uint256    sum of all donations"}},"microcredit()":{inputs:[],name:"microcredit",outputs:[{internalType:"contract IMicrocredit",name:"",type:"address"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"paused()":{inputs:[],name:"paused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns true if the contract is paused, and false otherwise."},"recurringCronAddress()":{inputs:[],name:"recurringCronAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"rewardPeriodCount()":{inputs:[],name:"rewardPeriodCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriodDonorAmount(uint256,address)":{inputs:[{internalType:"uint256",name:"_period",type:"uint256"},{internalType:"address",name:"_donor",type:"address"}],name:"rewardPeriodDonorAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_donor:"address of the donor",_period:"number of the reward period"},returns:{_0:"uint256 amount of cUSD donated by the user in this reward period"},notice:"Returns the amount of cUSD donated by a user in a reward period"},"rewardPeriodDonorStakeAmounts(uint256,address)":{inputs:[{internalType:"uint256",name:"_period",type:"uint256"},{internalType:"address",name:"_donor",type:"address"}],name:"rewardPeriodDonorStakeAmounts",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_donor:"address of the donor",_period:"reward period number"},returns:{_0:"uint256 amount of PACT staked by a user at the and of the reward period"},notice:"Returns the amount of PACT staked by a user at the and of the reward period"},"rewardPeriodSize()":{inputs:[],name:"rewardPeriodSize",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriods(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"rewardPeriods",outputs:[{internalType:"uint256",name:"rewardPerBlock",type:"uint256"},{internalType:"uint256",name:"rewardAmount",type:"uint256"},{internalType:"uint256",name:"startBlock",type:"uint256"},{internalType:"uint256",name:"endBlock",type:"uint256"},{internalType:"uint256",name:"donationsAmount",type:"uint256"},{internalType:"uint256",name:"againstPeriods",type:"uint256"},{internalType:"uint256",name:"stakesAmount",type:"uint256"},{internalType:"uint256",name:"stakingDonationRatio",type:"uint256"}],stateMutability:"view",type:"function"},"setStakingAmounts(address,uint256,uint256)":{inputs:[{internalType:"address",name:"_holderAddress",type:"address"},{internalType:"uint256",name:"_holderAmount",type:"uint256"},{internalType:"uint256",name:"_totalAmount",type:"uint256"}],name:"setStakingAmounts",outputs:[],stateMutability:"nonpayable",type:"function"},"stakeRewards()":{inputs:[],name:"stakeRewards",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Stakes the reward"},"stakeRewardsPartial(uint256)":{inputs:[{internalType:"uint256",name:"_lastPeriodNumber",type:"uint256"}],name:"stakeRewardsPartial",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Stakes the reward"},"staking()":{inputs:[],name:"staking",outputs:[{internalType:"contract IStaking",name:"",type:"address"}],stateMutability:"view",type:"function"},"stakingDonationRatio()":{inputs:[],name:"stakingDonationRatio",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"amount of the transaction",_to:"address of the receiver",_token:"address of the ERC20 token"},notice:"Transfers an amount of an ERC20 from this contract to an address"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"treasury()":{inputs:[],name:"treasury",outputs:[{internalType:"contract ITreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"updateAgainstPeriods(uint256)":{inputs:[{internalType:"uint256",name:"_newAgainstPeriods",type:"uint256"}],name:"updateAgainstPeriods",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newAgainstPeriods:"Number of reward periods for the backward computation"},notice:"Updates againstPeriods value"},"updateAirdropV3(address)":{inputs:[{internalType:"contract IAirdropV3",name:"_newAirdropV3",type:"address"}],name:"updateAirdropV3",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newAirdropV3:"address of new AirdropV3 contract"},notice:"Updates AirdropV3 address"},"updateClaimDelay(uint256)":{inputs:[{internalType:"uint256",name:"_newClaimDelay",type:"uint256"}],name:"updateClaimDelay",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newClaimDelay:"Number of reward periods a donor has to wait after                            a donation until he will be able to claim his reward"},notice:"Updates claimDelay value"},"updateCommunityDonationRatio(uint256)":{inputs:[{internalType:"uint256",name:"_newCommunityDonationRatio",type:"uint256"}],name:"updateCommunityDonationRatio",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newCommunityDonationRatio:"Ratio between 1USD donated into the treasury vs 1USD donated to a community"},notice:"Updates communityDonationRatio value"},"updateMicrocredit(address)":{inputs:[{internalType:"contract IMicrocredit",name:"_newMicrocredit",type:"address"}],name:"updateMicrocredit",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newMicrocredit:"address of new Microcredit contract"},notice:"Updates Microcredit address"},"updateRecurringCronAddress(address)":{inputs:[{internalType:"address",name:"_newRecurringCronAddress",type:"address"}],name:"updateRecurringCronAddress",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newRecurringCronAddress:"new address of recurring cron"},notice:"Updates recurring cron address address"},"updateRewardPeriodParams(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"_newRewardPeriodSize",type:"uint256"},{internalType:"uint256",name:"_newDecayNumerator",type:"uint256"},{internalType:"uint256",name:"_newDecayDenominator",type:"uint256"}],name:"updateRewardPeriodParams",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newDecayDenominator:"value of new decayDenominator",_newDecayNumerator:"value of new decayNumerator",_newRewardPeriodSize:"value of new rewardPeriodSize"},notice:"Updates reward period default params"},"updateStaking(address)":{inputs:[{internalType:"contract IStaking",name:"_newStaking",type:"address"}],name:"updateStaking",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newStaking:"address of new Staking contract"},notice:"Updates Staking address"},"updateStakingDonationRatio(uint256)":{inputs:[{internalType:"uint256",name:"_newStakingDonationRatio",type:"uint256"}],name:"updateStakingDonationRatio",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newStakingDonationRatio:"Number of tokens that need to be staked to be counted as 1 PACT donated"},notice:"Updates stakingDonationRatio value"},"updateTreasury(address)":{inputs:[{internalType:"contract ITreasury",name:"_newTreasury",type:"address"}],name:"updateTreasury",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newTreasury:"address of new treasury_ contract"},notice:"Updates Treasury address"}}},"contracts/donationMiner/DonationMinerProxy.sol:DonationMinerProxy":{source:"contracts/donationMiner/DonationMinerProxy.sol",name:"DonationMinerProxy",constructor:{inputs:[{internalType:"address",name:"_logic",type:"address"},{internalType:"address",name:"_proxyAdmin",type:"address"}],stateMutability:"nonpayable",type:"constructor"},fallback:{stateMutability:"payable",type:"fallback"},receive:{stateMutability:"payable",type:"receive"},events:{"AdminChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"previousAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"AdminChanged",type:"event"},"BeaconUpgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"beacon",type:"address"}],name:"BeaconUpgraded",type:"event"},"Upgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"implementation",type:"address"}],name:"Upgraded",type:"event"}},methods:{"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"admin_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"changeAdmin(address)":{inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"changeAdmin",outputs:[],stateMutability:"nonpayable",type:"function",details:"Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."},"implementation()":{inputs:[],name:"implementation",outputs:[{internalType:"address",name:"implementation_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"},"upgradeTo(address)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"}],name:"upgradeTo",outputs:[],stateMutability:"nonpayable",type:"function",details:"Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."},"upgradeToAndCall(address,bytes)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"upgradeToAndCall",outputs:[],stateMutability:"payable",type:"function",details:"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."}}},"contracts/donationMiner/interfaces/DonationMinerStorageV1.sol:DonationMinerStorageV1":{source:"contracts/donationMiner/interfaces/DonationMinerStorageV1.sol",name:"DonationMinerStorageV1",title:"Storage for DonationMiner",notice:"For future upgrades, do not change DonationMinerStorageV1. Create a new contract which implements DonationMinerStorageV1 and following the naming convention DonationMinerStorageVX.",methods:{"PACT()":{inputs:[],name:"PACT",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"againstPeriods()":{inputs:[],name:"againstPeriods",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"airdropV3()":{inputs:[],name:"airdropV3",outputs:[{internalType:"contract IAirdropV3",name:"",type:"address"}],stateMutability:"view",type:"function"},"apr(address)":{inputs:[{internalType:"address",name:"_stakeholderAddress",type:"address"}],name:"apr",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"cUSD()":{inputs:[],name:"cUSD",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"calculateClaimableRewards(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"calculateClaimableRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"calculateClaimableRewardsByPeriodNumber(address,uint256)":{inputs:[{internalType:"address",name:"_donor",type:"address"},{internalType:"uint256",name:"_lastPeriodNumber",type:"uint256"}],name:"calculateClaimableRewardsByPeriodNumber",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"claimDelay()":{inputs:[],name:"claimDelay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"claimRewards()":{inputs:[],name:"claimRewards",outputs:[],stateMutability:"nonpayable",type:"function"},"claimRewardsPartial(uint256)":{inputs:[{internalType:"uint256",name:"_lastPeriodNumber",type:"uint256"}],name:"claimRewardsPartial",outputs:[],stateMutability:"nonpayable",type:"function"},"communityDonationRatio()":{inputs:[],name:"communityDonationRatio",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"currentRewardPeriodNumber()":{inputs:[],name:"currentRewardPeriodNumber",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"decayDenominator()":{inputs:[],name:"decayDenominator",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"decayNumerator()":{inputs:[],name:"decayNumerator",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donate(address,uint256,address)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_delegateAddress",type:"address"}],name:"donate",outputs:[],stateMutability:"nonpayable",type:"function"},"donateFrom(address,address,uint256,address)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"contract IERC20Upgradeable",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"delegateAddress",type:"address"}],name:"donateFrom",outputs:[],stateMutability:"nonpayable",type:"function"},"donateToCommunity(address,address,uint256,address)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_delegateAddress",type:"address"}],name:"donateToCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"donateVirtual(uint256,address)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_delegateAddress",type:"address"}],name:"donateVirtual",outputs:[],stateMutability:"nonpayable",type:"function"},"donationCount()":{inputs:[],name:"donationCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donations(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"donations",outputs:[{internalType:"address",name:"donor",type:"address"},{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"rewardPeriod",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"contract IERC20Upgradeable",name:"token",type:"address"},{internalType:"uint256",name:"initialAmount",type:"uint256"}],stateMutability:"view",type:"function"},"donorRewardPeriod(address,uint256)":{inputs:[{internalType:"address",name:"_donor",type:"address"},{internalType:"uint256",name:"_rewardPeriodIndex",type:"uint256"}],name:"donorRewardPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donors(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"donors",outputs:[{internalType:"uint256",name:"lastClaim",type:"uint256"},{internalType:"uint256",name:"rewardPeriodsCount",type:"uint256"},{internalType:"uint256",name:"lastClaimPeriod",type:"uint256"}],stateMutability:"view",type:"function"},"estimateClaimableReward(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"estimateClaimableReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"estimateClaimableRewardAdvance(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"estimateClaimableRewardAdvance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"estimateClaimableRewardByStaking(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"estimateClaimableRewardByStaking",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"estimateNewDonationClaimableRewardAdvance(uint256)":{inputs:[{internalType:"uint256",name:"_donationAmount",type:"uint256"}],name:"estimateNewDonationClaimableRewardAdvance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"generalApr()":{inputs:[],name:"generalApr",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"lastPeriodsDonations(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"lastPeriodsDonations",outputs:[{internalType:"uint256",name:"donorAmount",type:"uint256"},{internalType:"uint256",name:"totalAmount",type:"uint256"}],stateMutability:"view",type:"function"},"microcredit()":{inputs:[],name:"microcredit",outputs:[{internalType:"contract IMicrocredit",name:"",type:"address"}],stateMutability:"view",type:"function"},"recurringCronAddress()":{inputs:[],name:"recurringCronAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"rewardPeriodCount()":{inputs:[],name:"rewardPeriodCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriodDonorAmount(uint256,address)":{inputs:[{internalType:"uint256",name:"_period",type:"uint256"},{internalType:"address",name:"_donor",type:"address"}],name:"rewardPeriodDonorAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriodDonorStakeAmounts(uint256,address)":{inputs:[{internalType:"uint256",name:"_period",type:"uint256"},{internalType:"address",name:"_donor",type:"address"}],name:"rewardPeriodDonorStakeAmounts",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriodSize()":{inputs:[],name:"rewardPeriodSize",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriods(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"rewardPeriods",outputs:[{internalType:"uint256",name:"rewardPerBlock",type:"uint256"},{internalType:"uint256",name:"rewardAmount",type:"uint256"},{internalType:"uint256",name:"startBlock",type:"uint256"},{internalType:"uint256",name:"endBlock",type:"uint256"},{internalType:"uint256",name:"donationsAmount",type:"uint256"},{internalType:"uint256",name:"againstPeriods",type:"uint256"},{internalType:"uint256",name:"stakesAmount",type:"uint256"},{internalType:"uint256",name:"stakingDonationRatio",type:"uint256"}],stateMutability:"view",type:"function"},"setStakingAmounts(address,uint256,uint256)":{inputs:[{internalType:"address",name:"_holderAddress",type:"address"},{internalType:"uint256",name:"_holderStakeAmount",type:"uint256"},{internalType:"uint256",name:"_totalStakesAmount",type:"uint256"}],name:"setStakingAmounts",outputs:[],stateMutability:"nonpayable",type:"function"},"stakeRewards()":{inputs:[],name:"stakeRewards",outputs:[],stateMutability:"nonpayable",type:"function"},"stakeRewardsPartial(uint256)":{inputs:[{internalType:"uint256",name:"_lastPeriodNumber",type:"uint256"}],name:"stakeRewardsPartial",outputs:[],stateMutability:"nonpayable",type:"function"},"staking()":{inputs:[],name:"staking",outputs:[{internalType:"contract IStaking",name:"",type:"address"}],stateMutability:"view",type:"function"},"stakingDonationRatio()":{inputs:[],name:"stakingDonationRatio",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function"},"treasury()":{inputs:[],name:"treasury",outputs:[{internalType:"contract ITreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"updateAgainstPeriods(uint256)":{inputs:[{internalType:"uint256",name:"_newAgainstPeriods",type:"uint256"}],name:"updateAgainstPeriods",outputs:[],stateMutability:"nonpayable",type:"function"},"updateAirdropV3(address)":{inputs:[{internalType:"contract IAirdropV3",name:"_newAirdropV3",type:"address"}],name:"updateAirdropV3",outputs:[],stateMutability:"nonpayable",type:"function"},"updateClaimDelay(uint256)":{inputs:[{internalType:"uint256",name:"_newClaimDelay",type:"uint256"}],name:"updateClaimDelay",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityDonationRatio(uint256)":{inputs:[{internalType:"uint256",name:"_newCommunityDonationRatio",type:"uint256"}],name:"updateCommunityDonationRatio",outputs:[],stateMutability:"nonpayable",type:"function"},"updateMicrocredit(address)":{inputs:[{internalType:"contract IMicrocredit",name:"newMicrocredit",type:"address"}],name:"updateMicrocredit",outputs:[],stateMutability:"nonpayable",type:"function"},"updateRecurringCronAddress(address)":{inputs:[{internalType:"address",name:"newRecurringCronAddress",type:"address"}],name:"updateRecurringCronAddress",outputs:[],stateMutability:"nonpayable",type:"function"},"updateRewardPeriodParams(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"_newRewardPeriodSize",type:"uint256"},{internalType:"uint256",name:"_newDecayNumerator",type:"uint256"},{internalType:"uint256",name:"_newDecayDenominator",type:"uint256"}],name:"updateRewardPeriodParams",outputs:[],stateMutability:"nonpayable",type:"function"},"updateStaking(address)":{inputs:[{internalType:"contract IStaking",name:"_newStaking",type:"address"}],name:"updateStaking",outputs:[],stateMutability:"nonpayable",type:"function"},"updateStakingDonationRatio(uint256)":{inputs:[{internalType:"uint256",name:"_newStakingDonationRatio",type:"uint256"}],name:"updateStakingDonationRatio",outputs:[],stateMutability:"nonpayable",type:"function"},"updateTreasury(address)":{inputs:[{internalType:"contract ITreasury",name:"_newTreasury",type:"address"}],name:"updateTreasury",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/donationMiner/interfaces/DonationMinerStorageV2.sol:DonationMinerStorageV2":{source:"contracts/donationMiner/interfaces/DonationMinerStorageV2.sol",name:"DonationMinerStorageV2",title:"Storage for DonationMiner",notice:"For future upgrades, do not change DonationMinerStorageV2. Create a new contract which implements DonationMinerStorageV2 and following the naming convention DonationMinerStorageVX.",methods:{"PACT()":{inputs:[],name:"PACT",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"againstPeriods()":{inputs:[],name:"againstPeriods",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"airdropV3()":{inputs:[],name:"airdropV3",outputs:[{internalType:"contract IAirdropV3",name:"",type:"address"}],stateMutability:"view",type:"function"},"apr(address)":{inputs:[{internalType:"address",name:"_stakeholderAddress",type:"address"}],name:"apr",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"cUSD()":{inputs:[],name:"cUSD",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"calculateClaimableRewards(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"calculateClaimableRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"calculateClaimableRewardsByPeriodNumber(address,uint256)":{inputs:[{internalType:"address",name:"_donor",type:"address"},{internalType:"uint256",name:"_lastPeriodNumber",type:"uint256"}],name:"calculateClaimableRewardsByPeriodNumber",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"claimDelay()":{inputs:[],name:"claimDelay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"claimRewards()":{inputs:[],name:"claimRewards",outputs:[],stateMutability:"nonpayable",type:"function"},"claimRewardsPartial(uint256)":{inputs:[{internalType:"uint256",name:"_lastPeriodNumber",type:"uint256"}],name:"claimRewardsPartial",outputs:[],stateMutability:"nonpayable",type:"function"},"communityDonationRatio()":{inputs:[],name:"communityDonationRatio",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"currentRewardPeriodNumber()":{inputs:[],name:"currentRewardPeriodNumber",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"decayDenominator()":{inputs:[],name:"decayDenominator",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"decayNumerator()":{inputs:[],name:"decayNumerator",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donate(address,uint256,address)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_delegateAddress",type:"address"}],name:"donate",outputs:[],stateMutability:"nonpayable",type:"function"},"donateFrom(address,address,uint256,address)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"contract IERC20Upgradeable",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"delegateAddress",type:"address"}],name:"donateFrom",outputs:[],stateMutability:"nonpayable",type:"function"},"donateToCommunity(address,address,uint256,address)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_delegateAddress",type:"address"}],name:"donateToCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"donateVirtual(uint256,address)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_delegateAddress",type:"address"}],name:"donateVirtual",outputs:[],stateMutability:"nonpayable",type:"function"},"donationCount()":{inputs:[],name:"donationCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donations(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"donations",outputs:[{internalType:"address",name:"donor",type:"address"},{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"rewardPeriod",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"contract IERC20Upgradeable",name:"token",type:"address"},{internalType:"uint256",name:"initialAmount",type:"uint256"}],stateMutability:"view",type:"function"},"donorRewardPeriod(address,uint256)":{inputs:[{internalType:"address",name:"_donor",type:"address"},{internalType:"uint256",name:"_rewardPeriodIndex",type:"uint256"}],name:"donorRewardPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donors(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"donors",outputs:[{internalType:"uint256",name:"lastClaim",type:"uint256"},{internalType:"uint256",name:"rewardPeriodsCount",type:"uint256"},{internalType:"uint256",name:"lastClaimPeriod",type:"uint256"}],stateMutability:"view",type:"function"},"estimateClaimableReward(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"estimateClaimableReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"estimateClaimableRewardAdvance(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"estimateClaimableRewardAdvance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"estimateClaimableRewardByStaking(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"estimateClaimableRewardByStaking",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"estimateNewDonationClaimableRewardAdvance(uint256)":{inputs:[{internalType:"uint256",name:"_donationAmount",type:"uint256"}],name:"estimateNewDonationClaimableRewardAdvance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"generalApr()":{inputs:[],name:"generalApr",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"lastPeriodsDonations(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"lastPeriodsDonations",outputs:[{internalType:"uint256",name:"donorAmount",type:"uint256"},{internalType:"uint256",name:"totalAmount",type:"uint256"}],stateMutability:"view",type:"function"},"microcredit()":{inputs:[],name:"microcredit",outputs:[{internalType:"contract IMicrocredit",name:"",type:"address"}],stateMutability:"view",type:"function"},"recurringCronAddress()":{inputs:[],name:"recurringCronAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"rewardPeriodCount()":{inputs:[],name:"rewardPeriodCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriodDonorAmount(uint256,address)":{inputs:[{internalType:"uint256",name:"_period",type:"uint256"},{internalType:"address",name:"_donor",type:"address"}],name:"rewardPeriodDonorAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriodDonorStakeAmounts(uint256,address)":{inputs:[{internalType:"uint256",name:"_period",type:"uint256"},{internalType:"address",name:"_donor",type:"address"}],name:"rewardPeriodDonorStakeAmounts",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriodSize()":{inputs:[],name:"rewardPeriodSize",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriods(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"rewardPeriods",outputs:[{internalType:"uint256",name:"rewardPerBlock",type:"uint256"},{internalType:"uint256",name:"rewardAmount",type:"uint256"},{internalType:"uint256",name:"startBlock",type:"uint256"},{internalType:"uint256",name:"endBlock",type:"uint256"},{internalType:"uint256",name:"donationsAmount",type:"uint256"},{internalType:"uint256",name:"againstPeriods",type:"uint256"},{internalType:"uint256",name:"stakesAmount",type:"uint256"},{internalType:"uint256",name:"stakingDonationRatio",type:"uint256"}],stateMutability:"view",type:"function"},"setStakingAmounts(address,uint256,uint256)":{inputs:[{internalType:"address",name:"_holderAddress",type:"address"},{internalType:"uint256",name:"_holderStakeAmount",type:"uint256"},{internalType:"uint256",name:"_totalStakesAmount",type:"uint256"}],name:"setStakingAmounts",outputs:[],stateMutability:"nonpayable",type:"function"},"stakeRewards()":{inputs:[],name:"stakeRewards",outputs:[],stateMutability:"nonpayable",type:"function"},"stakeRewardsPartial(uint256)":{inputs:[{internalType:"uint256",name:"_lastPeriodNumber",type:"uint256"}],name:"stakeRewardsPartial",outputs:[],stateMutability:"nonpayable",type:"function"},"staking()":{inputs:[],name:"staking",outputs:[{internalType:"contract IStaking",name:"",type:"address"}],stateMutability:"view",type:"function"},"stakingDonationRatio()":{inputs:[],name:"stakingDonationRatio",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function"},"treasury()":{inputs:[],name:"treasury",outputs:[{internalType:"contract ITreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"updateAgainstPeriods(uint256)":{inputs:[{internalType:"uint256",name:"_newAgainstPeriods",type:"uint256"}],name:"updateAgainstPeriods",outputs:[],stateMutability:"nonpayable",type:"function"},"updateAirdropV3(address)":{inputs:[{internalType:"contract IAirdropV3",name:"_newAirdropV3",type:"address"}],name:"updateAirdropV3",outputs:[],stateMutability:"nonpayable",type:"function"},"updateClaimDelay(uint256)":{inputs:[{internalType:"uint256",name:"_newClaimDelay",type:"uint256"}],name:"updateClaimDelay",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityDonationRatio(uint256)":{inputs:[{internalType:"uint256",name:"_newCommunityDonationRatio",type:"uint256"}],name:"updateCommunityDonationRatio",outputs:[],stateMutability:"nonpayable",type:"function"},"updateMicrocredit(address)":{inputs:[{internalType:"contract IMicrocredit",name:"newMicrocredit",type:"address"}],name:"updateMicrocredit",outputs:[],stateMutability:"nonpayable",type:"function"},"updateRecurringCronAddress(address)":{inputs:[{internalType:"address",name:"newRecurringCronAddress",type:"address"}],name:"updateRecurringCronAddress",outputs:[],stateMutability:"nonpayable",type:"function"},"updateRewardPeriodParams(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"_newRewardPeriodSize",type:"uint256"},{internalType:"uint256",name:"_newDecayNumerator",type:"uint256"},{internalType:"uint256",name:"_newDecayDenominator",type:"uint256"}],name:"updateRewardPeriodParams",outputs:[],stateMutability:"nonpayable",type:"function"},"updateStaking(address)":{inputs:[{internalType:"contract IStaking",name:"_newStaking",type:"address"}],name:"updateStaking",outputs:[],stateMutability:"nonpayable",type:"function"},"updateStakingDonationRatio(uint256)":{inputs:[{internalType:"uint256",name:"_newStakingDonationRatio",type:"uint256"}],name:"updateStakingDonationRatio",outputs:[],stateMutability:"nonpayable",type:"function"},"updateTreasury(address)":{inputs:[{internalType:"contract ITreasury",name:"_newTreasury",type:"address"}],name:"updateTreasury",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/donationMiner/interfaces/DonationMinerStorageV3.sol:DonationMinerStorageV3":{source:"contracts/donationMiner/interfaces/DonationMinerStorageV3.sol",name:"DonationMinerStorageV3",title:"Storage for DonationMiner",notice:"For future upgrades, do not change DonationMinerStorageV3. Create a new contract which implements DonationMinerStorageV3 and following the naming convention DonationMinerStorageVX.",methods:{"PACT()":{inputs:[],name:"PACT",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"againstPeriods()":{inputs:[],name:"againstPeriods",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"airdropV3()":{inputs:[],name:"airdropV3",outputs:[{internalType:"contract IAirdropV3",name:"",type:"address"}],stateMutability:"view",type:"function"},"apr(address)":{inputs:[{internalType:"address",name:"_stakeholderAddress",type:"address"}],name:"apr",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"cUSD()":{inputs:[],name:"cUSD",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"calculateClaimableRewards(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"calculateClaimableRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"calculateClaimableRewardsByPeriodNumber(address,uint256)":{inputs:[{internalType:"address",name:"_donor",type:"address"},{internalType:"uint256",name:"_lastPeriodNumber",type:"uint256"}],name:"calculateClaimableRewardsByPeriodNumber",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"claimDelay()":{inputs:[],name:"claimDelay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"claimRewards()":{inputs:[],name:"claimRewards",outputs:[],stateMutability:"nonpayable",type:"function"},"claimRewardsPartial(uint256)":{inputs:[{internalType:"uint256",name:"_lastPeriodNumber",type:"uint256"}],name:"claimRewardsPartial",outputs:[],stateMutability:"nonpayable",type:"function"},"communityDonationRatio()":{inputs:[],name:"communityDonationRatio",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"currentRewardPeriodNumber()":{inputs:[],name:"currentRewardPeriodNumber",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"decayDenominator()":{inputs:[],name:"decayDenominator",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"decayNumerator()":{inputs:[],name:"decayNumerator",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donate(address,uint256,address)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_delegateAddress",type:"address"}],name:"donate",outputs:[],stateMutability:"nonpayable",type:"function"},"donateFrom(address,address,uint256,address)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"contract IERC20Upgradeable",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"delegateAddress",type:"address"}],name:"donateFrom",outputs:[],stateMutability:"nonpayable",type:"function"},"donateToCommunity(address,address,uint256,address)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_delegateAddress",type:"address"}],name:"donateToCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"donateVirtual(uint256,address)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_delegateAddress",type:"address"}],name:"donateVirtual",outputs:[],stateMutability:"nonpayable",type:"function"},"donationCount()":{inputs:[],name:"donationCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donations(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"donations",outputs:[{internalType:"address",name:"donor",type:"address"},{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"rewardPeriod",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"contract IERC20Upgradeable",name:"token",type:"address"},{internalType:"uint256",name:"initialAmount",type:"uint256"}],stateMutability:"view",type:"function"},"donorRewardPeriod(address,uint256)":{inputs:[{internalType:"address",name:"_donor",type:"address"},{internalType:"uint256",name:"_rewardPeriodIndex",type:"uint256"}],name:"donorRewardPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donors(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"donors",outputs:[{internalType:"uint256",name:"lastClaim",type:"uint256"},{internalType:"uint256",name:"rewardPeriodsCount",type:"uint256"},{internalType:"uint256",name:"lastClaimPeriod",type:"uint256"}],stateMutability:"view",type:"function"},"estimateClaimableReward(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"estimateClaimableReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"estimateClaimableRewardAdvance(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"estimateClaimableRewardAdvance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"estimateClaimableRewardByStaking(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"estimateClaimableRewardByStaking",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"estimateNewDonationClaimableRewardAdvance(uint256)":{inputs:[{internalType:"uint256",name:"_donationAmount",type:"uint256"}],name:"estimateNewDonationClaimableRewardAdvance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"generalApr()":{inputs:[],name:"generalApr",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"lastPeriodsDonations(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"lastPeriodsDonations",outputs:[{internalType:"uint256",name:"donorAmount",type:"uint256"},{internalType:"uint256",name:"totalAmount",type:"uint256"}],stateMutability:"view",type:"function"},"microcredit()":{inputs:[],name:"microcredit",outputs:[{internalType:"contract IMicrocredit",name:"",type:"address"}],stateMutability:"view",type:"function"},"recurringCronAddress()":{inputs:[],name:"recurringCronAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"rewardPeriodCount()":{inputs:[],name:"rewardPeriodCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriodDonorAmount(uint256,address)":{inputs:[{internalType:"uint256",name:"_period",type:"uint256"},{internalType:"address",name:"_donor",type:"address"}],name:"rewardPeriodDonorAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriodDonorStakeAmounts(uint256,address)":{inputs:[{internalType:"uint256",name:"_period",type:"uint256"},{internalType:"address",name:"_donor",type:"address"}],name:"rewardPeriodDonorStakeAmounts",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriodSize()":{inputs:[],name:"rewardPeriodSize",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriods(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"rewardPeriods",outputs:[{internalType:"uint256",name:"rewardPerBlock",type:"uint256"},{internalType:"uint256",name:"rewardAmount",type:"uint256"},{internalType:"uint256",name:"startBlock",type:"uint256"},{internalType:"uint256",name:"endBlock",type:"uint256"},{internalType:"uint256",name:"donationsAmount",type:"uint256"},{internalType:"uint256",name:"againstPeriods",type:"uint256"},{internalType:"uint256",name:"stakesAmount",type:"uint256"},{internalType:"uint256",name:"stakingDonationRatio",type:"uint256"}],stateMutability:"view",type:"function"},"setStakingAmounts(address,uint256,uint256)":{inputs:[{internalType:"address",name:"_holderAddress",type:"address"},{internalType:"uint256",name:"_holderStakeAmount",type:"uint256"},{internalType:"uint256",name:"_totalStakesAmount",type:"uint256"}],name:"setStakingAmounts",outputs:[],stateMutability:"nonpayable",type:"function"},"stakeRewards()":{inputs:[],name:"stakeRewards",outputs:[],stateMutability:"nonpayable",type:"function"},"stakeRewardsPartial(uint256)":{inputs:[{internalType:"uint256",name:"_lastPeriodNumber",type:"uint256"}],name:"stakeRewardsPartial",outputs:[],stateMutability:"nonpayable",type:"function"},"staking()":{inputs:[],name:"staking",outputs:[{internalType:"contract IStaking",name:"",type:"address"}],stateMutability:"view",type:"function"},"stakingDonationRatio()":{inputs:[],name:"stakingDonationRatio",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function"},"treasury()":{inputs:[],name:"treasury",outputs:[{internalType:"contract ITreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"updateAgainstPeriods(uint256)":{inputs:[{internalType:"uint256",name:"_newAgainstPeriods",type:"uint256"}],name:"updateAgainstPeriods",outputs:[],stateMutability:"nonpayable",type:"function"},"updateAirdropV3(address)":{inputs:[{internalType:"contract IAirdropV3",name:"_newAirdropV3",type:"address"}],name:"updateAirdropV3",outputs:[],stateMutability:"nonpayable",type:"function"},"updateClaimDelay(uint256)":{inputs:[{internalType:"uint256",name:"_newClaimDelay",type:"uint256"}],name:"updateClaimDelay",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityDonationRatio(uint256)":{inputs:[{internalType:"uint256",name:"_newCommunityDonationRatio",type:"uint256"}],name:"updateCommunityDonationRatio",outputs:[],stateMutability:"nonpayable",type:"function"},"updateMicrocredit(address)":{inputs:[{internalType:"contract IMicrocredit",name:"newMicrocredit",type:"address"}],name:"updateMicrocredit",outputs:[],stateMutability:"nonpayable",type:"function"},"updateRecurringCronAddress(address)":{inputs:[{internalType:"address",name:"newRecurringCronAddress",type:"address"}],name:"updateRecurringCronAddress",outputs:[],stateMutability:"nonpayable",type:"function"},"updateRewardPeriodParams(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"_newRewardPeriodSize",type:"uint256"},{internalType:"uint256",name:"_newDecayNumerator",type:"uint256"},{internalType:"uint256",name:"_newDecayDenominator",type:"uint256"}],name:"updateRewardPeriodParams",outputs:[],stateMutability:"nonpayable",type:"function"},"updateStaking(address)":{inputs:[{internalType:"contract IStaking",name:"_newStaking",type:"address"}],name:"updateStaking",outputs:[],stateMutability:"nonpayable",type:"function"},"updateStakingDonationRatio(uint256)":{inputs:[{internalType:"uint256",name:"_newStakingDonationRatio",type:"uint256"}],name:"updateStakingDonationRatio",outputs:[],stateMutability:"nonpayable",type:"function"},"updateTreasury(address)":{inputs:[{internalType:"contract ITreasury",name:"_newTreasury",type:"address"}],name:"updateTreasury",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/donationMiner/interfaces/DonationMinerStorageV4.sol:DonationMinerStorageV4":{source:"contracts/donationMiner/interfaces/DonationMinerStorageV4.sol",name:"DonationMinerStorageV4",title:"Storage for DonationMiner",notice:"For future upgrades, do not change DonationMinerStorageV4. Create a new contract which implements DonationMinerStorageV4 and following the naming convention DonationMinerStorageVX.",methods:{"PACT()":{inputs:[],name:"PACT",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"againstPeriods()":{inputs:[],name:"againstPeriods",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"airdropV3()":{inputs:[],name:"airdropV3",outputs:[{internalType:"contract IAirdropV3",name:"",type:"address"}],stateMutability:"view",type:"function"},"apr(address)":{inputs:[{internalType:"address",name:"_stakeholderAddress",type:"address"}],name:"apr",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"cUSD()":{inputs:[],name:"cUSD",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"calculateClaimableRewards(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"calculateClaimableRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"calculateClaimableRewardsByPeriodNumber(address,uint256)":{inputs:[{internalType:"address",name:"_donor",type:"address"},{internalType:"uint256",name:"_lastPeriodNumber",type:"uint256"}],name:"calculateClaimableRewardsByPeriodNumber",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"claimDelay()":{inputs:[],name:"claimDelay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"claimRewards()":{inputs:[],name:"claimRewards",outputs:[],stateMutability:"nonpayable",type:"function"},"claimRewardsPartial(uint256)":{inputs:[{internalType:"uint256",name:"_lastPeriodNumber",type:"uint256"}],name:"claimRewardsPartial",outputs:[],stateMutability:"nonpayable",type:"function"},"communityDonationRatio()":{inputs:[],name:"communityDonationRatio",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"currentRewardPeriodNumber()":{inputs:[],name:"currentRewardPeriodNumber",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"decayDenominator()":{inputs:[],name:"decayDenominator",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"decayNumerator()":{inputs:[],name:"decayNumerator",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donate(address,uint256,address)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_delegateAddress",type:"address"}],name:"donate",outputs:[],stateMutability:"nonpayable",type:"function"},"donateFrom(address,address,uint256,address)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"contract IERC20Upgradeable",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"delegateAddress",type:"address"}],name:"donateFrom",outputs:[],stateMutability:"nonpayable",type:"function"},"donateToCommunity(address,address,uint256,address)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_delegateAddress",type:"address"}],name:"donateToCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"donateVirtual(uint256,address)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_delegateAddress",type:"address"}],name:"donateVirtual",outputs:[],stateMutability:"nonpayable",type:"function"},"donationCount()":{inputs:[],name:"donationCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donations(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"donations",outputs:[{internalType:"address",name:"donor",type:"address"},{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"rewardPeriod",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"contract IERC20Upgradeable",name:"token",type:"address"},{internalType:"uint256",name:"initialAmount",type:"uint256"}],stateMutability:"view",type:"function"},"donorRewardPeriod(address,uint256)":{inputs:[{internalType:"address",name:"_donor",type:"address"},{internalType:"uint256",name:"_rewardPeriodIndex",type:"uint256"}],name:"donorRewardPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donors(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"donors",outputs:[{internalType:"uint256",name:"lastClaim",type:"uint256"},{internalType:"uint256",name:"rewardPeriodsCount",type:"uint256"},{internalType:"uint256",name:"lastClaimPeriod",type:"uint256"}],stateMutability:"view",type:"function"},"estimateClaimableReward(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"estimateClaimableReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"estimateClaimableRewardAdvance(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"estimateClaimableRewardAdvance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"estimateClaimableRewardByStaking(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"estimateClaimableRewardByStaking",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"estimateNewDonationClaimableRewardAdvance(uint256)":{inputs:[{internalType:"uint256",name:"_donationAmount",type:"uint256"}],name:"estimateNewDonationClaimableRewardAdvance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"generalApr()":{inputs:[],name:"generalApr",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"lastPeriodsDonations(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"lastPeriodsDonations",outputs:[{internalType:"uint256",name:"donorAmount",type:"uint256"},{internalType:"uint256",name:"totalAmount",type:"uint256"}],stateMutability:"view",type:"function"},"microcredit()":{inputs:[],name:"microcredit",outputs:[{internalType:"contract IMicrocredit",name:"",type:"address"}],stateMutability:"view",type:"function"},"recurringCronAddress()":{inputs:[],name:"recurringCronAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"rewardPeriodCount()":{inputs:[],name:"rewardPeriodCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriodDonorAmount(uint256,address)":{inputs:[{internalType:"uint256",name:"_period",type:"uint256"},{internalType:"address",name:"_donor",type:"address"}],name:"rewardPeriodDonorAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriodDonorStakeAmounts(uint256,address)":{inputs:[{internalType:"uint256",name:"_period",type:"uint256"},{internalType:"address",name:"_donor",type:"address"}],name:"rewardPeriodDonorStakeAmounts",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriodSize()":{inputs:[],name:"rewardPeriodSize",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriods(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"rewardPeriods",outputs:[{internalType:"uint256",name:"rewardPerBlock",type:"uint256"},{internalType:"uint256",name:"rewardAmount",type:"uint256"},{internalType:"uint256",name:"startBlock",type:"uint256"},{internalType:"uint256",name:"endBlock",type:"uint256"},{internalType:"uint256",name:"donationsAmount",type:"uint256"},{internalType:"uint256",name:"againstPeriods",type:"uint256"},{internalType:"uint256",name:"stakesAmount",type:"uint256"},{internalType:"uint256",name:"stakingDonationRatio",type:"uint256"}],stateMutability:"view",type:"function"},"setStakingAmounts(address,uint256,uint256)":{inputs:[{internalType:"address",name:"_holderAddress",type:"address"},{internalType:"uint256",name:"_holderStakeAmount",type:"uint256"},{internalType:"uint256",name:"_totalStakesAmount",type:"uint256"}],name:"setStakingAmounts",outputs:[],stateMutability:"nonpayable",type:"function"},"stakeRewards()":{inputs:[],name:"stakeRewards",outputs:[],stateMutability:"nonpayable",type:"function"},"stakeRewardsPartial(uint256)":{inputs:[{internalType:"uint256",name:"_lastPeriodNumber",type:"uint256"}],name:"stakeRewardsPartial",outputs:[],stateMutability:"nonpayable",type:"function"},"staking()":{inputs:[],name:"staking",outputs:[{internalType:"contract IStaking",name:"",type:"address"}],stateMutability:"view",type:"function"},"stakingDonationRatio()":{inputs:[],name:"stakingDonationRatio",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function"},"treasury()":{inputs:[],name:"treasury",outputs:[{internalType:"contract ITreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"updateAgainstPeriods(uint256)":{inputs:[{internalType:"uint256",name:"_newAgainstPeriods",type:"uint256"}],name:"updateAgainstPeriods",outputs:[],stateMutability:"nonpayable",type:"function"},"updateAirdropV3(address)":{inputs:[{internalType:"contract IAirdropV3",name:"_newAirdropV3",type:"address"}],name:"updateAirdropV3",outputs:[],stateMutability:"nonpayable",type:"function"},"updateClaimDelay(uint256)":{inputs:[{internalType:"uint256",name:"_newClaimDelay",type:"uint256"}],name:"updateClaimDelay",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityDonationRatio(uint256)":{inputs:[{internalType:"uint256",name:"_newCommunityDonationRatio",type:"uint256"}],name:"updateCommunityDonationRatio",outputs:[],stateMutability:"nonpayable",type:"function"},"updateMicrocredit(address)":{inputs:[{internalType:"contract IMicrocredit",name:"newMicrocredit",type:"address"}],name:"updateMicrocredit",outputs:[],stateMutability:"nonpayable",type:"function"},"updateRecurringCronAddress(address)":{inputs:[{internalType:"address",name:"newRecurringCronAddress",type:"address"}],name:"updateRecurringCronAddress",outputs:[],stateMutability:"nonpayable",type:"function"},"updateRewardPeriodParams(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"_newRewardPeriodSize",type:"uint256"},{internalType:"uint256",name:"_newDecayNumerator",type:"uint256"},{internalType:"uint256",name:"_newDecayDenominator",type:"uint256"}],name:"updateRewardPeriodParams",outputs:[],stateMutability:"nonpayable",type:"function"},"updateStaking(address)":{inputs:[{internalType:"contract IStaking",name:"_newStaking",type:"address"}],name:"updateStaking",outputs:[],stateMutability:"nonpayable",type:"function"},"updateStakingDonationRatio(uint256)":{inputs:[{internalType:"uint256",name:"_newStakingDonationRatio",type:"uint256"}],name:"updateStakingDonationRatio",outputs:[],stateMutability:"nonpayable",type:"function"},"updateTreasury(address)":{inputs:[{internalType:"contract ITreasury",name:"_newTreasury",type:"address"}],name:"updateTreasury",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/donationMiner/interfaces/DonationMinerStorageV5.sol:DonationMinerStorageV5":{source:"contracts/donationMiner/interfaces/DonationMinerStorageV5.sol",name:"DonationMinerStorageV5",title:"Storage for DonationMiner",notice:"For future upgrades, do not change DonationMinerStorageV5. Create a new contract which implements DonationMinerStorageV4 and following the naming convention DonationMinerStorageVX.",methods:{"PACT()":{inputs:[],name:"PACT",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"againstPeriods()":{inputs:[],name:"againstPeriods",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"airdropV3()":{inputs:[],name:"airdropV3",outputs:[{internalType:"contract IAirdropV3",name:"",type:"address"}],stateMutability:"view",type:"function"},"apr(address)":{inputs:[{internalType:"address",name:"_stakeholderAddress",type:"address"}],name:"apr",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"cUSD()":{inputs:[],name:"cUSD",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"calculateClaimableRewards(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"calculateClaimableRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"calculateClaimableRewardsByPeriodNumber(address,uint256)":{inputs:[{internalType:"address",name:"_donor",type:"address"},{internalType:"uint256",name:"_lastPeriodNumber",type:"uint256"}],name:"calculateClaimableRewardsByPeriodNumber",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"claimDelay()":{inputs:[],name:"claimDelay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"claimRewards()":{inputs:[],name:"claimRewards",outputs:[],stateMutability:"nonpayable",type:"function"},"claimRewardsPartial(uint256)":{inputs:[{internalType:"uint256",name:"_lastPeriodNumber",type:"uint256"}],name:"claimRewardsPartial",outputs:[],stateMutability:"nonpayable",type:"function"},"communityDonationRatio()":{inputs:[],name:"communityDonationRatio",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"currentRewardPeriodNumber()":{inputs:[],name:"currentRewardPeriodNumber",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"decayDenominator()":{inputs:[],name:"decayDenominator",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"decayNumerator()":{inputs:[],name:"decayNumerator",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donate(address,uint256,address)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_delegateAddress",type:"address"}],name:"donate",outputs:[],stateMutability:"nonpayable",type:"function"},"donateFrom(address,address,uint256,address)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"contract IERC20Upgradeable",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"delegateAddress",type:"address"}],name:"donateFrom",outputs:[],stateMutability:"nonpayable",type:"function"},"donateToCommunity(address,address,uint256,address)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_delegateAddress",type:"address"}],name:"donateToCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"donateVirtual(uint256,address)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_delegateAddress",type:"address"}],name:"donateVirtual",outputs:[],stateMutability:"nonpayable",type:"function"},"donationCount()":{inputs:[],name:"donationCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donations(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"donations",outputs:[{internalType:"address",name:"donor",type:"address"},{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"rewardPeriod",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"contract IERC20Upgradeable",name:"token",type:"address"},{internalType:"uint256",name:"initialAmount",type:"uint256"}],stateMutability:"view",type:"function"},"donorRewardPeriod(address,uint256)":{inputs:[{internalType:"address",name:"_donor",type:"address"},{internalType:"uint256",name:"_rewardPeriodIndex",type:"uint256"}],name:"donorRewardPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donors(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"donors",outputs:[{internalType:"uint256",name:"lastClaim",type:"uint256"},{internalType:"uint256",name:"rewardPeriodsCount",type:"uint256"},{internalType:"uint256",name:"lastClaimPeriod",type:"uint256"}],stateMutability:"view",type:"function"},"estimateClaimableReward(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"estimateClaimableReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"estimateClaimableRewardAdvance(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"estimateClaimableRewardAdvance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"estimateClaimableRewardByStaking(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"estimateClaimableRewardByStaking",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"estimateNewDonationClaimableRewardAdvance(uint256)":{inputs:[{internalType:"uint256",name:"_donationAmount",type:"uint256"}],name:"estimateNewDonationClaimableRewardAdvance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"generalApr()":{inputs:[],name:"generalApr",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"lastPeriodsDonations(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"lastPeriodsDonations",outputs:[{internalType:"uint256",name:"donorAmount",type:"uint256"},{internalType:"uint256",name:"totalAmount",type:"uint256"}],stateMutability:"view",type:"function"},"microcredit()":{inputs:[],name:"microcredit",outputs:[{internalType:"contract IMicrocredit",name:"",type:"address"}],stateMutability:"view",type:"function"},"recurringCronAddress()":{inputs:[],name:"recurringCronAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"rewardPeriodCount()":{inputs:[],name:"rewardPeriodCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriodDonorAmount(uint256,address)":{inputs:[{internalType:"uint256",name:"_period",type:"uint256"},{internalType:"address",name:"_donor",type:"address"}],name:"rewardPeriodDonorAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriodDonorStakeAmounts(uint256,address)":{inputs:[{internalType:"uint256",name:"_period",type:"uint256"},{internalType:"address",name:"_donor",type:"address"}],name:"rewardPeriodDonorStakeAmounts",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriodSize()":{inputs:[],name:"rewardPeriodSize",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriods(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"rewardPeriods",outputs:[{internalType:"uint256",name:"rewardPerBlock",type:"uint256"},{internalType:"uint256",name:"rewardAmount",type:"uint256"},{internalType:"uint256",name:"startBlock",type:"uint256"},{internalType:"uint256",name:"endBlock",type:"uint256"},{internalType:"uint256",name:"donationsAmount",type:"uint256"},{internalType:"uint256",name:"againstPeriods",type:"uint256"},{internalType:"uint256",name:"stakesAmount",type:"uint256"},{internalType:"uint256",name:"stakingDonationRatio",type:"uint256"}],stateMutability:"view",type:"function"},"setStakingAmounts(address,uint256,uint256)":{inputs:[{internalType:"address",name:"_holderAddress",type:"address"},{internalType:"uint256",name:"_holderStakeAmount",type:"uint256"},{internalType:"uint256",name:"_totalStakesAmount",type:"uint256"}],name:"setStakingAmounts",outputs:[],stateMutability:"nonpayable",type:"function"},"stakeRewards()":{inputs:[],name:"stakeRewards",outputs:[],stateMutability:"nonpayable",type:"function"},"stakeRewardsPartial(uint256)":{inputs:[{internalType:"uint256",name:"_lastPeriodNumber",type:"uint256"}],name:"stakeRewardsPartial",outputs:[],stateMutability:"nonpayable",type:"function"},"staking()":{inputs:[],name:"staking",outputs:[{internalType:"contract IStaking",name:"",type:"address"}],stateMutability:"view",type:"function"},"stakingDonationRatio()":{inputs:[],name:"stakingDonationRatio",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function"},"treasury()":{inputs:[],name:"treasury",outputs:[{internalType:"contract ITreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"updateAgainstPeriods(uint256)":{inputs:[{internalType:"uint256",name:"_newAgainstPeriods",type:"uint256"}],name:"updateAgainstPeriods",outputs:[],stateMutability:"nonpayable",type:"function"},"updateAirdropV3(address)":{inputs:[{internalType:"contract IAirdropV3",name:"_newAirdropV3",type:"address"}],name:"updateAirdropV3",outputs:[],stateMutability:"nonpayable",type:"function"},"updateClaimDelay(uint256)":{inputs:[{internalType:"uint256",name:"_newClaimDelay",type:"uint256"}],name:"updateClaimDelay",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityDonationRatio(uint256)":{inputs:[{internalType:"uint256",name:"_newCommunityDonationRatio",type:"uint256"}],name:"updateCommunityDonationRatio",outputs:[],stateMutability:"nonpayable",type:"function"},"updateMicrocredit(address)":{inputs:[{internalType:"contract IMicrocredit",name:"newMicrocredit",type:"address"}],name:"updateMicrocredit",outputs:[],stateMutability:"nonpayable",type:"function"},"updateRecurringCronAddress(address)":{inputs:[{internalType:"address",name:"newRecurringCronAddress",type:"address"}],name:"updateRecurringCronAddress",outputs:[],stateMutability:"nonpayable",type:"function"},"updateRewardPeriodParams(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"_newRewardPeriodSize",type:"uint256"},{internalType:"uint256",name:"_newDecayNumerator",type:"uint256"},{internalType:"uint256",name:"_newDecayDenominator",type:"uint256"}],name:"updateRewardPeriodParams",outputs:[],stateMutability:"nonpayable",type:"function"},"updateStaking(address)":{inputs:[{internalType:"contract IStaking",name:"_newStaking",type:"address"}],name:"updateStaking",outputs:[],stateMutability:"nonpayable",type:"function"},"updateStakingDonationRatio(uint256)":{inputs:[{internalType:"uint256",name:"_newStakingDonationRatio",type:"uint256"}],name:"updateStakingDonationRatio",outputs:[],stateMutability:"nonpayable",type:"function"},"updateTreasury(address)":{inputs:[{internalType:"contract ITreasury",name:"_newTreasury",type:"address"}],name:"updateTreasury",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/donationMiner/interfaces/IDonationMiner.sol:IDonationMiner":{source:"contracts/donationMiner/interfaces/IDonationMiner.sol",name:"IDonationMiner",methods:{"PACT()":{inputs:[],name:"PACT",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"againstPeriods()":{inputs:[],name:"againstPeriods",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"airdropV3()":{inputs:[],name:"airdropV3",outputs:[{internalType:"contract IAirdropV3",name:"",type:"address"}],stateMutability:"view",type:"function"},"apr(address)":{inputs:[{internalType:"address",name:"_stakeholderAddress",type:"address"}],name:"apr",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"cUSD()":{inputs:[],name:"cUSD",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"calculateClaimableRewards(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"calculateClaimableRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"calculateClaimableRewardsByPeriodNumber(address,uint256)":{inputs:[{internalType:"address",name:"_donor",type:"address"},{internalType:"uint256",name:"_lastPeriodNumber",type:"uint256"}],name:"calculateClaimableRewardsByPeriodNumber",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"claimDelay()":{inputs:[],name:"claimDelay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"claimRewards()":{inputs:[],name:"claimRewards",outputs:[],stateMutability:"nonpayable",type:"function"},"claimRewardsPartial(uint256)":{inputs:[{internalType:"uint256",name:"_lastPeriodNumber",type:"uint256"}],name:"claimRewardsPartial",outputs:[],stateMutability:"nonpayable",type:"function"},"communityDonationRatio()":{inputs:[],name:"communityDonationRatio",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"currentRewardPeriodNumber()":{inputs:[],name:"currentRewardPeriodNumber",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"decayDenominator()":{inputs:[],name:"decayDenominator",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"decayNumerator()":{inputs:[],name:"decayNumerator",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donate(address,uint256,address)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_delegateAddress",type:"address"}],name:"donate",outputs:[],stateMutability:"nonpayable",type:"function"},"donateFrom(address,address,uint256,address)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"contract IERC20Upgradeable",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"delegateAddress",type:"address"}],name:"donateFrom",outputs:[],stateMutability:"nonpayable",type:"function"},"donateToCommunity(address,address,uint256,address)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_delegateAddress",type:"address"}],name:"donateToCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"donateVirtual(uint256,address)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_delegateAddress",type:"address"}],name:"donateVirtual",outputs:[],stateMutability:"nonpayable",type:"function"},"donationCount()":{inputs:[],name:"donationCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donations(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"donations",outputs:[{internalType:"address",name:"donor",type:"address"},{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"rewardPeriod",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"contract IERC20Upgradeable",name:"token",type:"address"},{internalType:"uint256",name:"initialAmount",type:"uint256"}],stateMutability:"view",type:"function"},"donorRewardPeriod(address,uint256)":{inputs:[{internalType:"address",name:"_donor",type:"address"},{internalType:"uint256",name:"_rewardPeriodIndex",type:"uint256"}],name:"donorRewardPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donors(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"donors",outputs:[{internalType:"uint256",name:"rewardPeriodsCount",type:"uint256"},{internalType:"uint256",name:"lastClaim",type:"uint256"},{internalType:"uint256",name:"lastClaimPeriod",type:"uint256"}],stateMutability:"view",type:"function"},"estimateClaimableReward(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"estimateClaimableReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"estimateClaimableRewardAdvance(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"estimateClaimableRewardAdvance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"estimateClaimableRewardByStaking(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"estimateClaimableRewardByStaking",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"estimateNewDonationClaimableRewardAdvance(uint256)":{inputs:[{internalType:"uint256",name:"_donationAmount",type:"uint256"}],name:"estimateNewDonationClaimableRewardAdvance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"generalApr()":{inputs:[],name:"generalApr",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"lastPeriodsDonations(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"lastPeriodsDonations",outputs:[{internalType:"uint256",name:"donorAmount",type:"uint256"},{internalType:"uint256",name:"totalAmount",type:"uint256"}],stateMutability:"view",type:"function"},"microcredit()":{inputs:[],name:"microcredit",outputs:[{internalType:"contract IMicrocredit",name:"",type:"address"}],stateMutability:"view",type:"function"},"recurringCronAddress()":{inputs:[],name:"recurringCronAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"rewardPeriodCount()":{inputs:[],name:"rewardPeriodCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriodDonorAmount(uint256,address)":{inputs:[{internalType:"uint256",name:"_period",type:"uint256"},{internalType:"address",name:"_donor",type:"address"}],name:"rewardPeriodDonorAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriodDonorStakeAmounts(uint256,address)":{inputs:[{internalType:"uint256",name:"_period",type:"uint256"},{internalType:"address",name:"_donor",type:"address"}],name:"rewardPeriodDonorStakeAmounts",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriodSize()":{inputs:[],name:"rewardPeriodSize",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriods(uint256)":{inputs:[{internalType:"uint256",name:"_period",type:"uint256"}],name:"rewardPeriods",outputs:[{internalType:"uint256",name:"rewardPerBlock",type:"uint256"},{internalType:"uint256",name:"rewardAmount",type:"uint256"},{internalType:"uint256",name:"startBlock",type:"uint256"},{internalType:"uint256",name:"endBlock",type:"uint256"},{internalType:"uint256",name:"donationsAmount",type:"uint256"},{internalType:"uint256",name:"againstPeriods",type:"uint256"},{internalType:"uint256",name:"stakesAmount",type:"uint256"},{internalType:"uint256",name:"stakingDonationRatio",type:"uint256"}],stateMutability:"view",type:"function"},"setStakingAmounts(address,uint256,uint256)":{inputs:[{internalType:"address",name:"_holderAddress",type:"address"},{internalType:"uint256",name:"_holderStakeAmount",type:"uint256"},{internalType:"uint256",name:"_totalStakesAmount",type:"uint256"}],name:"setStakingAmounts",outputs:[],stateMutability:"nonpayable",type:"function"},"stakeRewards()":{inputs:[],name:"stakeRewards",outputs:[],stateMutability:"nonpayable",type:"function"},"stakeRewardsPartial(uint256)":{inputs:[{internalType:"uint256",name:"_lastPeriodNumber",type:"uint256"}],name:"stakeRewardsPartial",outputs:[],stateMutability:"nonpayable",type:"function"},"staking()":{inputs:[],name:"staking",outputs:[{internalType:"contract IStaking",name:"",type:"address"}],stateMutability:"view",type:"function"},"stakingDonationRatio()":{inputs:[],name:"stakingDonationRatio",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function"},"treasury()":{inputs:[],name:"treasury",outputs:[{internalType:"contract ITreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"updateAgainstPeriods(uint256)":{inputs:[{internalType:"uint256",name:"_newAgainstPeriods",type:"uint256"}],name:"updateAgainstPeriods",outputs:[],stateMutability:"nonpayable",type:"function"},"updateAirdropV3(address)":{inputs:[{internalType:"contract IAirdropV3",name:"_newAirdropV3",type:"address"}],name:"updateAirdropV3",outputs:[],stateMutability:"nonpayable",type:"function"},"updateClaimDelay(uint256)":{inputs:[{internalType:"uint256",name:"_newClaimDelay",type:"uint256"}],name:"updateClaimDelay",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityDonationRatio(uint256)":{inputs:[{internalType:"uint256",name:"_newCommunityDonationRatio",type:"uint256"}],name:"updateCommunityDonationRatio",outputs:[],stateMutability:"nonpayable",type:"function"},"updateMicrocredit(address)":{inputs:[{internalType:"contract IMicrocredit",name:"newMicrocredit",type:"address"}],name:"updateMicrocredit",outputs:[],stateMutability:"nonpayable",type:"function"},"updateRecurringCronAddress(address)":{inputs:[{internalType:"address",name:"newRecurringCronAddress",type:"address"}],name:"updateRecurringCronAddress",outputs:[],stateMutability:"nonpayable",type:"function"},"updateRewardPeriodParams(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"_newRewardPeriodSize",type:"uint256"},{internalType:"uint256",name:"_newDecayNumerator",type:"uint256"},{internalType:"uint256",name:"_newDecayDenominator",type:"uint256"}],name:"updateRewardPeriodParams",outputs:[],stateMutability:"nonpayable",type:"function"},"updateStaking(address)":{inputs:[{internalType:"contract IStaking",name:"_newStaking",type:"address"}],name:"updateStaking",outputs:[],stateMutability:"nonpayable",type:"function"},"updateStakingDonationRatio(uint256)":{inputs:[{internalType:"uint256",name:"_newStakingDonationRatio",type:"uint256"}],name:"updateStakingDonationRatio",outputs:[],stateMutability:"nonpayable",type:"function"},"updateTreasury(address)":{inputs:[{internalType:"contract ITreasury",name:"_newTreasury",type:"address"}],name:"updateTreasury",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/externalInterfaces/aave/DataTypes.sol:DataTypes":{source:"contracts/externalInterfaces/aave/DataTypes.sol",name:"DataTypes"},"contracts/externalInterfaces/aave/IAToken.sol:IAToken":{source:"contracts/externalInterfaces/aave/IAToken.sol",name:"IAToken",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"BalanceTransfer(address,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"},{indexed:!1,internalType:"uint256",name:"index",type:"uint256"}],name:"BalanceTransfer",type:"event",details:"Emitted during the transfer action",params:{from:"The user whose tokens are being transferred",index:"The new liquidity index of the reserve*",to:"The recipient",value:"The amount being transferred"}},"Burn(address,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"},{indexed:!1,internalType:"uint256",name:"index",type:"uint256"}],name:"Burn",type:"event",details:"Emitted after aTokens are burned",params:{from:"The owner of the aTokens, getting them burned",index:"The new liquidity index of the reserve*",target:"The address that will receive the underlying",value:"The amount being burned"}},"Initialized(address,address,address,address,uint8,string,string,bytes)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"underlyingAsset",type:"address"},{indexed:!0,internalType:"address",name:"pool",type:"address"},{indexed:!1,internalType:"address",name:"treasury",type:"address"},{indexed:!1,internalType:"address",name:"incentivesController",type:"address"},{indexed:!1,internalType:"uint8",name:"aTokenDecimals",type:"uint8"},{indexed:!1,internalType:"string",name:"aTokenName",type:"string"},{indexed:!1,internalType:"string",name:"aTokenSymbol",type:"string"},{indexed:!1,internalType:"bytes",name:"params",type:"bytes"}],name:"Initialized",type:"event"},"Mint(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"},{indexed:!1,internalType:"uint256",name:"index",type:"uint256"}],name:"Mint",type:"event",details:"Emitted after the mint action",params:{from:"The address performing the mint",index:"The new liquidity index of the reserve*",value:"The amount being"}},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"UNDERLYING_ASSET_ADDRESS()":{inputs:[],name:"UNDERLYING_ASSET_ADDRESS",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the underlying asset of this aToken (E.g. WETH for aWETH)*"},"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the amount of tokens owned by `account`."},"burn(address,address,uint256,uint256)":{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"address",name:"receiverOfUnderlying",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"index",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function",details:"Burns aTokens from `user` and sends the equivalent amount of underlying to `receiverOfUnderlying`",params:{amount:"The amount being burned",index:"The new liquidity index of the reserve*",receiverOfUnderlying:"The address that will receive the underlying",user:"The owner of the aTokens, getting them burned"}},"getIncentivesController()":{inputs:[],name:"getIncentivesController",outputs:[{internalType:"contract IAaveIncentivesController",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the incentives controller contract*"},"getScaledUserBalanceAndSupply(address)":{inputs:[{internalType:"address",name:"user",type:"address"}],name:"getScaledUserBalanceAndSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the scaled balance of the user and the scaled total supply.",params:{user:"The address of the user"},returns:{_0:"The scaled balance of the user",_1:"The scaled balance and the scaled total supply*"}},"handleRepayment(address,uint256)":{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"handleRepayment",outputs:[],stateMutability:"nonpayable",type:"function",details:"Invoked to execute actions on the aToken side after a repayment.",params:{amount:"The amount getting repaid*",user:"The user executing the repayment"}},"initialize(address,address,address,address,uint8,string,string,bytes)":{inputs:[{internalType:"contract ILendingPool",name:"pool",type:"address"},{internalType:"address",name:"treasury",type:"address"},{internalType:"address",name:"underlyingAsset",type:"address"},{internalType:"contract IAaveIncentivesController",name:"incentivesController",type:"address"},{internalType:"uint8",name:"aTokenDecimals",type:"uint8"},{internalType:"string",name:"aTokenName",type:"string"},{internalType:"string",name:"aTokenSymbol",type:"string"},{internalType:"bytes",name:"params",type:"bytes"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",details:"Initializes the aToken",params:{aTokenDecimals:"The decimals of the aToken, same as the underlying asset's",aTokenName:"The name of the aToken",aTokenSymbol:"The symbol of the aToken",incentivesController:"The smart contract managing potential incentives distribution",pool:"The address of the lending pool where this aToken will be used",treasury:"The address of the Aave treasury, receiving the fees on this aToken",underlyingAsset:"The address of the underlying asset of this aToken (E.g. WETH for aWETH)"}},"mint(address,uint256,uint256)":{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"index",type:"uint256"}],name:"mint",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Mints `amount` aTokens to `user`",params:{amount:"The amount of tokens getting minted",index:"The new liquidity index of the reserve",user:"The address receiving the minted tokens"},returns:{_0:"`true` if the the previous balance of the user was 0"}},"mintToTreasury(uint256,uint256)":{inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"index",type:"uint256"}],name:"mintToTreasury",outputs:[],stateMutability:"nonpayable",type:"function",details:"Mints aTokens to the reserve treasury",params:{amount:"The amount of tokens getting minted",index:"The new liquidity index of the reserve"}},"scaledBalanceOf(address)":{inputs:[{internalType:"address",name:"user",type:"address"}],name:"scaledBalanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the scaled balance of the user. The scaled balance is the sum of all the updated stored balance divided by the reserve's liquidity index at the moment of the update",params:{user:"The user whose balance is calculated"},returns:{_0:"The scaled balance of the user*"}},"scaledTotalSupply()":{inputs:[],name:"scaledTotalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the scaled total supply of the variable debt token. Represents sum(debt/index)",returns:{_0:"The scaled total supply*"}},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the amount of tokens in existence."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferOnLiquidation(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"transferOnLiquidation",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers aTokens in the event of a borrow being liquidated, in case the liquidators reclaims the aToken",params:{from:"The address getting liquidated, current owner of the aTokens",to:"The recipient",value:"The amount of tokens getting transferred*"}},"transferUnderlyingTo(address,uint256)":{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferUnderlyingTo",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function",details:"Transfers the underlying asset to `target`. Used by the LendingPool to transfer assets in borrow(), withdraw() and flashLoan()",params:{amount:"The amount getting transferred",user:"The recipient of the underlying"},returns:{_0:"The amount transferred*"}}}},"contracts/externalInterfaces/aave/IAaveIncentivesController.sol:IAaveIncentivesController":{source:"contracts/externalInterfaces/aave/IAaveIncentivesController.sol",name:"IAaveIncentivesController",events:{"ClaimerSet(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"claimer",type:"address"}],name:"ClaimerSet",type:"event"},"RewardsAccrued(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"RewardsAccrued",type:"event"},"RewardsClaimed(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"RewardsClaimed",type:"event"},"RewardsClaimed(address,address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"address",name:"claimer",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"RewardsClaimed",type:"event"}},methods:{"DISTRIBUTION_END()":{inputs:[],name:"DISTRIBUTION_END",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Gets the distribution end timestamp of the emissions"},"PRECISION()":{inputs:[],name:"PRECISION",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function",details:"for backward compatibility with previous implementation of the Incentives controller"},"REWARD_TOKEN()":{inputs:[],name:"REWARD_TOKEN",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"for backward compatibility with previous implementation of the Incentives controller"},"assets(address)":{inputs:[{internalType:"address",name:"asset",type:"address"}],name:"assets",outputs:[{internalType:"uint128",name:"",type:"uint128"},{internalType:"uint128",name:"",type:"uint128"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"claimRewards(address[],uint256,address)":{inputs:[{internalType:"address[]",name:"assets",type:"address[]"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"to",type:"address"}],name:"claimRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function",details:"Claims reward for an user, on all the assets of the lending pool, accumulating the pending rewards",params:{amount:"Amount of rewards to claim",to:"Address that will be receiving the rewards"},returns:{_0:"Rewards claimed*"}},"claimRewardsOnBehalf(address[],uint256,address,address)":{inputs:[{internalType:"address[]",name:"assets",type:"address[]"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"user",type:"address"},{internalType:"address",name:"to",type:"address"}],name:"claimRewardsOnBehalf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function",details:'Claims reward for an user on behalf, on all the assets of the lending pool, accumulating the pending rewards. The caller must be whitelisted via "allowClaimOnBehalf" function by the RewardsAdmin role manager',params:{amount:"Amount of rewards to claim",to:"Address that will be receiving the rewards",user:"Address to check and claim rewards"},returns:{_0:"Rewards claimed*"}},"configureAssets(address[],uint256[])":{inputs:[{internalType:"address[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"emissionsPerSecond",type:"uint256[]"}],name:"configureAssets",outputs:[],stateMutability:"nonpayable",type:"function",details:"Configure assets for a certain rewards emission",params:{assets:"The assets to incentivize",emissionsPerSecond:"The emission for each asset"}},"getAssetData(address)":{inputs:[{internalType:"address",name:"asset",type:"address"}],name:"getAssetData",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getClaimer(address)":{inputs:[{internalType:"address",name:"user",type:"address"}],name:"getClaimer",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the whitelisted claimer for a certain address (0x0 if not set)",params:{user:"The address of the user"},returns:{_0:"The claimer address"}},"getRewardsBalance(address[],address)":{inputs:[{internalType:"address[]",name:"assets",type:"address[]"},{internalType:"address",name:"user",type:"address"}],name:"getRewardsBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the total of rewards of an user, already accrued + not yet accrued",params:{user:"The address of the user"},returns:{_0:"The rewards*"}},"getUserAssetData(address,address)":{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"address",name:"asset",type:"address"}],name:"getUserAssetData",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"returns the unclaimed rewards of the user",params:{asset:"The asset to incentivize",user:"the address of the user"},returns:{_0:"the user index for the asset"}},"getUserUnclaimedRewards(address)":{inputs:[{internalType:"address",name:"user",type:"address"}],name:"getUserUnclaimedRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"returns the unclaimed rewards of the user",params:{user:"the address of the user"},returns:{_0:"the unclaimed user rewards"}},"handleAction(address,uint256,uint256)":{inputs:[{internalType:"address",name:"asset",type:"address"},{internalType:"uint256",name:"userBalance",type:"uint256"},{internalType:"uint256",name:"totalSupply",type:"uint256"}],name:"handleAction",outputs:[],stateMutability:"nonpayable",type:"function",details:"Called by the corresponding asset on any update that affects the rewards distribution",params:{asset:"The address of the user",totalSupply:"The total supply of the asset in the lending pool*",userBalance:"The balance of the user of the asset in the lending pool"}},"setClaimer(address,address)":{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"address",name:"claimer",type:"address"}],name:"setClaimer",outputs:[],stateMutability:"nonpayable",type:"function",details:"Whitelists an address to claim the rewards on behalf of another address",params:{claimer:"The address of the claimer",user:"The address of the user"}}}},"contracts/externalInterfaces/aave/IInitializableAToken.sol:IInitializableAToken":{source:"contracts/externalInterfaces/aave/IInitializableAToken.sol",name:"IInitializableAToken",title:"IInitializableAToken",author:"Aave*",notice:"Interface for the initialize function on AToken",events:{"Initialized(address,address,address,address,uint8,string,string,bytes)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"underlyingAsset",type:"address"},{indexed:!0,internalType:"address",name:"pool",type:"address"},{indexed:!1,internalType:"address",name:"treasury",type:"address"},{indexed:!1,internalType:"address",name:"incentivesController",type:"address"},{indexed:!1,internalType:"uint8",name:"aTokenDecimals",type:"uint8"},{indexed:!1,internalType:"string",name:"aTokenName",type:"string"},{indexed:!1,internalType:"string",name:"aTokenSymbol",type:"string"},{indexed:!1,internalType:"bytes",name:"params",type:"bytes"}],name:"Initialized",type:"event",details:"Emitted when an aToken is initialized",params:{aTokenDecimals:"the decimals of the underlying",aTokenName:"the name of the aToken",aTokenSymbol:"the symbol of the aToken",incentivesController:"The address of the incentives controller for this aToken",params:"A set of encoded parameters for additional initialization*",pool:"The address of the associated lending pool",treasury:"The address of the treasury",underlyingAsset:"The address of the underlying asset"}}},methods:{"initialize(address,address,address,address,uint8,string,string,bytes)":{inputs:[{internalType:"contract ILendingPool",name:"pool",type:"address"},{internalType:"address",name:"treasury",type:"address"},{internalType:"address",name:"underlyingAsset",type:"address"},{internalType:"contract IAaveIncentivesController",name:"incentivesController",type:"address"},{internalType:"uint8",name:"aTokenDecimals",type:"uint8"},{internalType:"string",name:"aTokenName",type:"string"},{internalType:"string",name:"aTokenSymbol",type:"string"},{internalType:"bytes",name:"params",type:"bytes"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",details:"Initializes the aToken",params:{aTokenDecimals:"The decimals of the aToken, same as the underlying asset's",aTokenName:"The name of the aToken",aTokenSymbol:"The symbol of the aToken",incentivesController:"The smart contract managing potential incentives distribution",pool:"The address of the lending pool where this aToken will be used",treasury:"The address of the Aave treasury, receiving the fees on this aToken",underlyingAsset:"The address of the underlying asset of this aToken (E.g. WETH for aWETH)"}}}},"contracts/externalInterfaces/aave/ILendingPool.sol:ILendingPool":{source:"contracts/externalInterfaces/aave/ILendingPool.sol",name:"ILendingPool",events:{"Borrow(address,address,address,uint256,uint256,uint256,uint16)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"reserve",type:"address"},{indexed:!1,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"onBehalfOf",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"borrowRateMode",type:"uint256"},{indexed:!1,internalType:"uint256",name:"borrowRate",type:"uint256"},{indexed:!0,internalType:"uint16",name:"referral",type:"uint16"}],name:"Borrow",type:"event",details:"Emitted on borrow() and flashLoan() when debt needs to be opened",params:{amount:"The amount borrowed out",borrowRate:"The numeric rate at which the user has borrowed",borrowRateMode:"The rate mode: 1 for Stable, 2 for Variable",onBehalfOf:"The address that will be getting the debt",referral:"The referral code used*",reserve:"The address of the underlying asset being borrowed",user:"The address of the user initiating the borrow(), receiving the funds on borrow() or just initiator of the transaction on flashLoan()"}},"Deposit(address,address,address,uint256,uint16)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"reserve",type:"address"},{indexed:!1,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"onBehalfOf",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!0,internalType:"uint16",name:"referral",type:"uint16"}],name:"Deposit",type:"event",details:"Emitted on deposit()",params:{amount:"The amount deposited",onBehalfOf:"The beneficiary of the deposit, receiving the aTokens",referral:"The referral code used*",reserve:"The address of the underlying asset of the reserve",user:"The address initiating the deposit"}},"FlashLoan(address,address,address,uint256,uint256,uint16)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"target",type:"address"},{indexed:!0,internalType:"address",name:"initiator",type:"address"},{indexed:!0,internalType:"address",name:"asset",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint16",name:"referralCode",type:"uint16"}],name:"FlashLoan",type:"event",details:"Emitted on flashLoan()",params:{amount:"The amount flash borrowed",asset:"The address of the asset being flash borrowed",initiator:"The address initiating the flash loan",premium:"The fee flash borrowed",referralCode:"The referral code used*",target:"The address of the flash loan receiver contract"}},"LiquidationCall(address,address,address,uint256,uint256,address,bool)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"collateralAsset",type:"address"},{indexed:!0,internalType:"address",name:"debtAsset",type:"address"},{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"debtToCover",type:"uint256"},{indexed:!1,internalType:"uint256",name:"liquidatedCollateralAmount",type:"uint256"},{indexed:!1,internalType:"address",name:"liquidator",type:"address"},{indexed:!1,internalType:"bool",name:"receiveAToken",type:"bool"}],name:"LiquidationCall",type:"event",details:"Emitted when a borrower is liquidated. This event is emitted by the LendingPool via LendingPoolCollateral manager using a DELEGATECALL This allows to have the events in the generated ABI for LendingPool.",params:{collateralAsset:"The address of the underlying asset used as collateral, to receive as result of the liquidation",debtAsset:"The address of the underlying borrowed asset to be repaid with the liquidation",debtToCover:"The debt amount of borrowed `asset` the liquidator wants to cover",liquidatedCollateralAmount:"The amount of collateral received by the liiquidator",liquidator:"The address of the liquidator",receiveAToken:"`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*",user:"The address of the borrower getting liquidated"}},"Paused()":{anonymous:!1,inputs:[],name:"Paused",type:"event",details:"Emitted when the pause is triggered."},"RebalanceStableBorrowRate(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"reserve",type:"address"},{indexed:!0,internalType:"address",name:"user",type:"address"}],name:"RebalanceStableBorrowRate",type:"event",details:"Emitted on rebalanceStableBorrowRate()",params:{reserve:"The address of the underlying asset of the reserve",user:"The address of the user for which the rebalance has been executed*"}},"Repay(address,address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"reserve",type:"address"},{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"repayer",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Repay",type:"event",details:"Emitted on repay()",params:{amount:"The amount repaid*",repayer:"The address of the user initiating the repay(), providing the funds",reserve:"The address of the underlying asset of the reserve",user:"The beneficiary of the repayment, getting his debt reduced"}},"ReserveDataUpdated(address,uint256,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"reserve",type:"address"},{indexed:!1,internalType:"uint256",name:"liquidityRate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"stableBorrowRate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"variableBorrowRate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"liquidityIndex",type:"uint256"},{indexed:!1,internalType:"uint256",name:"variableBorrowIndex",type:"uint256"}],name:"ReserveDataUpdated",type:"event",details:"Emitted when the state of a reserve is updated. NOTE: This event is actually declared in the ReserveLogic library and emitted in the updateInterestRates() function. Since the function is internal, the event will actually be fired by the LendingPool contract. The event is therefore replicated here so it gets added to the LendingPool ABI",params:{liquidityIndex:"The new liquidity index",liquidityRate:"The new liquidity rate",reserve:"The address of the underlying asset of the reserve",stableBorrowRate:"The new stable borrow rate",variableBorrowIndex:"The new variable borrow index*",variableBorrowRate:"The new variable borrow rate"}},"ReserveUsedAsCollateralDisabled(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"reserve",type:"address"},{indexed:!0,internalType:"address",name:"user",type:"address"}],name:"ReserveUsedAsCollateralDisabled",type:"event",details:"Emitted on setUserUseReserveAsCollateral()",params:{reserve:"The address of the underlying asset of the reserve",user:"The address of the user enabling the usage as collateral*"}},"ReserveUsedAsCollateralEnabled(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"reserve",type:"address"},{indexed:!0,internalType:"address",name:"user",type:"address"}],name:"ReserveUsedAsCollateralEnabled",type:"event",details:"Emitted on setUserUseReserveAsCollateral()",params:{reserve:"The address of the underlying asset of the reserve",user:"The address of the user enabling the usage as collateral*"}},"Swap(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"reserve",type:"address"},{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"rateMode",type:"uint256"}],name:"Swap",type:"event",details:"Emitted on swapBorrowRateMode()",params:{rateMode:"The rate mode that the user wants to swap to*",reserve:"The address of the underlying asset of the reserve",user:"The address of the user swapping his rate mode"}},"Unpaused()":{anonymous:!1,inputs:[],name:"Unpaused",type:"event",details:"Emitted when the pause is lifted."},"Withdraw(address,address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"reserve",type:"address"},{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Withdraw",type:"event",details:"Emitted on withdraw()",params:{amount:"The amount to be withdrawn*",reserve:"The address of the underlyng asset being withdrawn",to:"Address that will receive the underlying",user:"The address initiating the withdrawal, owner of aTokens"}}},methods:{"borrow(address,uint256,uint256,uint16,address)":{inputs:[{internalType:"address",name:"asset",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"interestRateMode",type:"uint256"},{internalType:"uint16",name:"referralCode",type:"uint16"},{internalType:"address",name:"onBehalfOf",type:"address"}],name:"borrow",outputs:[],stateMutability:"nonpayable",type:"function",details:"Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower already deposited enough collateral, or he was given enough allowance by a credit delegator on the corresponding debt token (StableDebtToken or VariableDebtToken) - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet   and 100 stable/variable debt tokens, depending on the `interestRateMode`",params:{amount:"The amount to be borrowed",asset:"The address of the underlying asset to borrow",interestRateMode:"The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable",onBehalfOf:"Address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance*",referralCode:"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"}},"deposit(address,uint256,address,uint16)":{inputs:[{internalType:"address",name:"asset",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"onBehalfOf",type:"address"},{internalType:"uint16",name:"referralCode",type:"uint16"}],name:"deposit",outputs:[],stateMutability:"nonpayable",type:"function",details:"Deposits an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User deposits 100 USDC and gets in return 100 aUSDC",params:{amount:"The amount to be deposited",asset:"The address of the underlying asset to deposit",onBehalfOf:"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet",referralCode:"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*"}},"finalizeTransfer(address,address,address,uint256,uint256,uint256)":{inputs:[{internalType:"address",name:"asset",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"balanceFromAfter",type:"uint256"},{internalType:"uint256",name:"balanceToBefore",type:"uint256"}],name:"finalizeTransfer",outputs:[],stateMutability:"nonpayable",type:"function"},"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)":{inputs:[{internalType:"address",name:"receiverAddress",type:"address"},{internalType:"address[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"amounts",type:"uint256[]"},{internalType:"uint256[]",name:"modes",type:"uint256[]"},{internalType:"address",name:"onBehalfOf",type:"address"},{internalType:"bytes",name:"params",type:"bytes"},{internalType:"uint16",name:"referralCode",type:"uint16"}],name:"flashLoan",outputs:[],stateMutability:"nonpayable",type:"function",details:"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned. IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://developers.aave.com",params:{amounts:"The amounts amounts being flash-borrowed",assets:"The addresses of the assets being flash-borrowed",modes:"Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address",onBehalfOf:"The address  that will receive the debt in the case of using on `modes` 1 or 2",params:"Variadic packed params to pass to the receiver as extra information",receiverAddress:"The address of the contract receiving the funds, implementing the IFlashLoanReceiver interface",referralCode:"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*"}},"getAddressesProvider()":{inputs:[],name:"getAddressesProvider",outputs:[{internalType:"contract ILendingPoolAddressesProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},"getConfiguration(address)":{inputs:[{internalType:"address",name:"asset",type:"address"}],name:"getConfiguration",outputs:[{components:[{internalType:"uint256",name:"data",type:"uint256"}],internalType:"struct DataTypes.ReserveConfigurationMap",name:"",type:"tuple"}],stateMutability:"view",type:"function",details:"Returns the configuration of the reserve",params:{asset:"The address of the underlying asset of the reserve"},returns:{_0:"The configuration of the reserve*"}},"getReserveData(address)":{inputs:[{internalType:"address",name:"asset",type:"address"}],name:"getReserveData",outputs:[{components:[{components:[{internalType:"uint256",name:"data",type:"uint256"}],internalType:"struct DataTypes.ReserveConfigurationMap",name:"configuration",type:"tuple"},{internalType:"uint128",name:"liquidityIndex",type:"uint128"},{internalType:"uint128",name:"variableBorrowIndex",type:"uint128"},{internalType:"uint128",name:"currentLiquidityRate",type:"uint128"},{internalType:"uint128",name:"currentVariableBorrowRate",type:"uint128"},{internalType:"uint128",name:"currentStableBorrowRate",type:"uint128"},{internalType:"uint40",name:"lastUpdateTimestamp",type:"uint40"},{internalType:"address",name:"aTokenAddress",type:"address"},{internalType:"address",name:"stableDebtTokenAddress",type:"address"},{internalType:"address",name:"variableDebtTokenAddress",type:"address"},{internalType:"address",name:"interestRateStrategyAddress",type:"address"},{internalType:"uint8",name:"id",type:"uint8"}],internalType:"struct DataTypes.ReserveData",name:"",type:"tuple"}],stateMutability:"view",type:"function",details:"Returns the state and configuration of the reserve",params:{asset:"The address of the underlying asset of the reserve"},returns:{_0:"The state of the reserve*"}},"getReserveNormalizedIncome(address)":{inputs:[{internalType:"address",name:"asset",type:"address"}],name:"getReserveNormalizedIncome",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the normalized income normalized income of the reserve",params:{asset:"The address of the underlying asset of the reserve"},returns:{_0:"The reserve's normalized income"}},"getReserveNormalizedVariableDebt(address)":{inputs:[{internalType:"address",name:"asset",type:"address"}],name:"getReserveNormalizedVariableDebt",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the normalized variable debt per unit of asset",params:{asset:"The address of the underlying asset of the reserve"},returns:{_0:"The reserve normalized variable debt"}},"getReservesList()":{inputs:[],name:"getReservesList",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},"getUserAccountData(address)":{inputs:[{internalType:"address",name:"user",type:"address"}],name:"getUserAccountData",outputs:[{internalType:"uint256",name:"totalCollateralETH",type:"uint256"},{internalType:"uint256",name:"totalDebtETH",type:"uint256"},{internalType:"uint256",name:"availableBorrowsETH",type:"uint256"},{internalType:"uint256",name:"currentLiquidationThreshold",type:"uint256"},{internalType:"uint256",name:"ltv",type:"uint256"},{internalType:"uint256",name:"healthFactor",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the user account data across all the reserves",params:{user:"The address of the user"},returns:{availableBorrowsETH:"the borrowing power left of the user",currentLiquidationThreshold:"the liquidation threshold of the user",healthFactor:"the current health factor of the user*",ltv:"the loan to value of the user",totalCollateralETH:"the total collateral in ETH of the user",totalDebtETH:"the total debt in ETH of the user"}},"getUserConfiguration(address)":{inputs:[{internalType:"address",name:"user",type:"address"}],name:"getUserConfiguration",outputs:[{components:[{internalType:"uint256",name:"data",type:"uint256"}],internalType:"struct DataTypes.UserConfigurationMap",name:"",type:"tuple"}],stateMutability:"view",type:"function",details:"Returns the configuration of the user across all the reserves",params:{user:"The user address"},returns:{_0:"The configuration of the user*"}},"initReserve(address,address,address,address,address)":{inputs:[{internalType:"address",name:"reserve",type:"address"},{internalType:"address",name:"aTokenAddress",type:"address"},{internalType:"address",name:"stableDebtAddress",type:"address"},{internalType:"address",name:"variableDebtAddress",type:"address"},{internalType:"address",name:"interestRateStrategyAddress",type:"address"}],name:"initReserve",outputs:[],stateMutability:"nonpayable",type:"function"},"liquidationCall(address,address,address,uint256,bool)":{inputs:[{internalType:"address",name:"collateralAsset",type:"address"},{internalType:"address",name:"debtAsset",type:"address"},{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"debtToCover",type:"uint256"},{internalType:"bool",name:"receiveAToken",type:"bool"}],name:"liquidationCall",outputs:[],stateMutability:"nonpayable",type:"function",details:"Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1 - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk",params:{collateralAsset:"The address of the underlying asset used as collateral, to receive as result of the liquidation",debtAsset:"The address of the underlying borrowed asset to be repaid with the liquidation",debtToCover:"The debt amount of borrowed `asset` the liquidator wants to cover",receiveAToken:"`true` if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*",user:"The address of the borrower getting liquidated"}},"paused()":{inputs:[],name:"paused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"rebalanceStableBorrowRate(address,address)":{inputs:[{internalType:"address",name:"asset",type:"address"},{internalType:"address",name:"user",type:"address"}],name:"rebalanceStableBorrowRate",outputs:[],stateMutability:"nonpayable",type:"function",details:"Rebalances the stable interest rate of a user to the current stable rate defined on the reserve. - Users can be rebalanced if the following conditions are satisfied:     1. Usage ratio is above 95%     2. the current deposit APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too much has been        borrowed at a stable rate and depositors are not earning enough",params:{asset:"The address of the underlying asset borrowed",user:"The address of the user to be rebalanced*"}},"repay(address,uint256,uint256,address)":{inputs:[{internalType:"address",name:"asset",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"rateMode",type:"uint256"},{internalType:"address",name:"onBehalfOf",type:"address"}],name:"repay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{amount:"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`",asset:"The address of the borrowed underlying asset previously borrowed",onBehalfOf:"Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed",rateMode:"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable"},returns:{_0:"The final amount repaid*"},notice:"Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address"},"setConfiguration(address,uint256)":{inputs:[{internalType:"address",name:"reserve",type:"address"},{internalType:"uint256",name:"configuration",type:"uint256"}],name:"setConfiguration",outputs:[],stateMutability:"nonpayable",type:"function"},"setPause(bool)":{inputs:[{internalType:"bool",name:"val",type:"bool"}],name:"setPause",outputs:[],stateMutability:"nonpayable",type:"function"},"setReserveInterestRateStrategyAddress(address,address)":{inputs:[{internalType:"address",name:"reserve",type:"address"},{internalType:"address",name:"rateStrategyAddress",type:"address"}],name:"setReserveInterestRateStrategyAddress",outputs:[],stateMutability:"nonpayable",type:"function"},"setUserUseReserveAsCollateral(address,bool)":{inputs:[{internalType:"address",name:"asset",type:"address"},{internalType:"bool",name:"useAsCollateral",type:"bool"}],name:"setUserUseReserveAsCollateral",outputs:[],stateMutability:"nonpayable",type:"function",details:"Allows depositors to enable/disable a specific deposited asset as collateral",params:{asset:"The address of the underlying asset deposited",useAsCollateral:"`true` if the user wants to use the deposit as collateral, `false` otherwise*"}},"swapBorrowRateMode(address,uint256)":{inputs:[{internalType:"address",name:"asset",type:"address"},{internalType:"uint256",name:"rateMode",type:"uint256"}],name:"swapBorrowRateMode",outputs:[],stateMutability:"nonpayable",type:"function",details:"Allows a borrower to swap his debt between stable and variable mode, or viceversa",params:{asset:"The address of the underlying asset borrowed",rateMode:"The rate mode that the user wants to swap to*"}},"withdraw(address,uint256,address)":{inputs:[{internalType:"address",name:"asset",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"to",type:"address"}],name:"withdraw",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function",details:"Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC",params:{amount:"The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance",asset:"The address of the underlying asset to withdraw",to:"Address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet"},returns:{_0:"The final amount withdrawn*"}}}},"contracts/externalInterfaces/aave/ILendingPoolAddressesProvider.sol:ILendingPoolAddressesProvider":{source:"contracts/externalInterfaces/aave/ILendingPoolAddressesProvider.sol",name:"ILendingPoolAddressesProvider",title:"LendingPoolAddressesProvider contract",author:"Aave*",details:"Main registry of addresses part of or connected to the protocol, including permissioned roles - Acting also as factory of proxies and admin of those, so with right to change its implementations - Owned by the Aave Governance",events:{"AddressSet(bytes32,address,bool)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"id",type:"bytes32"},{indexed:!0,internalType:"address",name:"newAddress",type:"address"},{indexed:!1,internalType:"bool",name:"hasProxy",type:"bool"}],name:"AddressSet",type:"event"},"ConfigurationAdminUpdated(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newAddress",type:"address"}],name:"ConfigurationAdminUpdated",type:"event"},"EmergencyAdminUpdated(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newAddress",type:"address"}],name:"EmergencyAdminUpdated",type:"event"},"LendingPoolCollateralManagerUpdated(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newAddress",type:"address"}],name:"LendingPoolCollateralManagerUpdated",type:"event"},"LendingPoolConfiguratorUpdated(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newAddress",type:"address"}],name:"LendingPoolConfiguratorUpdated",type:"event"},"LendingPoolUpdated(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newAddress",type:"address"}],name:"LendingPoolUpdated",type:"event"},"LendingRateOracleUpdated(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newAddress",type:"address"}],name:"LendingRateOracleUpdated",type:"event"},"MarketIdSet(string)":{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"newMarketId",type:"string"}],name:"MarketIdSet",type:"event"},"PriceOracleUpdated(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newAddress",type:"address"}],name:"PriceOracleUpdated",type:"event"},"ProxyCreated(bytes32,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"id",type:"bytes32"},{indexed:!0,internalType:"address",name:"newAddress",type:"address"}],name:"ProxyCreated",type:"event"}},methods:{"getAddress(bytes32)":{inputs:[{internalType:"bytes32",name:"id",type:"bytes32"}],name:"getAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getEmergencyAdmin()":{inputs:[],name:"getEmergencyAdmin",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getLendingPool()":{inputs:[],name:"getLendingPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getLendingPoolCollateralManager()":{inputs:[],name:"getLendingPoolCollateralManager",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getLendingPoolConfigurator()":{inputs:[],name:"getLendingPoolConfigurator",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getLendingRateOracle()":{inputs:[],name:"getLendingRateOracle",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getMarketId()":{inputs:[],name:"getMarketId",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},"getPoolAdmin()":{inputs:[],name:"getPoolAdmin",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getPriceOracle()":{inputs:[],name:"getPriceOracle",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"setAddress(bytes32,address)":{inputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"address",name:"newAddress",type:"address"}],name:"setAddress",outputs:[],stateMutability:"nonpayable",type:"function"},"setAddressAsProxy(bytes32,address)":{inputs:[{internalType:"bytes32",name:"id",type:"bytes32"},{internalType:"address",name:"impl",type:"address"}],name:"setAddressAsProxy",outputs:[],stateMutability:"nonpayable",type:"function"},"setEmergencyAdmin(address)":{inputs:[{internalType:"address",name:"admin",type:"address"}],name:"setEmergencyAdmin",outputs:[],stateMutability:"nonpayable",type:"function"},"setLendingPoolCollateralManager(address)":{inputs:[{internalType:"address",name:"manager",type:"address"}],name:"setLendingPoolCollateralManager",outputs:[],stateMutability:"nonpayable",type:"function"},"setLendingPoolConfiguratorImpl(address)":{inputs:[{internalType:"address",name:"configurator",type:"address"}],name:"setLendingPoolConfiguratorImpl",outputs:[],stateMutability:"nonpayable",type:"function"},"setLendingPoolImpl(address)":{inputs:[{internalType:"address",name:"pool",type:"address"}],name:"setLendingPoolImpl",outputs:[],stateMutability:"nonpayable",type:"function"},"setLendingRateOracle(address)":{inputs:[{internalType:"address",name:"lendingRateOracle",type:"address"}],name:"setLendingRateOracle",outputs:[],stateMutability:"nonpayable",type:"function"},"setMarketId(string)":{inputs:[{internalType:"string",name:"marketId",type:"string"}],name:"setMarketId",outputs:[],stateMutability:"nonpayable",type:"function"},"setPoolAdmin(address)":{inputs:[{internalType:"address",name:"admin",type:"address"}],name:"setPoolAdmin",outputs:[],stateMutability:"nonpayable",type:"function"},"setPriceOracle(address)":{inputs:[{internalType:"address",name:"priceOracle",type:"address"}],name:"setPriceOracle",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/externalInterfaces/aave/IScaledBalanceToken.sol:IScaledBalanceToken":{source:"contracts/externalInterfaces/aave/IScaledBalanceToken.sol",name:"IScaledBalanceToken",methods:{"getScaledUserBalanceAndSupply(address)":{inputs:[{internalType:"address",name:"user",type:"address"}],name:"getScaledUserBalanceAndSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the scaled balance of the user and the scaled total supply.",params:{user:"The address of the user"},returns:{_0:"The scaled balance of the user",_1:"The scaled balance and the scaled total supply*"}},"scaledBalanceOf(address)":{inputs:[{internalType:"address",name:"user",type:"address"}],name:"scaledBalanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the scaled balance of the user. The scaled balance is the sum of all the updated stored balance divided by the reserve's liquidity index at the moment of the update",params:{user:"The user whose balance is calculated"},returns:{_0:"The scaled balance of the user*"}},"scaledTotalSupply()":{inputs:[],name:"scaledTotalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the scaled total supply of the variable debt token. Represents sum(debt/index)",returns:{_0:"The scaled total supply*"}}}},"contracts/externalInterfaces/openzeppelin/IMintableERC20.sol:IMintableERC20":{source:"contracts/externalInterfaces/openzeppelin/IMintableERC20.sol",name:"IMintableERC20",methods:{"allowance(address,address)":{inputs:[{internalType:"address",name:"_owner",type:"address"},{internalType:"address",name:"_spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"approve(address,uint256)":{inputs:[{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},"balanceOf(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"burn(address,uint96)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint96",name:"_amount",type:"uint96"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},"mint(address,uint96)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint96",name:"_amount",type:"uint96"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"_recipient",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"address",name:"_recipient",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}}},"contracts/externalInterfaces/openzeppelin/IOwnable.sol:IOwnable":{source:"contracts/externalInterfaces/openzeppelin/IOwnable.sol",name:"IOwnable",methods:{"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"}}},"contracts/externalInterfaces/openzeppelin/IProxyAdmin.sol:IProxyAdmin":{source:"contracts/externalInterfaces/openzeppelin/IProxyAdmin.sol",name:"IProxyAdmin",methods:{"changeProxyAdmin(address,address)":{inputs:[{internalType:"contract TransparentUpgradeableProxy",name:"proxy",type:"address"},{internalType:"address",name:"newAdmin",type:"address"}],name:"changeProxyAdmin",outputs:[],stateMutability:"nonpayable",type:"function"},"getProxyAdmin(address)":{inputs:[{internalType:"contract TransparentUpgradeableProxy",name:"proxy",type:"address"}],name:"getProxyAdmin",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"getProxyImplementation(address)":{inputs:[{internalType:"contract TransparentUpgradeableProxy",name:"proxy",type:"address"}],name:"getProxyImplementation",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"upgrade(address,address)":{inputs:[{internalType:"contract TransparentUpgradeableProxy",name:"proxy",type:"address"},{internalType:"address",name:"implementation",type:"address"}],name:"upgrade",outputs:[],stateMutability:"nonpayable",type:"function"},"upgradeAndCall(address,address,bytes)":{inputs:[{internalType:"contract TransparentUpgradeableProxy",name:"proxy",type:"address"},{internalType:"address",name:"implementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"upgradeAndCall",outputs:[],stateMutability:"payable",type:"function"}}},"contracts/externalInterfaces/openzeppelin/ITransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy":{source:"contracts/externalInterfaces/openzeppelin/ITransparentUpgradeableProxy.sol",name:"ITransparentUpgradeableProxy",methods:{"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"admin_",type:"address"}],stateMutability:"view",type:"function"},"changeAdmin(address)":{inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"changeAdmin",outputs:[],stateMutability:"nonpayable",type:"function"},"implementation()":{inputs:[],name:"implementation",outputs:[{internalType:"address",name:"implementation_",type:"address"}],stateMutability:"nonpayable",type:"function"},"upgradeTo(address)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"}],name:"upgradeTo",outputs:[],stateMutability:"nonpayable",type:"function"},"upgradeToAndCall(address,bytes)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"upgradeToAndCall",outputs:[],stateMutability:"payable",type:"function"}}},"contracts/externalInterfaces/socialConnect/ISocialConnect.sol:ISocialConnect":{source:"contracts/externalInterfaces/socialConnect/ISocialConnect.sol",name:"ISocialConnect",methods:{"lookupIdentifiers(address,address[])":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"address[]",name:"trustedIssuers",type:"address[]"}],name:"lookupIdentifiers",outputs:[{internalType:"uint256[]",name:"countsPerIssuer",type:"uint256[]"},{internalType:"bytes32[]",name:"identifiers",type:"bytes32[]"}],stateMutability:"view",type:"function",details:"Adds identifier info to the arrays in order of provided trustedIssuersExpectation that only one attestation exists per (identifier, issuer, account)",params:{account:"Address of the account",trustedIssuers:"Array of n issuers whose identifier mappings will be used"},returns:{countsPerIssuer:"Array of number of identifiers returned per issuer",identifiers:"Array (length == sum([0])) of identifiers"},notice:"Returns identifiers mapped to `account` by signers of `trustedIssuers`"}}},"contracts/externalInterfaces/uniswapV3/INonfungiblePositionManager.sol:INonfungiblePositionManager":{source:"contracts/externalInterfaces/uniswapV3/INonfungiblePositionManager.sol",name:"INonfungiblePositionManager",title:"Non-fungible token for positions",notice:"Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred and authorized.",events:{"Collect(uint256,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!1,internalType:"address",name:"recipient",type:"address"},{indexed:!1,internalType:"uint256",name:"amount0",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount1",type:"uint256"}],name:"Collect",type:"event",details:"The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior",params:{amount0:"The amount of token0 owed to the position that was collected",amount1:"The amount of token1 owed to the position that was collected",recipient:"The address of the account that received the collected tokens",tokenId:"The ID of the token for which underlying tokens were collected"},notice:"Emitted when tokens are collected for a position NFT"},"DecreaseLiquidity(uint256,uint128,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!1,internalType:"uint128",name:"liquidity",type:"uint128"},{indexed:!1,internalType:"uint256",name:"amount0",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount1",type:"uint256"}],name:"DecreaseLiquidity",type:"event",params:{amount0:"The amount of token0 that was accounted for the decrease in liquidity",amount1:"The amount of token1 that was accounted for the decrease in liquidity",liquidity:"The amount by which liquidity for the NFT position was decreased",tokenId:"The ID of the token for which liquidity was decreased"},notice:"Emitted when liquidity is decreased for a position NFT"},"IncreaseLiquidity(uint256,uint128,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!1,internalType:"uint128",name:"liquidity",type:"uint128"},{indexed:!1,internalType:"uint256",name:"amount0",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount1",type:"uint256"}],name:"IncreaseLiquidity",type:"event",details:"Also emitted when a token is minted",params:{amount0:"The amount of token0 that was paid for the increase in liquidity",amount1:"The amount of token1 that was paid for the increase in liquidity",liquidity:"The amount by which liquidity for the NFT position was increased",tokenId:"The ID of the token for which liquidity was increased"},notice:"Emitted when liquidity is increased for a position NFT"}},methods:{"burn(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"burn",outputs:[],stateMutability:"payable",type:"function",params:{tokenId:"The ID of the token that is being burned"},notice:"Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first."},"collect((uint256,address,uint128,uint128))":{inputs:[{components:[{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint128",name:"amount0Max",type:"uint128"},{internalType:"uint128",name:"amount1Max",type:"uint128"}],internalType:"struct INonfungiblePositionManager.CollectParams",name:"params",type:"tuple"}],name:"collect",outputs:[{internalType:"uint256",name:"amount0",type:"uint256"},{internalType:"uint256",name:"amount1",type:"uint256"}],stateMutability:"payable",type:"function",params:{params:"tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect"},returns:{amount0:"The amount of fees collected in token0",amount1:"The amount of fees collected in token1"},notice:"Collects up to a maximum amount of fees owed to a specific position to the recipient"},"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))":{inputs:[{components:[{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint128",name:"liquidity",type:"uint128"},{internalType:"uint256",name:"amount0Min",type:"uint256"},{internalType:"uint256",name:"amount1Min",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"}],internalType:"struct INonfungiblePositionManager.DecreaseLiquidityParams",name:"params",type:"tuple"}],name:"decreaseLiquidity",outputs:[{internalType:"uint256",name:"amount0",type:"uint256"},{internalType:"uint256",name:"amount1",type:"uint256"}],stateMutability:"payable",type:"function",params:{params:"tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change"},returns:{amount0:"The amount of token0 accounted to the position's tokens owed",amount1:"The amount of token1 accounted to the position's tokens owed"},notice:"Decreases the amount of liquidity in a position and accounts it to the position"},"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))":{inputs:[{components:[{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"amount0Desired",type:"uint256"},{internalType:"uint256",name:"amount1Desired",type:"uint256"},{internalType:"uint256",name:"amount0Min",type:"uint256"},{internalType:"uint256",name:"amount1Min",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"}],internalType:"struct INonfungiblePositionManager.IncreaseLiquidityParams",name:"params",type:"tuple"}],name:"increaseLiquidity",outputs:[{internalType:"uint128",name:"liquidity",type:"uint128"},{internalType:"uint256",name:"amount0",type:"uint256"},{internalType:"uint256",name:"amount1",type:"uint256"}],stateMutability:"payable",type:"function",params:{params:"tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change"},returns:{amount0:"The amount of token0 to acheive resulting liquidity",amount1:"The amount of token1 to acheive resulting liquidity",liquidity:"The new liquidity amount as a result of the increase"},notice:"Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`"},"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))":{inputs:[{components:[{internalType:"address",name:"token0",type:"address"},{internalType:"address",name:"token1",type:"address"},{internalType:"uint24",name:"fee",type:"uint24"},{internalType:"int24",name:"tickLower",type:"int24"},{internalType:"int24",name:"tickUpper",type:"int24"},{internalType:"uint256",name:"amount0Desired",type:"uint256"},{internalType:"uint256",name:"amount1Desired",type:"uint256"},{internalType:"uint256",name:"amount0Min",type:"uint256"},{internalType:"uint256",name:"amount1Min",type:"uint256"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],internalType:"struct INonfungiblePositionManager.MintParams",name:"params",type:"tuple"}],name:"mint",outputs:[{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint128",name:"liquidity",type:"uint128"},{internalType:"uint256",name:"amount0",type:"uint256"},{internalType:"uint256",name:"amount1",type:"uint256"}],stateMutability:"payable",type:"function",details:"Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.",params:{params:"The params necessary to mint a position, encoded as `MintParams` in calldata"},returns:{amount0:"The amount of token0",amount1:"The amount of token1",liquidity:"The amount of liquidity for this position",tokenId:"The ID of the token that represents the minted position"},notice:"Creates a new position wrapped in a NFT"},"ownerOf(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"positions(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"positions",outputs:[{internalType:"uint96",name:"nonce",type:"uint96"},{internalType:"address",name:"operator",type:"address"},{internalType:"address",name:"token0",type:"address"},{internalType:"address",name:"token1",type:"address"},{internalType:"uint24",name:"fee",type:"uint24"},{internalType:"int24",name:"tickLower",type:"int24"},{internalType:"int24",name:"tickUpper",type:"int24"},{internalType:"uint128",name:"liquidity",type:"uint128"},{internalType:"uint256",name:"feeGrowthInside0LastX128",type:"uint256"},{internalType:"uint256",name:"feeGrowthInside1LastX128",type:"uint256"},{internalType:"uint128",name:"tokensOwed0",type:"uint128"},{internalType:"uint128",name:"tokensOwed1",type:"uint128"}],stateMutability:"view",type:"function",details:"Throws if the token ID is not valid.",params:{tokenId:"The ID of the token that represents the position"},returns:{fee:"The fee associated with the pool",feeGrowthInside0LastX128:"The fee growth of token0 as of the last action on the individual position",feeGrowthInside1LastX128:"The fee growth of token1 as of the last action on the individual position",liquidity:"The liquidity of the position",nonce:"The nonce for permits",operator:"The address that is approved for spending",tickLower:"The lower end of the tick range for the position",tickUpper:"The higher end of the tick range for the position",token0:"The address of the token0 for a specific pool",token1:"The address of the token1 for a specific pool",tokensOwed0:"The uncollected amount of token0 owed to the position as of the last computation",tokensOwed1:"The uncollected amount of token1 owed to the position as of the last computation"},notice:"Returns the position information associated with a given token ID."}}},"contracts/externalInterfaces/uniswapV3/IQuoter.sol:IQuoter":{source:"contracts/externalInterfaces/uniswapV3/IQuoter.sol",name:"IQuoter",title:"Quoter Interface",details:"These functions are not marked view because they rely on calling non-view functions and reverting to compute the result. They are also not gas efficient and should not be called on-chain.",notice:"Supports quoting the calculated amounts from exact input or exact output swaps",methods:{"quoteExactInput(bytes,uint256)":{inputs:[{internalType:"bytes",name:"path",type:"bytes"},{internalType:"uint256",name:"amountIn",type:"uint256"}],name:"quoteExactInput",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{amountIn:"The amount of the first token to swap",path:"The path of the swap, i.e. each token pair and the pool fee"},returns:{amountOut:"The amount of the last token that would be received"},notice:"Returns the amount out received for a given exact input swap without executing the swap"},"quoteExactInputSingle(address,address,uint24,uint256,uint160)":{inputs:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"address",name:"tokenOut",type:"address"},{internalType:"uint24",name:"fee",type:"uint24"},{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint160",name:"sqrtPriceLimitX96",type:"uint160"}],name:"quoteExactInputSingle",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{amountIn:"The desired input amount",fee:"The fee of the token pool to consider for the pair",sqrtPriceLimitX96:"The price limit of the pool that cannot be exceeded by the swap",tokenIn:"The token being swapped in",tokenOut:"The token being swapped out"},returns:{amountOut:"The amount of `tokenOut` that would be received"},notice:"Returns the amount out received for a given exact input but for a swap of a single pool"},"quoteExactOutput(bytes,uint256)":{inputs:[{internalType:"bytes",name:"path",type:"bytes"},{internalType:"uint256",name:"amountOut",type:"uint256"}],name:"quoteExactOutput",outputs:[{internalType:"uint256",name:"amountIn",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{amountOut:"The amount of the last token to receive",path:"The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order"},returns:{amountIn:"The amount of first token required to be paid"},notice:"Returns the amount in required for a given exact output swap without executing the swap"},"quoteExactOutputSingle(address,address,uint24,uint256,uint160)":{inputs:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"address",name:"tokenOut",type:"address"},{internalType:"uint24",name:"fee",type:"uint24"},{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint160",name:"sqrtPriceLimitX96",type:"uint160"}],name:"quoteExactOutputSingle",outputs:[{internalType:"uint256",name:"amountIn",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{amountOut:"The desired output amount",fee:"The fee of the token pool to consider for the pair",sqrtPriceLimitX96:"The price limit of the pool that cannot be exceeded by the swap",tokenIn:"The token being swapped in",tokenOut:"The token being swapped out"},returns:{amountIn:"The amount required as the input for the swap in order to receive `amountOut`"},notice:"Returns the amount in required to receive the given exact output amount but for a swap of a single pool"}}},"contracts/externalInterfaces/uniswapV3/IUniswapRouter02.sol:IUniswapRouter02":{source:"contracts/externalInterfaces/uniswapV3/IUniswapRouter02.sol",name:"IUniswapRouter02",title:"Router token swapping functionality",methods:{"exactInput((bytes,address,uint256,uint256))":{inputs:[{components:[{internalType:"bytes",name:"path",type:"bytes"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"amountOutMinimum",type:"uint256"}],internalType:"struct IUniswapRouter02.ExactInputParams",name:"params",type:"tuple"}],name:"exactInput",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"}],stateMutability:"payable",type:"function",details:"Setting `amountIn` to 0 will cause the contract to look up its own balance, and swap the entire amount, enabling contracts to send tokens before calling this function.",params:{params:"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"},returns:{amountOut:"The amount of the received token"},notice:"Swaps `amountIn` of one token for as much as possible of another along the specified path"},"exactInputSingle((address,address,uint24,address,uint256,uint256,uint160))":{inputs:[{components:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"address",name:"tokenOut",type:"address"},{internalType:"uint24",name:"fee",type:"uint24"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"amountOutMinimum",type:"uint256"},{internalType:"uint160",name:"sqrtPriceLimitX96",type:"uint160"}],internalType:"struct IUniswapRouter02.ExactInputSingleParams",name:"params",type:"tuple"}],name:"exactInputSingle",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"}],stateMutability:"payable",type:"function",details:"Setting `amountIn` to 0 will cause the contract to look up its own balance, and swap the entire amount, enabling contracts to send tokens before calling this function.",params:{params:"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"},returns:{amountOut:"The amount of the received token"},notice:"Swaps `amountIn` of one token for as much as possible of another token"}}},"contracts/governor/ImpactProxyAdmin.sol:ImpactProxyAdmin":{source:"contracts/governor/ImpactProxyAdmin.sol",name:"ImpactProxyAdmin",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"changeProxyAdmin(address,address)":{inputs:[{internalType:"contract TransparentUpgradeableProxy",name:"proxy",type:"address"},{internalType:"address",name:"newAdmin",type:"address"}],name:"changeProxyAdmin",outputs:[],stateMutability:"nonpayable",type:"function",details:"Changes the admin of `proxy` to `newAdmin`. Requirements: - This contract must be the current admin of `proxy`."},"getProxyAdmin(address)":{inputs:[{internalType:"contract TransparentUpgradeableProxy",name:"proxy",type:"address"}],name:"getProxyAdmin",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the current admin of `proxy`. Requirements: - This contract must be the admin of `proxy`."},"getProxyImplementation(address)":{inputs:[{internalType:"contract TransparentUpgradeableProxy",name:"proxy",type:"address"}],name:"getProxyImplementation",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the current implementation of `proxy`. Requirements: - This contract must be the admin of `proxy`."},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"upgrade(address,address)":{inputs:[{internalType:"contract TransparentUpgradeableProxy",name:"proxy",type:"address"},{internalType:"address",name:"implementation",type:"address"}],name:"upgrade",outputs:[],stateMutability:"nonpayable",type:"function",details:"Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}. Requirements: - This contract must be the admin of `proxy`."},"upgradeAndCall(address,address,bytes)":{inputs:[{internalType:"contract TransparentUpgradeableProxy",name:"proxy",type:"address"},{internalType:"address",name:"implementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"upgradeAndCall",outputs:[],stateMutability:"payable",type:"function",details:"Upgrades `proxy` to `implementation` and calls a function on the new implementation. See {TransparentUpgradeableProxy-upgradeToAndCall}. Requirements: - This contract must be the admin of `proxy`."}}},"contracts/governor/PACTDelegate.sol:PACTDelegate":{source:"contracts/governor/PACTDelegate.sol",name:"PACTDelegate",events:{"NewAdmin(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"NewAdmin",type:"event",notice:"Emitted when pendingAdmin is accepted, which means admin is updated"},"NewImplementation(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldImplementation",type:"address"},{indexed:!1,internalType:"address",name:"newImplementation",type:"address"}],name:"NewImplementation",type:"event",notice:"Emitted when implementation is changed"},"NewPendingAdmin(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldPendingAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newPendingAdmin",type:"address"}],name:"NewPendingAdmin",type:"event",notice:"Emitted when pendingAdmin is changed"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"ProposalCanceled(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"id",type:"uint256"}],name:"ProposalCanceled",type:"event",notice:"An event emitted when a proposal has been canceled"},"ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"address",name:"proposer",type:"address"},{indexed:!1,internalType:"address[]",name:"targets",type:"address[]"},{indexed:!1,internalType:"uint256[]",name:"values",type:"uint256[]"},{indexed:!1,internalType:"string[]",name:"signatures",type:"string[]"},{indexed:!1,internalType:"bytes[]",name:"calldatas",type:"bytes[]"},{indexed:!1,internalType:"uint256",name:"startBlock",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endBlock",type:"uint256"},{indexed:!1,internalType:"string",name:"description",type:"string"}],name:"ProposalCreated",type:"event",notice:"An event emitted when a new proposal is created"},"ProposalExecuted(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"id",type:"uint256"}],name:"ProposalExecuted",type:"event",notice:"An event emitted when a proposal has been executed in the Timelock"},"ProposalQueued(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"eta",type:"uint256"}],name:"ProposalQueued",type:"event",notice:"An event emitted when a proposal has been queued in the Timelock"},"ProposalThresholdSet(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldProposalThreshold",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newProposalThreshold",type:"uint256"}],name:"ProposalThresholdSet",type:"event",notice:"Emitted when proposal threshold is set"},"QuorumVotesSet(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldQuorumVotes",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newQuorumVotes",type:"uint256"}],name:"QuorumVotesSet",type:"event",notice:"An event emitted when the quorum votes is set"},"ReleaseTokenSet(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldReleaseToken",type:"address"},{indexed:!1,internalType:"address",name:"newReleaseToken",type:"address"}],name:"ReleaseTokenSet",type:"event",notice:"Emitted when release token is set"},"TransferERC20(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TransferERC20",type:"event",notice:"Triggered when an amount of an ERC20 has been transferred from this contract to an address"},"VoteCast(address,uint256,uint8,uint256,string)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"voter",type:"address"},{indexed:!1,internalType:"uint256",name:"proposalId",type:"uint256"},{indexed:!1,internalType:"uint8",name:"support",type:"uint8"},{indexed:!1,internalType:"uint256",name:"votes",type:"uint256"},{indexed:!1,internalType:"string",name:"reason",type:"string"}],name:"VoteCast",type:"event",notice:"An event emitted when a vote has been cast on a proposal"},"VotingDelaySet(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldVotingDelay",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newVotingDelay",type:"uint256"}],name:"VotingDelaySet",type:"event",notice:"An event emitted when the voting delay is set"},"VotingPeriodSet(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldVotingPeriod",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newVotingPeriod",type:"uint256"}],name:"VotingPeriodSet",type:"event",notice:"An event emitted when the voting period is set"}},methods:{"BALLOT_TYPEHASH()":{inputs:[],name:"BALLOT_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",notice:"The EIP-712 typehash for the ballot struct used by the contract"},"DOMAIN_TYPEHASH()":{inputs:[],name:"DOMAIN_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",notice:"The EIP-712 typehash for the contract's domain"},"MAX_PROPOSAL_THRESHOLD()":{inputs:[],name:"MAX_PROPOSAL_THRESHOLD",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The maximum setable proposal threshold"},"MAX_VOTING_DELAY()":{inputs:[],name:"MAX_VOTING_DELAY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The max setable voting delay"},"MAX_VOTING_PERIOD()":{inputs:[],name:"MAX_VOTING_PERIOD",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The max setable voting period"},"MIN_PROPOSAL_THRESHOLD()":{inputs:[],name:"MIN_PROPOSAL_THRESHOLD",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The minimum setable proposal threshold"},"MIN_VOTING_DELAY()":{inputs:[],name:"MIN_VOTING_DELAY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The min setable voting delay"},"MIN_VOTING_PERIOD()":{inputs:[],name:"MIN_VOTING_PERIOD",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The minimum setable voting period"},"NAME()":{inputs:[],name:"NAME",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",notice:"The name of this contract"},"PROPOSAL_MAX_OPERATIONS()":{inputs:[],name:"PROPOSAL_MAX_OPERATIONS",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The maximum number of actions that can be included in a proposal"},"_setProposalThreshold(uint256)":{inputs:[{internalType:"uint256",name:"_newProposalThreshold",type:"uint256"}],name:"_setProposalThreshold",outputs:[],stateMutability:"nonpayable",type:"function",details:"_newProposalThreshold must be greater than the hardcoded min",params:{_newProposalThreshold:"new proposal threshold"},notice:"Owner function for setting the proposal threshold"},"_setQuorumVotes(uint256)":{inputs:[{internalType:"uint256",name:"_newQuorumVotes",type:"uint256"}],name:"_setQuorumVotes",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newQuorumVotes:"new quorum votes"},notice:"Owner function for setting the quorum votes"},"_setReleaseToken(address)":{inputs:[{internalType:"contract IHasVotes",name:"_newReleaseToken",type:"address"}],name:"_setReleaseToken",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newReleaseToken:"new release token address"},notice:"Owner function for setting the release token"},"_setVotingDelay(uint256)":{inputs:[{internalType:"uint256",name:"_newVotingDelay",type:"uint256"}],name:"_setVotingDelay",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newVotingDelay:"new voting delay, in blocks"},notice:"Owner function for setting the voting delay"},"_setVotingPeriod(uint256)":{inputs:[{internalType:"uint256",name:"_newVotingPeriod",type:"uint256"}],name:"_setVotingPeriod",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newVotingPeriod:"new voting period, in blocks"},notice:"Owner function for setting the voting period"},"cancel(uint256)":{inputs:[{internalType:"uint256",name:"_proposalId",type:"uint256"}],name:"cancel",outputs:[],stateMutability:"nonpayable",type:"function",params:{_proposalId:"The id of the proposal to cancel"},notice:"Cancels a proposal only if sender is the proposer, or proposer delegates dropped below proposal threshold"},"castVote(uint256,uint8)":{inputs:[{internalType:"uint256",name:"_proposalId",type:"uint256"},{internalType:"uint8",name:"_support",type:"uint8"}],name:"castVote",outputs:[],stateMutability:"nonpayable",type:"function",params:{_proposalId:"The id of the proposal to vote on",_support:"The support value for the vote. 0=against, 1=for, 2=abstain"},notice:"Cast a vote for a proposal"},"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)":{inputs:[{internalType:"uint256",name:"_proposalId",type:"uint256"},{internalType:"uint8",name:"_support",type:"uint8"},{internalType:"uint8",name:"_v",type:"uint8"},{internalType:"bytes32",name:"_r",type:"bytes32"},{internalType:"bytes32",name:"_s",type:"bytes32"}],name:"castVoteBySig",outputs:[],stateMutability:"nonpayable",type:"function",details:"External function that accepts EIP-712 signatures for voting on proposals.",notice:"Cast a vote for a proposal by signature"},"castVoteWithReason(uint256,uint8,string)":{inputs:[{internalType:"uint256",name:"_proposalId",type:"uint256"},{internalType:"uint8",name:"_support",type:"uint8"},{internalType:"string",name:"_reason",type:"string"}],name:"castVoteWithReason",outputs:[],stateMutability:"nonpayable",type:"function",params:{_proposalId:"The id of the proposal to vote on",_reason:"The reason given for the vote by the voter",_support:"The support value for the vote. 0=against, 1=for, 2=abstain"},notice:"Cast a vote for a proposal with a reason"},"execute(uint256)":{inputs:[{internalType:"uint256",name:"_proposalId",type:"uint256"}],name:"execute",outputs:[],stateMutability:"payable",type:"function",params:{_proposalId:"The id of the proposal to execute"},notice:"Executes a queued proposal if eta has passed"},"getActions(uint256)":{inputs:[{internalType:"uint256",name:"_proposalId",type:"uint256"}],name:"getActions",outputs:[{internalType:"address[]",name:"targets",type:"address[]"},{internalType:"uint256[]",name:"values",type:"uint256[]"},{internalType:"string[]",name:"signatures",type:"string[]"},{internalType:"bytes[]",name:"calldatas",type:"bytes[]"}],stateMutability:"view",type:"function",params:{_proposalId:"Proposal to query."},returns:{calldatas:"Calldatas for proposal calls.",signatures:"Function signatures for proposal calls.",targets:"Target addresses for proposal calls.",values:"Eth values for proposal calls."},notice:"Gets actions of a proposal."},"getPriorVotes(address,uint256)":{inputs:[{internalType:"address",name:"_voter",type:"address"},{internalType:"uint256",name:"_beforeBlock",type:"uint256"}],name:"getPriorVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],stateMutability:"view",type:"function"},"getReceipt(uint256,address)":{inputs:[{internalType:"uint256",name:"_proposalId",type:"uint256"},{internalType:"address",name:"_voter",type:"address"}],name:"getReceipt",outputs:[{components:[{internalType:"bool",name:"hasVoted",type:"bool"},{internalType:"uint8",name:"support",type:"uint8"},{internalType:"uint96",name:"votes",type:"uint96"}],internalType:"struct PACTDelegateStorageV1.Receipt",name:"",type:"tuple"}],stateMutability:"view",type:"function",params:{_proposalId:"the id of proposal",_voter:"The address of the voter"},returns:{_0:"The voting receipt"},notice:"Gets the receipt for a voter on a given proposal"},"initialize(address,address,address,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"address",name:"_timelock",type:"address"},{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_releaseToken",type:"address"},{internalType:"uint256",name:"_votingPeriod",type:"uint256"},{internalType:"uint256",name:"_votingDelay",type:"uint256"},{internalType:"uint256",name:"_proposalThreshold",type:"uint256"},{internalType:"uint256",name:"_quorumVotes",type:"uint256"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",params:{_proposalThreshold:"The initial proposal threshold",_quorumVotes:"The initial quorum votes",_releaseToken:'The address of the "Release" voting token. If none, specify the zero address.',_timelock:"The address of the Timelock",_token:"The address of the voting token",_votingDelay:"The initial voting delay",_votingPeriod:"The initial voting period"},notice:"Used to initialize the contract during delegator constructor"},"latestProposalIds(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"latestProposalIds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The latest proposal for each proposer"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"proposalCalldatas(uint256,uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],name:"proposalCalldatas",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function",notice:"The official each proposal's calldatas: An ordered list of calldata to be passed to each call"},"proposalCount()":{inputs:[],name:"proposalCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The total number of proposals"},"proposalReceipts(uint256,address)":{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"address",name:"",type:"address"}],name:"proposalReceipts",outputs:[{internalType:"bool",name:"hasVoted",type:"bool"},{internalType:"uint8",name:"support",type:"uint8"},{internalType:"uint96",name:"votes",type:"uint96"}],stateMutability:"view",type:"function",notice:"The official each proposal's receipts: Receipts of ballots for the entire set of voters"},"proposalSignatures(uint256,uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],name:"proposalSignatures",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",notice:"The official each proposal's signatures: An ordered list of function signatures to be called"},"proposalTargets(uint256,uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],name:"proposalTargets",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The official each proposal's targets: An ordered list of target addresses for calls to be made"},"proposalThreshold()":{inputs:[],name:"proposalThreshold",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The number of votes required in order for a voter to become a proposer"},"proposalValues(uint256,uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],name:"proposalValues",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The official each proposal's values: An ordered list of values (i.e. msg.value) to be passed to the calls to be made"},"proposals(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"proposals",outputs:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"address",name:"proposer",type:"address"},{internalType:"uint256",name:"eta",type:"uint256"},{internalType:"uint256",name:"startBlock",type:"uint256"},{internalType:"uint256",name:"endBlock",type:"uint256"},{internalType:"uint256",name:"forVotes",type:"uint256"},{internalType:"uint256",name:"againstVotes",type:"uint256"},{internalType:"uint256",name:"abstainVotes",type:"uint256"},{internalType:"bool",name:"canceled",type:"bool"},{internalType:"bool",name:"executed",type:"bool"}],stateMutability:"view",type:"function",notice:"The official record of all proposals ever proposed"},"propose(address[],uint256[],string[],bytes[],string)":{inputs:[{internalType:"address[]",name:"_targets",type:"address[]"},{internalType:"uint256[]",name:"_values",type:"uint256[]"},{internalType:"string[]",name:"_signatures",type:"string[]"},{internalType:"bytes[]",name:"_calldatas",type:"bytes[]"},{internalType:"string",name:"_description",type:"string"}],name:"propose",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{_calldatas:"Calldatas for proposal calls.",_description:"String description of the proposal.",_signatures:"Function signatures for proposal calls.",_targets:"Target addresses for proposal calls.",_values:"Eth values for proposal calls."},returns:{_0:"Proposal id of new proposal."},notice:"Function used to propose a new proposal. Sender must have delegates above the proposal threshold."},"queue(uint256)":{inputs:[{internalType:"uint256",name:"_proposalId",type:"uint256"}],name:"queue",outputs:[],stateMutability:"nonpayable",type:"function",params:{_proposalId:"The id of the proposal to queue"},notice:"Queues a proposal of state succeeded"},"quorumVotes()":{inputs:[],name:"quorumVotes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed"},"releaseToken()":{inputs:[],name:"releaseToken",outputs:[{internalType:"contract IHasVotes",name:"",type:"address"}],stateMutability:"view",type:"function",notice:'The address of the "Release" governance token'},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"state(uint256)":{inputs:[{internalType:"uint256",name:"_proposalId",type:"uint256"}],name:"state",outputs:[{internalType:"enum PACTDelegateStorageV1.ProposalState",name:"",type:"uint8"}],stateMutability:"view",type:"function",params:{_proposalId:"The id of the proposal"},returns:{_0:"Proposal state"},notice:"Gets the state of a proposal"},"timelock()":{inputs:[],name:"timelock",outputs:[{internalType:"contract TimelockInterface",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The address of the Governance Timelock"},"token()":{inputs:[],name:"token",outputs:[{internalType:"contract IHasVotes",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The address of the governance token"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"amount of the transaction",_to:"address of the receiver",_token:"address of the ERC20 token"},notice:"Transfers an amount of an ERC20 from this contract to an address"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"votingDelay()":{inputs:[],name:"votingDelay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The delay before voting on a proposal may take place, once proposed, in blocks"},"votingPeriod()":{inputs:[],name:"votingPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The duration of voting on a proposal, in blocks"}}},"contracts/governor/PACTDelegator.sol:PACTDelegator":{source:"contracts/governor/PACTDelegator.sol",name:"PACTDelegator",constructor:{inputs:[{internalType:"address",name:"_logic",type:"address"},{internalType:"address",name:"_proxyAdmin",type:"address"}],stateMutability:"nonpayable",type:"constructor"},fallback:{stateMutability:"payable",type:"fallback"},receive:{stateMutability:"payable",type:"receive"},events:{"AdminChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"previousAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"AdminChanged",type:"event"},"BeaconUpgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"beacon",type:"address"}],name:"BeaconUpgraded",type:"event"},"Upgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"implementation",type:"address"}],name:"Upgraded",type:"event"}},methods:{"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"admin_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"changeAdmin(address)":{inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"changeAdmin",outputs:[],stateMutability:"nonpayable",type:"function",details:"Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."},"implementation()":{inputs:[],name:"implementation",outputs:[{internalType:"address",name:"implementation_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"},"upgradeTo(address)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"}],name:"upgradeTo",outputs:[],stateMutability:"nonpayable",type:"function",details:"Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."},"upgradeToAndCall(address,bytes)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"upgradeToAndCall",outputs:[],stateMutability:"payable",type:"function",details:"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."}}},"contracts/governor/PACTTimelock.sol:PACTTimelock":{source:"contracts/governor/PACTTimelock.sol",name:"PACTTimelock",constructor:{inputs:[{internalType:"address",name:"_admin",type:"address"},{internalType:"uint256",name:"_delay",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},receive:{stateMutability:"payable",type:"receive"},events:{"CancelTransaction(bytes32,address,uint256,string,bytes,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"txHash",type:"bytes32"},{indexed:!0,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"},{indexed:!1,internalType:"string",name:"signature",type:"string"},{indexed:!1,internalType:"bytes",name:"data",type:"bytes"},{indexed:!1,internalType:"uint256",name:"eta",type:"uint256"}],name:"CancelTransaction",type:"event"},"ExecuteTransaction(bytes32,address,uint256,string,bytes,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"txHash",type:"bytes32"},{indexed:!0,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"},{indexed:!1,internalType:"string",name:"signature",type:"string"},{indexed:!1,internalType:"bytes",name:"data",type:"bytes"},{indexed:!1,internalType:"uint256",name:"eta",type:"uint256"}],name:"ExecuteTransaction",type:"event"},"NewAdmin(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newAdmin",type:"address"}],name:"NewAdmin",type:"event"},"NewDelay(uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"newDelay",type:"uint256"}],name:"NewDelay",type:"event"},"NewPendingAdmin(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newPendingAdmin",type:"address"}],name:"NewPendingAdmin",type:"event"},"QueueTransaction(bytes32,address,uint256,string,bytes,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"txHash",type:"bytes32"},{indexed:!0,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"},{indexed:!1,internalType:"string",name:"signature",type:"string"},{indexed:!1,internalType:"bytes",name:"data",type:"bytes"},{indexed:!1,internalType:"uint256",name:"eta",type:"uint256"}],name:"QueueTransaction",type:"event"}},methods:{"GRACE_PERIOD()":{inputs:[],name:"GRACE_PERIOD",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"MAXIMUM_DELAY()":{inputs:[],name:"MAXIMUM_DELAY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"MINIMUM_DELAY()":{inputs:[],name:"MINIMUM_DELAY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"acceptAdmin()":{inputs:[],name:"acceptAdmin",outputs:[],stateMutability:"nonpayable",type:"function"},"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"cancelTransaction(address,uint256,string,bytes,uint256)":{inputs:[{internalType:"address",name:"_target",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"},{internalType:"string",name:"_signature",type:"string"},{internalType:"bytes",name:"_data",type:"bytes"},{internalType:"uint256",name:"_eta",type:"uint256"}],name:"cancelTransaction",outputs:[],stateMutability:"nonpayable",type:"function"},"delay()":{inputs:[],name:"delay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"executeTransaction(address,uint256,string,bytes,uint256)":{inputs:[{internalType:"address",name:"_target",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"},{internalType:"string",name:"_signature",type:"string"},{internalType:"bytes",name:"_data",type:"bytes"},{internalType:"uint256",name:"_eta",type:"uint256"}],name:"executeTransaction",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"payable",type:"function"},"pendingAdmin()":{inputs:[],name:"pendingAdmin",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"queueTransaction(address,uint256,string,bytes,uint256)":{inputs:[{internalType:"address",name:"_target",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"},{internalType:"string",name:"_signature",type:"string"},{internalType:"bytes",name:"_data",type:"bytes"},{internalType:"uint256",name:"_eta",type:"uint256"}],name:"queueTransaction",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"nonpayable",type:"function"},"queuedTransactions(bytes32)":{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"queuedTransactions",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"setDelay(uint256)":{inputs:[{internalType:"uint256",name:"_delay",type:"uint256"}],name:"setDelay",outputs:[],stateMutability:"nonpayable",type:"function"},"setPendingAdmin(address)":{inputs:[{internalType:"address",name:"_pendingAdmin",type:"address"}],name:"setPendingAdmin",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/governor/impactMarketCouncil/ImpactMarketCouncilImplementation.sol:ImpactMarketCouncilImplementation":{source:"contracts/governor/impactMarketCouncil/ImpactMarketCouncilImplementation.sol",name:"ImpactMarketCouncilImplementation",events:{"MemberAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"member",type:"address"}],name:"MemberAdded",type:"event",notice:"An event emitted when a member is added"},"MemberRemoved(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"member",type:"address"}],name:"MemberRemoved",type:"event",notice:"An event emitted when a member is removed"},"NewImplementation(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldImplementation",type:"address"},{indexed:!1,internalType:"address",name:"newImplementation",type:"address"}],name:"NewImplementation",type:"event",notice:"Emitted when implementation is changed"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"ProposalCanceled(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"id",type:"uint256"}],name:"ProposalCanceled",type:"event",notice:"An event emitted when a proposal has been canceled"},"ProposalCreated(uint256,address,address[],string[],bytes[],uint256,string)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"address",name:"proposer",type:"address"},{indexed:!1,internalType:"address[]",name:"targets",type:"address[]"},{indexed:!1,internalType:"string[]",name:"signatures",type:"string[]"},{indexed:!1,internalType:"bytes[]",name:"calldatas",type:"bytes[]"},{indexed:!1,internalType:"uint256",name:"endBlock",type:"uint256"},{indexed:!1,internalType:"string",name:"description",type:"string"}],name:"ProposalCreated",type:"event",notice:"An event emitted when a new proposal is created"},"ProposalExecuted(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"id",type:"uint256"}],name:"ProposalExecuted",type:"event",notice:"An event emitted when a proposal has been executed in the Timelock"},"QuorumVotesSet(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldQuorumVotes",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newQuorumVotes",type:"uint256"}],name:"QuorumVotesSet",type:"event",notice:"An event emitted when the quorum votes is set"},"TransferERC20(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TransferERC20",type:"event",params:{amount:"Amount of the transaction",to:"Address of the receiver",token:"ERC20 token address"},notice:"Triggered when an amount of an ERC20 has been transferred from this contract to an address"},"VoteCast(address,uint256,uint8,uint256,string)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"voter",type:"address"},{indexed:!1,internalType:"uint256",name:"proposalId",type:"uint256"},{indexed:!1,internalType:"uint8",name:"support",type:"uint8"},{indexed:!1,internalType:"uint256",name:"votes",type:"uint256"},{indexed:!1,internalType:"string",name:"reason",type:"string"}],name:"VoteCast",type:"event",params:{proposalId:"The proposal id which was voted on",reason:"The reason given for the vote by the voter",support:"Support value for the vote. 0=against, 1=for, 2=abstain",voter:"The address which casted a vote",votes:"Number of votes which were cast by the voter"},notice:"An event emitted when a vote has been cast on a proposal"}},methods:{"MAX_VOTING_PERIOD()":{inputs:[],name:"MAX_VOTING_PERIOD",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The max setable voting period"},"PROPOSAL_MAX_OPERATIONS()":{inputs:[],name:"PROPOSAL_MAX_OPERATIONS",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The maximum number of actions that can be included in a proposal"},"addMember(address)":{inputs:[{internalType:"address",name:"_member",type:"address"}],name:"addMember",outputs:[],stateMutability:"nonpayable",type:"function",params:{_member:"Member address."},notice:"Function used to add new members to the impactMarket Council."},"cancel(uint256)":{inputs:[{internalType:"uint256",name:"_proposalId",type:"uint256"}],name:"cancel",outputs:[],stateMutability:"nonpayable",type:"function",params:{_proposalId:"The id of the proposal to cancel"},notice:"Cancels a proposal only if sender is the proposer, or proposer delegates dropped below proposal threshold"},"castVote(uint256,uint8)":{inputs:[{internalType:"uint256",name:"_proposalId",type:"uint256"},{internalType:"uint8",name:"_support",type:"uint8"}],name:"castVote",outputs:[],stateMutability:"nonpayable",type:"function",params:{_proposalId:"The id of the proposal to vote on",_support:"The support value for the vote. 0=against, 1=for, 2=abstain"},notice:"Cast a vote for a proposal"},"communityAdmin()":{inputs:[],name:"communityAdmin",outputs:[{internalType:"contract ICommunityAdmin",name:"",type:"address"}],stateMutability:"view",type:"function"},"communityProxyAdmin()":{inputs:[],name:"communityProxyAdmin",outputs:[{internalType:"contract ProxyAdmin",name:"",type:"address"}],stateMutability:"view",type:"function"},"execute(uint256)":{inputs:[{internalType:"uint256",name:"_proposalId",type:"uint256"}],name:"execute",outputs:[],stateMutability:"payable",type:"function",params:{_proposalId:"The id of the proposal to execute"},notice:"Executes a queued proposal if eta has passed"},"getActions(uint256)":{inputs:[{internalType:"uint256",name:"_proposalId",type:"uint256"}],name:"getActions",outputs:[{internalType:"string[]",name:"signatures",type:"string[]"},{internalType:"bytes[]",name:"calldatas",type:"bytes[]"}],stateMutability:"view",type:"function",params:{_proposalId:"Proposal to query."},returns:{calldatas:"Calldatas for proposal calls.",signatures:"Function signatures for proposal calls."},notice:"Gets actions of a proposal."},"getReceipt(uint256,address)":{inputs:[{internalType:"uint256",name:"_proposalId",type:"uint256"},{internalType:"address",name:"_voter",type:"address"}],name:"getReceipt",outputs:[{components:[{internalType:"bool",name:"hasVoted",type:"bool"},{internalType:"uint8",name:"support",type:"uint8"},{internalType:"uint96",name:"votes",type:"uint96"}],internalType:"struct IImpactMarketCouncil.Receipt",name:"",type:"tuple"}],stateMutability:"view",type:"function",params:{_proposalId:"the id of proposal",_voter:"The address of the voter"},returns:{_0:"The voting receipt"},notice:"Gets the receipt for a voter on a given proposal"},"initialize(uint256,address,address[])":{inputs:[{internalType:"uint256",name:"_quorumVotes",type:"uint256"},{internalType:"contract ICommunityAdmin",name:"_communityAdmin",type:"address"},{internalType:"address[]",name:"_members",type:"address[]"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",params:{_quorumVotes:"The initial quorum votes"},notice:"Used to initialize the contract during delegator constructor"},"latestProposalIds(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"latestProposalIds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The latest proposal for each proposer"},"members(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"members",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"The council members"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"proposalCalldatas(uint256,uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],name:"proposalCalldatas",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function",notice:"The official each proposal's calldatas: An ordered list of calldata to be passed to each call"},"proposalCount()":{inputs:[],name:"proposalCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The total number of proposals"},"proposalReceipts(uint256,address)":{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"address",name:"",type:"address"}],name:"proposalReceipts",outputs:[{internalType:"bool",name:"hasVoted",type:"bool"},{internalType:"uint8",name:"support",type:"uint8"},{internalType:"uint96",name:"votes",type:"uint96"}],stateMutability:"view",type:"function",notice:"The official each proposal's receipts: Receipts of ballots for the entire set of voters"},"proposalSignatures(uint256,uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],name:"proposalSignatures",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",notice:"The official each proposal's signatures: An ordered list of function signatures to be called"},"proposalTargets(uint256,uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],name:"proposalTargets",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The official each proposal's targets: An ordered list of target addresses for calls to be made"},"proposals(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"proposals",outputs:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"address",name:"proposer",type:"address"},{internalType:"uint256",name:"endBlock",type:"uint256"},{internalType:"uint256",name:"forVotes",type:"uint256"},{internalType:"uint256",name:"againstVotes",type:"uint256"},{internalType:"uint256",name:"abstainVotes",type:"uint256"},{internalType:"bool",name:"canceled",type:"bool"},{internalType:"bool",name:"executed",type:"bool"}],stateMutability:"view",type:"function",notice:"The official record of all proposals ever proposed"},"propose(address[],string[],bytes[],string)":{inputs:[{internalType:"address[]",name:"_targets",type:"address[]"},{internalType:"string[]",name:"_signatures",type:"string[]"},{internalType:"bytes[]",name:"_calldatas",type:"bytes[]"},{internalType:"string",name:"_description",type:"string"}],name:"propose",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{_calldatas:"Calldatas for proposal calls.",_description:"String description of the proposal.",_signatures:"Function signatures for proposal calls.",_targets:"Target addresses for proposal calls."},returns:{_0:"Proposal id of new proposal."},notice:"Function used to propose a new proposal. Sender must have delegates above the proposal threshold."},"quorumVotes()":{inputs:[],name:"quorumVotes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed"},"removeMember(address)":{inputs:[{internalType:"address",name:"_member",type:"address"}],name:"removeMember",outputs:[],stateMutability:"nonpayable",type:"function",params:{_member:"Member address."},notice:"Function used to remove members from the impactMarket Council."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setQuorumVotes(uint256)":{inputs:[{internalType:"uint256",name:"_newQuorumVotes",type:"uint256"}],name:"setQuorumVotes",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newQuorumVotes:"new quorum votes"},notice:"Owner function for setting the quorum votes"},"state(uint256)":{inputs:[{internalType:"uint256",name:"_proposalId",type:"uint256"}],name:"state",outputs:[{internalType:"enum IImpactMarketCouncil.ProposalState",name:"",type:"uint8"}],stateMutability:"view",type:"function",params:{_proposalId:"The id of the proposal"},returns:{_0:"Proposal state"},notice:"Gets the state of a proposal"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/governor/impactMarketCouncil/ImpactMarketCouncilProxy.sol:ImpactMarketCouncilProxy":{source:"contracts/governor/impactMarketCouncil/ImpactMarketCouncilProxy.sol",name:"ImpactMarketCouncilProxy",constructor:{inputs:[{internalType:"address",name:"_logic",type:"address"},{internalType:"address",name:"_proxyAdmin",type:"address"}],stateMutability:"nonpayable",type:"constructor"},fallback:{stateMutability:"payable",type:"fallback"},receive:{stateMutability:"payable",type:"receive"},events:{"AdminChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"previousAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"AdminChanged",type:"event"},"BeaconUpgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"beacon",type:"address"}],name:"BeaconUpgraded",type:"event"},"Upgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"implementation",type:"address"}],name:"Upgraded",type:"event"}},methods:{"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"admin_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"changeAdmin(address)":{inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"changeAdmin",outputs:[],stateMutability:"nonpayable",type:"function",details:"Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."},"implementation()":{inputs:[],name:"implementation",outputs:[{internalType:"address",name:"implementation_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"},"upgradeTo(address)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"}],name:"upgradeTo",outputs:[],stateMutability:"nonpayable",type:"function",details:"Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."},"upgradeToAndCall(address,bytes)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"upgradeToAndCall",outputs:[],stateMutability:"payable",type:"function",details:"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."}}},"contracts/governor/impactMarketCouncil/interfaces/IImpactMarketCouncil.sol:IImpactMarketCouncil":{source:"contracts/governor/impactMarketCouncil/interfaces/IImpactMarketCouncil.sol",name:"IImpactMarketCouncil"},"contracts/governor/impactMarketCouncil/interfaces/ImpactMarketCouncilStorageV1.sol:ImpactMarketCouncilStorageV1":{source:"contracts/governor/impactMarketCouncil/interfaces/ImpactMarketCouncilStorageV1.sol",name:"ImpactMarketCouncilStorageV1",methods:{"communityAdmin()":{inputs:[],name:"communityAdmin",outputs:[{internalType:"contract ICommunityAdmin",name:"",type:"address"}],stateMutability:"view",type:"function"},"communityProxyAdmin()":{inputs:[],name:"communityProxyAdmin",outputs:[{internalType:"contract ProxyAdmin",name:"",type:"address"}],stateMutability:"view",type:"function"},"latestProposalIds(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"latestProposalIds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The latest proposal for each proposer"},"members(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"members",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"The council members"},"proposalCalldatas(uint256,uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],name:"proposalCalldatas",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function",notice:"The official each proposal's calldatas: An ordered list of calldata to be passed to each call"},"proposalCount()":{inputs:[],name:"proposalCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The total number of proposals"},"proposalReceipts(uint256,address)":{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"address",name:"",type:"address"}],name:"proposalReceipts",outputs:[{internalType:"bool",name:"hasVoted",type:"bool"},{internalType:"uint8",name:"support",type:"uint8"},{internalType:"uint96",name:"votes",type:"uint96"}],stateMutability:"view",type:"function",notice:"The official each proposal's receipts: Receipts of ballots for the entire set of voters"},"proposalSignatures(uint256,uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],name:"proposalSignatures",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",notice:"The official each proposal's signatures: An ordered list of function signatures to be called"},"proposalTargets(uint256,uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],name:"proposalTargets",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The official each proposal's targets: An ordered list of target addresses for calls to be made"},"proposals(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"proposals",outputs:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"address",name:"proposer",type:"address"},{internalType:"uint256",name:"endBlock",type:"uint256"},{internalType:"uint256",name:"forVotes",type:"uint256"},{internalType:"uint256",name:"againstVotes",type:"uint256"},{internalType:"uint256",name:"abstainVotes",type:"uint256"},{internalType:"bool",name:"canceled",type:"bool"},{internalType:"bool",name:"executed",type:"bool"}],stateMutability:"view",type:"function",notice:"The official record of all proposals ever proposed"},"quorumVotes()":{inputs:[],name:"quorumVotes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed"}}},"contracts/governor/interfaces/PACTDelegateStorageV1.sol:PACTDelegateStorageV1":{source:"contracts/governor/interfaces/PACTDelegateStorageV1.sol",name:"PACTDelegateStorageV1",title:"Storage for Governor Delegate",notice:"For future upgrades, do not change PACTDelegateStorageV1. Create a new contract which implements PACTDelegateStorageV1 and following the naming convention PACTDelegateStorageVX.",methods:{"latestProposalIds(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"latestProposalIds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The latest proposal for each proposer"},"proposalCalldatas(uint256,uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],name:"proposalCalldatas",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function",notice:"The official each proposal's calldatas: An ordered list of calldata to be passed to each call"},"proposalCount()":{inputs:[],name:"proposalCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The total number of proposals"},"proposalReceipts(uint256,address)":{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"address",name:"",type:"address"}],name:"proposalReceipts",outputs:[{internalType:"bool",name:"hasVoted",type:"bool"},{internalType:"uint8",name:"support",type:"uint8"},{internalType:"uint96",name:"votes",type:"uint96"}],stateMutability:"view",type:"function",notice:"The official each proposal's receipts: Receipts of ballots for the entire set of voters"},"proposalSignatures(uint256,uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],name:"proposalSignatures",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",notice:"The official each proposal's signatures: An ordered list of function signatures to be called"},"proposalTargets(uint256,uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],name:"proposalTargets",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The official each proposal's targets: An ordered list of target addresses for calls to be made"},"proposalThreshold()":{inputs:[],name:"proposalThreshold",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The number of votes required in order for a voter to become a proposer"},"proposalValues(uint256,uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],name:"proposalValues",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The official each proposal's values: An ordered list of values (i.e. msg.value) to be passed to the calls to be made"},"proposals(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"proposals",outputs:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"address",name:"proposer",type:"address"},{internalType:"uint256",name:"eta",type:"uint256"},{internalType:"uint256",name:"startBlock",type:"uint256"},{internalType:"uint256",name:"endBlock",type:"uint256"},{internalType:"uint256",name:"forVotes",type:"uint256"},{internalType:"uint256",name:"againstVotes",type:"uint256"},{internalType:"uint256",name:"abstainVotes",type:"uint256"},{internalType:"bool",name:"canceled",type:"bool"},{internalType:"bool",name:"executed",type:"bool"}],stateMutability:"view",type:"function",notice:"The official record of all proposals ever proposed"},"quorumVotes()":{inputs:[],name:"quorumVotes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed"},"releaseToken()":{inputs:[],name:"releaseToken",outputs:[{internalType:"contract IHasVotes",name:"",type:"address"}],stateMutability:"view",type:"function",notice:'The address of the "Release" governance token'},"timelock()":{inputs:[],name:"timelock",outputs:[{internalType:"contract TimelockInterface",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The address of the Governance Timelock"},"token()":{inputs:[],name:"token",outputs:[{internalType:"contract IHasVotes",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The address of the governance token"},"votingDelay()":{inputs:[],name:"votingDelay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The delay before voting on a proposal may take place, once proposed, in blocks"},"votingPeriod()":{inputs:[],name:"votingPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The duration of voting on a proposal, in blocks"}}},"contracts/governor/interfaces/PACTEvents.sol:PACTEvents":{source:"contracts/governor/interfaces/PACTEvents.sol",name:"PACTEvents",events:{"NewAdmin(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"NewAdmin",type:"event",notice:"Emitted when pendingAdmin is accepted, which means admin is updated"},"NewImplementation(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldImplementation",type:"address"},{indexed:!1,internalType:"address",name:"newImplementation",type:"address"}],name:"NewImplementation",type:"event",notice:"Emitted when implementation is changed"},"NewPendingAdmin(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldPendingAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newPendingAdmin",type:"address"}],name:"NewPendingAdmin",type:"event",notice:"Emitted when pendingAdmin is changed"},"ProposalCanceled(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"id",type:"uint256"}],name:"ProposalCanceled",type:"event",notice:"An event emitted when a proposal has been canceled"},"ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"address",name:"proposer",type:"address"},{indexed:!1,internalType:"address[]",name:"targets",type:"address[]"},{indexed:!1,internalType:"uint256[]",name:"values",type:"uint256[]"},{indexed:!1,internalType:"string[]",name:"signatures",type:"string[]"},{indexed:!1,internalType:"bytes[]",name:"calldatas",type:"bytes[]"},{indexed:!1,internalType:"uint256",name:"startBlock",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endBlock",type:"uint256"},{indexed:!1,internalType:"string",name:"description",type:"string"}],name:"ProposalCreated",type:"event",notice:"An event emitted when a new proposal is created"},"ProposalExecuted(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"id",type:"uint256"}],name:"ProposalExecuted",type:"event",notice:"An event emitted when a proposal has been executed in the Timelock"},"ProposalQueued(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"eta",type:"uint256"}],name:"ProposalQueued",type:"event",notice:"An event emitted when a proposal has been queued in the Timelock"},"ProposalThresholdSet(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldProposalThreshold",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newProposalThreshold",type:"uint256"}],name:"ProposalThresholdSet",type:"event",notice:"Emitted when proposal threshold is set"},"QuorumVotesSet(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldQuorumVotes",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newQuorumVotes",type:"uint256"}],name:"QuorumVotesSet",type:"event",notice:"An event emitted when the quorum votes is set"},"ReleaseTokenSet(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldReleaseToken",type:"address"},{indexed:!1,internalType:"address",name:"newReleaseToken",type:"address"}],name:"ReleaseTokenSet",type:"event",notice:"Emitted when release token is set"},"TransferERC20(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TransferERC20",type:"event",params:{amount:"Amount of the transaction",to:"Address of the receiver",token:"ERC20 token address"},notice:"Triggered when an amount of an ERC20 has been transferred from this contract to an address"},"VoteCast(address,uint256,uint8,uint256,string)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"voter",type:"address"},{indexed:!1,internalType:"uint256",name:"proposalId",type:"uint256"},{indexed:!1,internalType:"uint8",name:"support",type:"uint8"},{indexed:!1,internalType:"uint256",name:"votes",type:"uint256"},{indexed:!1,internalType:"string",name:"reason",type:"string"}],name:"VoteCast",type:"event",params:{proposalId:"The proposal id which was voted on",reason:"The reason given for the vote by the voter",support:"Support value for the vote. 0=against, 1=for, 2=abstain",voter:"The address which casted a vote",votes:"Number of votes which were cast by the voter"},notice:"An event emitted when a vote has been cast on a proposal"},"VotingDelaySet(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldVotingDelay",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newVotingDelay",type:"uint256"}],name:"VotingDelaySet",type:"event",notice:"An event emitted when the voting delay is set"},"VotingPeriodSet(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldVotingPeriod",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newVotingPeriod",type:"uint256"}],name:"VotingPeriodSet",type:"event",notice:"An event emitted when the voting period is set"}}},"contracts/governor/interfaces/TimelockInterface.sol:TimelockInterface":{source:"contracts/governor/interfaces/TimelockInterface.sol",name:"TimelockInterface",methods:{"GRACE_PERIOD()":{inputs:[],name:"GRACE_PERIOD",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"acceptAdmin()":{inputs:[],name:"acceptAdmin",outputs:[],stateMutability:"nonpayable",type:"function"},"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"cancelTransaction(address,uint256,string,bytes,uint256)":{inputs:[{internalType:"address",name:"_target",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"},{internalType:"string",name:"_signature",type:"string"},{internalType:"bytes",name:"_data",type:"bytes"},{internalType:"uint256",name:"_eta",type:"uint256"}],name:"cancelTransaction",outputs:[],stateMutability:"nonpayable",type:"function"},"delay()":{inputs:[],name:"delay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"executeTransaction(address,uint256,string,bytes,uint256)":{inputs:[{internalType:"address",name:"_target",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"},{internalType:"string",name:"_signature",type:"string"},{internalType:"bytes",name:"_data",type:"bytes"},{internalType:"uint256",name:"_eta",type:"uint256"}],name:"executeTransaction",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"payable",type:"function"},"queueTransaction(address,uint256,string,bytes,uint256)":{inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"string",name:"signature",type:"string"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"queueTransaction",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"nonpayable",type:"function"},"queuedTransactions(bytes32)":{inputs:[{internalType:"bytes32",name:"_hash",type:"bytes32"}],name:"queuedTransactions",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"}}},"contracts/learnAndEarn/LearnAndEarnImplementation.sol:LearnAndEarnImplementation":{source:"contracts/learnAndEarn/LearnAndEarnImplementation.sol",name:"LearnAndEarnImplementation",events:{"LevelFunded(uint256,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"levelId",type:"uint256"},{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"LevelFunded",type:"event",params:{amount:"Amount of the fund",levelId:"Id of the level",sender:"Address of the sender"},notice:"Triggered when a level has been funded"},"LevelStateChanged(uint256,uint8)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"levelId",type:"uint256"},{indexed:!0,internalType:"enum ILearnAndEarn.LevelState",name:"state",type:"uint8"}],name:"LevelStateChanged",type:"event",params:{levelId:"Id of the level",state:"New state of the level"},notice:"Triggered when a level state has been changed"},"LevelUpdated(uint256,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"levelId",type:"uint256"},{indexed:!1,internalType:"address",name:"newTokenAddress",type:"address"}],name:"LevelUpdated",type:"event",params:{levelId:"Id of the level",newTokenAddress:"New token address"},notice:"Triggered when a level has been updated"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Paused(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Paused",type:"event"},"RewardClaimed(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"beneficiary",type:"address"},{indexed:!0,internalType:"uint256",name:"levelId",type:"uint256"}],name:"RewardClaimed",type:"event",params:{beneficiary:"address of the beneficiary to be rewarded",levelId:"the id of the level"},notice:"Triggered when a reward has been claimed"},"Unpaused(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Unpaused",type:"event"}},methods:{"addLevel(uint256,address)":{inputs:[{internalType:"uint256",name:"_levelId",type:"uint256"},{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"}],name:"addLevel",outputs:[],stateMutability:"nonpayable",type:"function",params:{_levelId:"the id of the level",_token:"the token used for reward"},notice:"Adds a new level"},"cancelLevel(uint256,address)":{inputs:[{internalType:"uint256",name:"_levelId",type:"uint256"},{internalType:"address",name:"_fundRecipient",type:"address"}],name:"cancelLevel",outputs:[],stateMutability:"nonpayable",type:"function",params:{_fundRecipient:"the address of the recipient who will receive the funds allocated for this level",_levelId:"id of the level"},notice:"Cancels a level"},"claimRewardForLevels(address,uint256[],uint256[],bytes[])":{inputs:[{internalType:"address",name:"_beneficiary",type:"address"},{internalType:"uint256[]",name:"_levelIds",type:"uint256[]"},{internalType:"uint256[]",name:"_rewardAmounts",type:"uint256[]"},{internalType:"bytes[]",name:"_signatures",type:"bytes[]"}],name:"claimRewardForLevels",outputs:[],stateMutability:"nonpayable",type:"function",params:{_beneficiary:"address of the beneficiary to be rewarded",_levelIds:"the ids of the levels",_rewardAmounts:"the amounts of the tokens to be send to the beneficiary as reward for each level",_signatures:"the signatures from the backend"},notice:"Allows beneficiaries to claim the reward for a list of levels using a signature"},"communityAdmin()":{inputs:[],name:"communityAdmin",outputs:[{internalType:"contract ICommunityAdmin",name:"",type:"address"}],stateMutability:"view",type:"function"},"fundLevel(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_levelId",type:"uint256"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"fundLevel",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"the amount to be funded",_levelId:"the id of the level"},notice:"Funds a level"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function",notice:"Returns the current implementation version"},"initialize(address,address)":{inputs:[{internalType:"address",name:"_signerWalletAddress",type:"address"},{internalType:"contract ICommunityAdmin",name:"_communityAdmin",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",params:{_signerWalletAddress:"Address of the backend wallet"},notice:"Used to initialize a new CommunityAdmin contract"},"levelClaims(uint256,address)":{inputs:[{internalType:"uint256",name:"_levelId",type:"uint256"},{internalType:"address",name:"_beneficiary",type:"address"}],name:"levelClaims",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_beneficiary:"address of the beneficiary",_levelId:"id of the level"},returns:{_0:"reward amount claimed by the beneficiary for a level"},notice:"Returns the reward amount claimed by a beneficiary for a level"},"levelListAt(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"levelListAt",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_index:"index of the level"},returns:{_0:"id of the level"},notice:"Returns the id of a level from levelList"},"levelListLength()":{inputs:[],name:"levelListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",returns:{_0:"uint256 number of levels"},notice:"Returns the number of levels"},"levels(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"levels",outputs:[{internalType:"contract IERC20Upgradeable",name:"token",type:"address"},{internalType:"uint256",name:"balance",type:"uint256"},{internalType:"enum ILearnAndEarn.LevelState",name:"state",type:"uint8"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pause()":{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function",details:"Pauses the contract"},"pauseLevel(uint256)":{inputs:[{internalType:"uint256",name:"_levelId",type:"uint256"}],name:"pauseLevel",outputs:[],stateMutability:"nonpayable",type:"function",params:{_levelId:"id of the level"},notice:"Pauses a level"},"paused()":{inputs:[],name:"paused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns true if the contract is paused, and false otherwise."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"signerWalletAddress()":{inputs:[],name:"signerWalletAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"unpause()":{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function",details:"Unpauses the contract"},"unpauseLevel(uint256)":{inputs:[{internalType:"uint256",name:"_levelId",type:"uint256"}],name:"unpauseLevel",outputs:[],stateMutability:"nonpayable",type:"function",params:{_levelId:"id of the level"},notice:"Unpauses a level"},"updateCommunityAdmin(address)":{inputs:[{internalType:"contract ICommunityAdmin",name:"_newCommunityAdmin",type:"address"}],name:"updateCommunityAdmin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newCommunityAdmin:"address of the new CommunityAdmin contract"},notice:"Updates the CommunityAdmin contract address"},"updateLevel(uint256,address)":{inputs:[{internalType:"uint256",name:"_levelId",type:"uint256"},{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"}],name:"updateLevel",outputs:[],stateMutability:"nonpayable",type:"function",params:{_levelId:"the id of the level",_token:"the token used for reward"},notice:"Updates a level"},"updateSignerWalletAddress(address)":{inputs:[{internalType:"address",name:"_newSignerWalletAddress",type:"address"}],name:"updateSignerWalletAddress",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newSignerWalletAddress:"address of the new backend wallet"},notice:"Updates the address of the backend wallet"}}},"contracts/learnAndEarn/LearnAndEarnProxy.sol:LearnAndEarnProxy":{source:"contracts/learnAndEarn/LearnAndEarnProxy.sol",name:"LearnAndEarnProxy",constructor:{inputs:[{internalType:"address",name:"_logic",type:"address"},{internalType:"address",name:"_proxyAdmin",type:"address"}],stateMutability:"nonpayable",type:"constructor"},fallback:{stateMutability:"payable",type:"fallback"},receive:{stateMutability:"payable",type:"receive"},events:{"AdminChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"previousAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"AdminChanged",type:"event"},"BeaconUpgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"beacon",type:"address"}],name:"BeaconUpgraded",type:"event"},"Upgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"implementation",type:"address"}],name:"Upgraded",type:"event"}},methods:{"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"admin_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"changeAdmin(address)":{inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"changeAdmin",outputs:[],stateMutability:"nonpayable",type:"function",details:"Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."},"implementation()":{inputs:[],name:"implementation",outputs:[{internalType:"address",name:"implementation_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"},"upgradeTo(address)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"}],name:"upgradeTo",outputs:[],stateMutability:"nonpayable",type:"function",details:"Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."},"upgradeToAndCall(address,bytes)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"upgradeToAndCall",outputs:[],stateMutability:"payable",type:"function",details:"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."}}},"contracts/learnAndEarn/interfaces/ILearnAndEarn.sol:ILearnAndEarn":{source:"contracts/learnAndEarn/interfaces/ILearnAndEarn.sol",name:"ILearnAndEarn",methods:{"addLevel(uint256,address)":{inputs:[{internalType:"uint256",name:"levelId",type:"uint256"},{internalType:"contract IERC20Upgradeable",name:"token",type:"address"}],name:"addLevel",outputs:[],stateMutability:"nonpayable",type:"function"},"cancelLevel(uint256,address)":{inputs:[{internalType:"uint256",name:"levelId",type:"uint256"},{internalType:"address",name:"fundRecipient",type:"address"}],name:"cancelLevel",outputs:[],stateMutability:"nonpayable",type:"function"},"claimRewardForLevels(address,uint256[],uint256[],bytes[])":{inputs:[{internalType:"address",name:"beneficiary",type:"address"},{internalType:"uint256[]",name:"levelIds",type:"uint256[]"},{internalType:"uint256[]",name:"rewardAmounts",type:"uint256[]"},{internalType:"bytes[]",name:"signatures",type:"bytes[]"}],name:"claimRewardForLevels",outputs:[],stateMutability:"nonpayable",type:"function"},"communityAdmin()":{inputs:[],name:"communityAdmin",outputs:[{internalType:"contract ICommunityAdmin",name:"",type:"address"}],stateMutability:"view",type:"function"},"fundLevel(uint256,uint256)":{inputs:[{internalType:"uint256",name:"levelId",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"fundLevel",outputs:[],stateMutability:"nonpayable",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"levelClaims(uint256,address)":{inputs:[{internalType:"uint256",name:"levelId",type:"uint256"},{internalType:"address",name:"beneficiary",type:"address"}],name:"levelClaims",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"levelListAt(uint256)":{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"levelListAt",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"levelListLength()":{inputs:[],name:"levelListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"levels(uint256)":{inputs:[{internalType:"uint256",name:"levelId",type:"uint256"}],name:"levels",outputs:[{internalType:"contract IERC20Upgradeable",name:"token",type:"address"},{internalType:"uint256",name:"balance",type:"uint256"},{internalType:"enum ILearnAndEarn.LevelState",name:"state",type:"uint8"}],stateMutability:"view",type:"function"},"pauseLevel(uint256)":{inputs:[{internalType:"uint256",name:"levelId",type:"uint256"}],name:"pauseLevel",outputs:[],stateMutability:"nonpayable",type:"function"},"signerWalletAddress()":{inputs:[],name:"signerWalletAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"unpauseLevel(uint256)":{inputs:[{internalType:"uint256",name:"levelId",type:"uint256"}],name:"unpauseLevel",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityAdmin(address)":{inputs:[{internalType:"contract ICommunityAdmin",name:"communityAdmin",type:"address"}],name:"updateCommunityAdmin",outputs:[],stateMutability:"nonpayable",type:"function"},"updateLevel(uint256,address)":{inputs:[{internalType:"uint256",name:"levelId",type:"uint256"},{internalType:"contract IERC20Upgradeable",name:"token",type:"address"}],name:"updateLevel",outputs:[],stateMutability:"nonpayable",type:"function"},"updateSignerWalletAddress(address)":{inputs:[{internalType:"address",name:"newSignerAddress",type:"address"}],name:"updateSignerWalletAddress",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/learnAndEarn/interfaces/LearnAndEarnStorageV1.sol:LearnAndEarnStorageV1":{source:"contracts/learnAndEarn/interfaces/LearnAndEarnStorageV1.sol",name:"LearnAndEarnStorageV1",title:"Storage for LearnAndEarn",notice:"For future upgrades, do not change LearnAndEarnStorageV1. Create a new contract which implements LearnAndEarnStorageV1 and following the naming convention LearnAndEarnStorageVX.",methods:{"addLevel(uint256,address)":{inputs:[{internalType:"uint256",name:"levelId",type:"uint256"},{internalType:"contract IERC20Upgradeable",name:"token",type:"address"}],name:"addLevel",outputs:[],stateMutability:"nonpayable",type:"function"},"cancelLevel(uint256,address)":{inputs:[{internalType:"uint256",name:"levelId",type:"uint256"},{internalType:"address",name:"fundRecipient",type:"address"}],name:"cancelLevel",outputs:[],stateMutability:"nonpayable",type:"function"},"claimRewardForLevels(address,uint256[],uint256[],bytes[])":{inputs:[{internalType:"address",name:"beneficiary",type:"address"},{internalType:"uint256[]",name:"levelIds",type:"uint256[]"},{internalType:"uint256[]",name:"rewardAmounts",type:"uint256[]"},{internalType:"bytes[]",name:"signatures",type:"bytes[]"}],name:"claimRewardForLevels",outputs:[],stateMutability:"nonpayable",type:"function"},"communityAdmin()":{inputs:[],name:"communityAdmin",outputs:[{internalType:"contract ICommunityAdmin",name:"",type:"address"}],stateMutability:"view",type:"function"},"fundLevel(uint256,uint256)":{inputs:[{internalType:"uint256",name:"levelId",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"fundLevel",outputs:[],stateMutability:"nonpayable",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"levelClaims(uint256,address)":{inputs:[{internalType:"uint256",name:"levelId",type:"uint256"},{internalType:"address",name:"beneficiary",type:"address"}],name:"levelClaims",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"levelListAt(uint256)":{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"levelListAt",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"levelListLength()":{inputs:[],name:"levelListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"levels(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"levels",outputs:[{internalType:"contract IERC20Upgradeable",name:"token",type:"address"},{internalType:"uint256",name:"balance",type:"uint256"},{internalType:"enum ILearnAndEarn.LevelState",name:"state",type:"uint8"}],stateMutability:"view",type:"function"},"pauseLevel(uint256)":{inputs:[{internalType:"uint256",name:"levelId",type:"uint256"}],name:"pauseLevel",outputs:[],stateMutability:"nonpayable",type:"function"},"signerWalletAddress()":{inputs:[],name:"signerWalletAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"unpauseLevel(uint256)":{inputs:[{internalType:"uint256",name:"levelId",type:"uint256"}],name:"unpauseLevel",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityAdmin(address)":{inputs:[{internalType:"contract ICommunityAdmin",name:"communityAdmin",type:"address"}],name:"updateCommunityAdmin",outputs:[],stateMutability:"nonpayable",type:"function"},"updateLevel(uint256,address)":{inputs:[{internalType:"uint256",name:"levelId",type:"uint256"},{internalType:"contract IERC20Upgradeable",name:"token",type:"address"}],name:"updateLevel",outputs:[],stateMutability:"nonpayable",type:"function"},"updateSignerWalletAddress(address)":{inputs:[{internalType:"address",name:"newSignerAddress",type:"address"}],name:"updateSignerWalletAddress",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/microcredit/MicrocreditImplementation.sol:MicrocreditImplementation":{source:"contracts/microcredit/MicrocreditImplementation.sol",name:"MicrocreditImplementation",events:{"LoanAdded(address,address,uint256,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"userAddress",type:"address"},{indexed:!0,internalType:"address",name:"tokenAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"loanId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"period",type:"uint256"},{indexed:!1,internalType:"uint256",name:"dailyInterest",type:"uint256"},{indexed:!1,internalType:"uint256",name:"claimDeadline",type:"uint256"}],name:"LoanAdded",type:"event"},"LoanCanceled(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"userAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"loanId",type:"uint256"}],name:"LoanCanceled",type:"event"},"LoanClaimed(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"userAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"loanId",type:"uint256"}],name:"LoanClaimed",type:"event"},"LoanEdited(address,uint256,uint256,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_userAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"_loanId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_newPeriod",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_newClaimDeadline",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_newDailyInterest",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_newLastComputedDebt",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_newLastComputedDate",type:"uint256"}],name:"LoanEdited",type:"event"},"MaintainerAdded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"maintainerAddress",type:"address"}],name:"MaintainerAdded",type:"event"},"MaintainerRemoved(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"maintainerRemovedAddress",type:"address"}],name:"MaintainerRemoved",type:"event"},"ManagerAdded(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"managerAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"lentAmountLimit",type:"uint256"}],name:"ManagerAdded",type:"event"},"ManagerChanged(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"borrowerAddress",type:"address"},{indexed:!0,internalType:"address",name:"managerAddress",type:"address"}],name:"ManagerChanged",type:"event",params:{borrowerAddress:"The address of the borrower",managerAddress:"The address of the new manager"},notice:"Triggered when a borrower's manager has been changed"},"ManagerRemoved(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"managerAddress",type:"address"}],name:"ManagerRemoved",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Paused(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Paused",type:"event"},"RepaymentAdded(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"userAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"loanId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"repaymentAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"currentDebt",type:"uint256"}],name:"RepaymentAdded",type:"event"},"TokenAdded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenAddress",type:"address"}],name:"TokenAdded",type:"event"},"TokenRemoved(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenAddress",type:"address"}],name:"TokenRemoved",type:"event"},"Unpaused(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Unpaused",type:"event"},"UserAddressChanged(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"oldWalletAddress",type:"address"},{indexed:!0,internalType:"address",name:"newWalletAddress",type:"address"}],name:"UserAddressChanged",type:"event"}},methods:{"DEFAULT_LENDER_ADDRESS()":{inputs:[],name:"DEFAULT_LENDER_ADDRESS",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"REWARD_MULTIPLIER()":{inputs:[],name:"REWARD_MULTIPLIER",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"_getCUSDAmountFromExactTokenInput(address,uint256)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_tokenAmount",type:"uint256"}],name:"_getCUSDAmountFromExactTokenInput",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"_getTokenAmountFromExactCUSDOutput(address,uint256)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_cUSDAmount",type:"uint256"}],name:"_getTokenAmountFromExactCUSDOutput",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"addLoan(address,address,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"address",name:"_userAddress",type:"address"},{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_period",type:"uint256"},{internalType:"uint256",name:"_dailyInterest",type:"uint256"},{internalType:"uint256",name:"_claimDeadline",type:"uint256"}],name:"addLoan",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"amount of the loan",_claimDeadline:"claim deadline of the loan",_dailyInterest:"daily interest of the loan",_period:"period of the loan",_tokenAddress:"address of the token",_userAddress:"address of the user"},notice:"Adds a loan"},"addLoans(address[],address[],uint256[],uint256[],uint256[],uint256[])":{inputs:[{internalType:"address[]",name:"_userAddresses",type:"address[]"},{internalType:"address[]",name:"_tokenAddresses",type:"address[]"},{internalType:"uint256[]",name:"_amounts",type:"uint256[]"},{internalType:"uint256[]",name:"_periods",type:"uint256[]"},{internalType:"uint256[]",name:"_dailyInterests",type:"uint256[]"},{internalType:"uint256[]",name:"_claimDeadlines",type:"uint256[]"}],name:"addLoans",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amounts:"amounts of the loan",_claimDeadlines:"claim deadlines of the loan",_dailyInterests:"daily interests of the loan",_periods:"periods of the loan",_tokenAddresses:"addresses of the tokens",_userAddresses:"addresses of the user"},notice:"Adds multiples loans"},"addMaintainers(address[])":{inputs:[{internalType:"address[]",name:"_maintainerAddresses",type:"address[]"}],name:"addMaintainers",outputs:[],stateMutability:"nonpayable",type:"function",params:{_maintainerAddresses:"addresses of the maintainers"},notice:"Adds maintainers"},"addManagers(address[],uint256[])":{inputs:[{internalType:"address[]",name:"_managerAddresses",type:"address[]"},{internalType:"uint256[]",name:"_lentAmountLimits",type:"uint256[]"}],name:"addManagers",outputs:[],stateMutability:"nonpayable",type:"function",params:{_managerAddresses:"addresses of the managers"},notice:"Adds managers"},"addToken(address,address[],uint24[])":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"address[]",name:"_exchangeTokens",type:"address[]"},{internalType:"uint24[]",name:"_exchangeTokensFees",type:"uint24[]"}],name:"addToken",outputs:[],stateMutability:"nonpayable",type:"function",params:{_tokenAddress:"address of the token to be added"},notice:"Adds a new token"},"cUSD()":{inputs:[],name:"cUSD",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"cancelLoans(address[],uint256[])":{inputs:[{internalType:"address[]",name:"_userAddresses",type:"address[]"},{internalType:"uint256[]",name:"_loansIds",type:"uint256[]"}],name:"cancelLoans",outputs:[],stateMutability:"nonpayable",type:"function",params:{_loansIds:"Loan ids",_userAddresses:"User addresses"},notice:"Cancel a loan"},"changeManager(address[],address)":{inputs:[{internalType:"address[]",name:"_borrowerAddresses",type:"address[]"},{internalType:"address",name:"_managerAddress",type:"address"}],name:"changeManager",outputs:[],stateMutability:"nonpayable",type:"function",details:"This method doesn't change anything on the contract state, it just emits events to be used by the off-chain system",params:{_borrowerAddresses:"address of the borrowers",_managerAddress:"address of the new manager"},notice:"Changes the borrowers manager address"},"changeUserAddress(address,address)":{inputs:[{internalType:"address",name:"_oldWalletAddress",type:"address"},{internalType:"address",name:"_newWalletAddress",type:"address"}],name:"changeUserAddress",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newWalletAddress:"New wallet address",_oldWalletAddress:"Old wallet address"},notice:"Change user address"},"claimLoan(uint256)":{inputs:[{internalType:"uint256",name:"_loanId",type:"uint256"}],name:"claimLoan",outputs:[],stateMutability:"nonpayable",type:"function",params:{_loanId:"Loan ID"},notice:"Claim a loan"},"donationMiner()":{inputs:[],name:"donationMiner",outputs:[{internalType:"contract IDonationMiner",name:"",type:"address"}],stateMutability:"view",type:"function"},"editLoan(address,uint256,uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"address",name:"_userAddress",type:"address"},{internalType:"uint256",name:"_loanId",type:"uint256"},{internalType:"uint256",name:"_currentLastComputedDate",type:"uint256"},{internalType:"uint256",name:"_newPeriod",type:"uint256"},{internalType:"uint256",name:"_newDailyInterest",type:"uint256"},{internalType:"uint256",name:"_newLastComputedDebt",type:"uint256"},{internalType:"uint256",name:"_newLastComputedDate",type:"uint256"}],name:"editLoan",outputs:[],stateMutability:"nonpayable",type:"function",params:{_currentLastComputedDate:"used as a control mechanism - if this value doesn't match the loan current lastComputedDate, it means that the user has made a repayment in the mean time so this call is not valid any more"},notice:"Used by owner to fix when an active loan has wrong params"},"editLoanClaimDeadlines(address[],uint256[],uint256[])":{inputs:[{internalType:"address[]",name:"_userAddresses",type:"address[]"},{internalType:"uint256[]",name:"_loanIds",type:"uint256[]"},{internalType:"uint256[]",name:"_newClaimDeadlines",type:"uint256[]"}],name:"editLoanClaimDeadlines",outputs:[],stateMutability:"nonpayable",type:"function",params:{_loanIds:"id of the loans",_newClaimDeadlines:"new claim deadlines of the loan",_userAddresses:"addresses of the user"},notice:"Edits multiples loans claim deadline"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function",notice:"Returns the current implementation version"},"inactivateToken(address)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"}],name:"inactivateToken",outputs:[],stateMutability:"nonpayable",type:"function",params:{_tokenAddress:"address of the token to be added"},notice:"Adds a new token"},"initV2(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_from",type:"uint256"},{internalType:"uint256",name:"_to",type:"uint256"}],name:"initV2",outputs:[],stateMutability:"nonpayable",type:"function"},"initialize(address,address)":{inputs:[{internalType:"address",name:"_cUSDAddress",type:"address"},{internalType:"address",name:"_revenueAddress",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",params:{_cUSDAddress:"The address of the cUSD token",_revenueAddress:"The address that collects all the interest"},notice:"Used to initialize the Microcredit contract"},"maintainerListAt(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"maintainerListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",params:{_index:"index value"},returns:{_0:"address of the maintainer"},notice:"Returns an address from the maintainerList"},"maintainerListLength()":{inputs:[],name:"maintainerListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Returns the length of the maintainerList"},"managerListAt(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"managerListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",params:{_index:"index value"},returns:{_0:"address of the manager"},notice:"Returns an address from the managerList"},"managerListLength()":{inputs:[],name:"managerListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Returns the length of the managerList"},"managers(address)":{inputs:[{internalType:"address",name:"_managerAddress",type:"address"}],name:"managers",outputs:[{components:[{internalType:"uint256",name:"lentAmountLimit",type:"uint256"},{internalType:"uint256",name:"lentAmount",type:"uint256"}],internalType:"struct IMicrocredit.Manager",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"microcreditManager()":{inputs:[],name:"microcreditManager",outputs:[{internalType:"contract IMicrocreditManager",name:"",type:"address"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"paused()":{inputs:[],name:"paused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns true if the contract is paused, and false otherwise."},"removeMaintainers(address[])":{inputs:[{internalType:"address[]",name:"_maintainerAddresses",type:"address[]"}],name:"removeMaintainers",outputs:[],stateMutability:"nonpayable",type:"function",params:{_maintainerAddresses:"addresses of the maintainers"},notice:"Removes maintainers"},"removeManagers(address[])":{inputs:[{internalType:"address[]",name:"_managerAddresses",type:"address[]"}],name:"removeManagers",outputs:[],stateMutability:"nonpayable",type:"function",params:{_managerAddresses:"addresses of the managers"},notice:"Removes managers"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"repayLoan(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_loanId",type:"uint256"},{internalType:"uint256",name:"_tokenRepaymentAmount",type:"uint256"}],name:"repayLoan",outputs:[],stateMutability:"nonpayable",type:"function",params:{_loanId:"Loan ID",_tokenRepaymentAmount:"Repayment amount"},notice:"Repay a loan"},"revenueAddress()":{inputs:[],name:"revenueAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"setManagers(address[],uint256[],address[])":{inputs:[{internalType:"address[]",name:"_userAddresses",type:"address[]"},{internalType:"uint256[]",name:"_loanIds",type:"uint256[]"},{internalType:"address[]",name:"_managersAddresses",type:"address[]"}],name:"setManagers",outputs:[],stateMutability:"nonpayable",type:"function"},"tokenListAt(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"tokenListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",params:{_index:"index value"},returns:{_0:"address of the token"},notice:"Returns an address from the tokenList"},"tokenListLength()":{inputs:[],name:"tokenListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Returns the length of the tokenList"},"tokens(address)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"}],name:"tokens",outputs:[{internalType:"bool",name:"active",type:"bool"}],stateMutability:"view",type:"function"},"transferERC20(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferERC20",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"amount of the transaction",_to:"address of the receiver",_token:"address of the ERC20 token"},notice:"Transfers an amount of an ERC20 from this contract to an address"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"uniswapQuoter()":{inputs:[],name:"uniswapQuoter",outputs:[{internalType:"contract IQuoter",name:"",type:"address"}],stateMutability:"view",type:"function"},"uniswapRouter()":{inputs:[],name:"uniswapRouter",outputs:[{internalType:"contract IUniswapRouter02",name:"",type:"address"}],stateMutability:"view",type:"function"},"updateDonationMiner(address)":{inputs:[{internalType:"contract IDonationMiner",name:"_newDonationMiner",type:"address"}],name:"updateDonationMiner",outputs:[],stateMutability:"nonpayable",type:"function"},"updateMicrocreditManager(address)":{inputs:[{internalType:"contract IMicrocreditManager",name:"_newMicrocreditManager",type:"address"}],name:"updateMicrocreditManager",outputs:[],stateMutability:"nonpayable",type:"function"},"updateRevenueAddress(address)":{inputs:[{internalType:"address",name:"_newRevenueAddress",type:"address"}],name:"updateRevenueAddress",outputs:[],stateMutability:"nonpayable",type:"function"},"updateUniswapQuoter(address)":{inputs:[{internalType:"contract IQuoter",name:"_newUniswapQuoter",type:"address"}],name:"updateUniswapQuoter",outputs:[],stateMutability:"nonpayable",type:"function"},"updateUniswapRouter(address)":{inputs:[{internalType:"contract IUniswapRouter02",name:"_newUniswapRouter",type:"address"}],name:"updateUniswapRouter",outputs:[],stateMutability:"nonpayable",type:"function"},"userLoanRepayments(address,uint256,uint256)":{inputs:[{internalType:"address",name:"_userAddress",type:"address"},{internalType:"uint256",name:"_loanId",type:"uint256"},{internalType:"uint256",name:"_repaymentId",type:"uint256"}],name:"userLoanRepayments",outputs:[{components:[{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"tokenAmount",type:"uint256"}],internalType:"struct IMicrocredit.Repayment",name:"repayment",type:"tuple"}],stateMutability:"view",type:"function"},"userLoans(address,uint256)":{inputs:[{internalType:"address",name:"_userAddress",type:"address"},{internalType:"uint256",name:"_loanId",type:"uint256"}],name:"userLoans",outputs:[{components:[{internalType:"uint256",name:"amountBorrowed",type:"uint256"},{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"dailyInterest",type:"uint256"},{internalType:"uint256",name:"claimDeadline",type:"uint256"},{internalType:"uint256",name:"startDate",type:"uint256"},{internalType:"uint256",name:"currentDebt",type:"uint256"},{internalType:"uint256",name:"lastComputedDebt",type:"uint256"},{internalType:"uint256",name:"amountRepayed",type:"uint256"},{internalType:"uint256",name:"repaymentsLength",type:"uint256"},{internalType:"uint256",name:"lastComputedDate",type:"uint256"},{internalType:"address",name:"managerAddress",type:"address"},{internalType:"address",name:"tokenAddress",type:"address"},{internalType:"uint256",name:"tokenAmountBorrowed",type:"uint256"},{internalType:"uint256",name:"tokenAmountRepayed",type:"uint256"},{internalType:"uint256",name:"tokenLastComputedDebt",type:"uint256"},{internalType:"uint256",name:"tokenCurrentDebt",type:"uint256"}],internalType:"struct IMicrocredit.UserLoanResponse",name:"userLoan",type:"tuple"}],stateMutability:"nonpayable",type:"function"},"walletListAt(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"walletListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",params:{_index:"index value"},returns:{_0:"address of the user"},notice:"Returns an address from the walletList"},"walletListLength()":{inputs:[],name:"walletListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Returns the length of the walletList"},"walletMetadata(address)":{inputs:[{internalType:"address",name:"_userAddress",type:"address"}],name:"walletMetadata",outputs:[{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"address",name:"movedTo",type:"address"},{internalType:"uint256",name:"loansLength",type:"uint256"}],stateMutability:"view",type:"function",params:{_userAddress:"address of the user"},returns:{loansLength:"          the number of the user's loans",movedTo:"              the number of the user's loans",userId:"               the userId"},notice:"Returns the information of a user"}}},"contracts/microcredit/MicrocreditProxy.sol:MicrocreditProxy":{source:"contracts/microcredit/MicrocreditProxy.sol",name:"MicrocreditProxy",constructor:{inputs:[{internalType:"address",name:"_logic",type:"address"},{internalType:"address",name:"_proxyAdmin",type:"address"}],stateMutability:"nonpayable",type:"constructor"},fallback:{stateMutability:"payable",type:"fallback"},receive:{stateMutability:"payable",type:"receive"},events:{"AdminChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"previousAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"AdminChanged",type:"event"},"BeaconUpgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"beacon",type:"address"}],name:"BeaconUpgraded",type:"event"},"Upgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"implementation",type:"address"}],name:"Upgraded",type:"event"}},methods:{"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"admin_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"changeAdmin(address)":{inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"changeAdmin",outputs:[],stateMutability:"nonpayable",type:"function",details:"Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."},"implementation()":{inputs:[],name:"implementation",outputs:[{internalType:"address",name:"implementation_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"},"upgradeTo(address)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"}],name:"upgradeTo",outputs:[],stateMutability:"nonpayable",type:"function",details:"Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."},"upgradeToAndCall(address,bytes)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"upgradeToAndCall",outputs:[],stateMutability:"payable",type:"function",details:"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."}}},"contracts/microcredit/MicrocreditRevenueImplementation.sol:MicrocreditRevenueImplementation":{source:"contracts/microcredit/MicrocreditRevenueImplementation.sol",name:"MicrocreditRevenueImplementation",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function",notice:"Returns the current implementation version"},"initialize()":{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Used to initialize the MicrocreditRevenue contract"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferERC20(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferERC20",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"amount of the transaction",_to:"address of the receiver",_token:"address of the ERC20 token"},notice:"Transfers an amount of an ERC20 from this contract to an address"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/microcredit/MicrocreditRevenueProxy.sol:MicrocreditRevenueProxy":{source:"contracts/microcredit/MicrocreditRevenueProxy.sol",name:"MicrocreditRevenueProxy",constructor:{inputs:[{internalType:"address",name:"_logic",type:"address"},{internalType:"address",name:"_proxyAdmin",type:"address"}],stateMutability:"nonpayable",type:"constructor"},fallback:{stateMutability:"payable",type:"fallback"},receive:{stateMutability:"payable",type:"receive"},events:{"AdminChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"previousAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"AdminChanged",type:"event"},"BeaconUpgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"beacon",type:"address"}],name:"BeaconUpgraded",type:"event"},"Upgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"implementation",type:"address"}],name:"Upgraded",type:"event"}},methods:{"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"admin_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"changeAdmin(address)":{inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"changeAdmin",outputs:[],stateMutability:"nonpayable",type:"function",details:"Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."},"implementation()":{inputs:[],name:"implementation",outputs:[{internalType:"address",name:"implementation_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"},"upgradeTo(address)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"}],name:"upgradeTo",outputs:[],stateMutability:"nonpayable",type:"function",details:"Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."},"upgradeToAndCall(address,bytes)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"upgradeToAndCall",outputs:[],stateMutability:"payable",type:"function",details:"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."}}},"contracts/microcredit/interfaces/IMicrocredit.sol:IMicrocredit":{source:"contracts/microcredit/interfaces/IMicrocredit.sol",name:"IMicrocredit",methods:{"addLoan(address,address,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"address",name:"userAddress",type:"address"},{internalType:"address",name:"tokenAddress",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"dailyInterest",type:"uint256"},{internalType:"uint256",name:"claimDeadline",type:"uint256"}],name:"addLoan",outputs:[],stateMutability:"nonpayable",type:"function"},"addLoans(address[],address[],uint256[],uint256[],uint256[],uint256[])":{inputs:[{internalType:"address[]",name:"userAddresses",type:"address[]"},{internalType:"address[]",name:"tokenAddresses",type:"address[]"},{internalType:"uint256[]",name:"amounts",type:"uint256[]"},{internalType:"uint256[]",name:"periods",type:"uint256[]"},{internalType:"uint256[]",name:"dailyInterests",type:"uint256[]"},{internalType:"uint256[]",name:"claimDeadlines",type:"uint256[]"}],name:"addLoans",outputs:[],stateMutability:"nonpayable",type:"function"},"addMaintainers(address[])":{inputs:[{internalType:"address[]",name:"_maintainerAddresses",type:"address[]"}],name:"addMaintainers",outputs:[],stateMutability:"nonpayable",type:"function"},"addManagers(address[],uint256[])":{inputs:[{internalType:"address[]",name:"managerAddresses",type:"address[]"},{internalType:"uint256[]",name:"lentAmountLimits",type:"uint256[]"}],name:"addManagers",outputs:[],stateMutability:"nonpayable",type:"function"},"addToken(address,address[],uint24[])":{inputs:[{internalType:"address",name:"tokenAddress",type:"address"},{internalType:"address[]",name:"exchangeTokens",type:"address[]"},{internalType:"uint24[]",name:"exchangeTokensFees",type:"uint24[]"}],name:"addToken",outputs:[],stateMutability:"nonpayable",type:"function"},"cUSD()":{inputs:[],name:"cUSD",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"cancelLoans(address[],uint256[])":{inputs:[{internalType:"address[]",name:"userAddresses",type:"address[]"},{internalType:"uint256[]",name:"loansIds",type:"uint256[]"}],name:"cancelLoans",outputs:[],stateMutability:"nonpayable",type:"function"},"changeManager(address[],address)":{inputs:[{internalType:"address[]",name:"borrowerAddresses",type:"address[]"},{internalType:"address",name:"managerAddress",type:"address"}],name:"changeManager",outputs:[],stateMutability:"nonpayable",type:"function"},"changeUserAddress(address,address)":{inputs:[{internalType:"address",name:"oldWalletAddress",type:"address"},{internalType:"address",name:"newWalletAddress",type:"address"}],name:"changeUserAddress",outputs:[],stateMutability:"nonpayable",type:"function"},"claimLoan(uint256)":{inputs:[{internalType:"uint256",name:"loanId",type:"uint256"}],name:"claimLoan",outputs:[],stateMutability:"nonpayable",type:"function"},"donationMiner()":{inputs:[],name:"donationMiner",outputs:[{internalType:"contract IDonationMiner",name:"",type:"address"}],stateMutability:"view",type:"function"},"editLoanClaimDeadlines(address[],uint256[],uint256[])":{inputs:[{internalType:"address[]",name:"userAddresses",type:"address[]"},{internalType:"uint256[]",name:"loanIds",type:"uint256[]"},{internalType:"uint256[]",name:"newClaimDeadlines",type:"uint256[]"}],name:"editLoanClaimDeadlines",outputs:[],stateMutability:"nonpayable",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"inactivateToken(address)":{inputs:[{internalType:"address",name:"tokenAddress",type:"address"}],name:"inactivateToken",outputs:[],stateMutability:"nonpayable",type:"function"},"maintainerListAt(uint256)":{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"maintainerListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"maintainerListLength()":{inputs:[],name:"maintainerListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"managerListAt(uint256)":{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"managerListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"managerListLength()":{inputs:[],name:"managerListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"managers(address)":{inputs:[{internalType:"address",name:"managerAddress",type:"address"}],name:"managers",outputs:[{components:[{internalType:"uint256",name:"lentAmountLimit",type:"uint256"},{internalType:"uint256",name:"lentAmount",type:"uint256"}],internalType:"struct IMicrocredit.Manager",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"microcreditManager()":{inputs:[],name:"microcreditManager",outputs:[{internalType:"contract IMicrocreditManager",name:"",type:"address"}],stateMutability:"view",type:"function"},"removeMaintainers(address[])":{inputs:[{internalType:"address[]",name:"_maintainerAddresses",type:"address[]"}],name:"removeMaintainers",outputs:[],stateMutability:"nonpayable",type:"function"},"removeManagers(address[])":{inputs:[{internalType:"address[]",name:"managerAddresses",type:"address[]"}],name:"removeManagers",outputs:[],stateMutability:"nonpayable",type:"function"},"repayLoan(uint256,uint256)":{inputs:[{internalType:"uint256",name:"loanId",type:"uint256"},{internalType:"uint256",name:"repaymentAmount",type:"uint256"}],name:"repayLoan",outputs:[],stateMutability:"nonpayable",type:"function"},"revenueAddress()":{inputs:[],name:"revenueAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"tokenListAt(uint256)":{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"tokenListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"tokenListLength()":{inputs:[],name:"tokenListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"tokens(address)":{inputs:[{internalType:"address",name:"tokenAddress",type:"address"}],name:"tokens",outputs:[{internalType:"bool",name:"active",type:"bool"}],stateMutability:"view",type:"function"},"transferERC20(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"token",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferERC20",outputs:[],stateMutability:"nonpayable",type:"function"},"uniswapQuoter()":{inputs:[],name:"uniswapQuoter",outputs:[{internalType:"contract IQuoter",name:"",type:"address"}],stateMutability:"view",type:"function"},"uniswapRouter()":{inputs:[],name:"uniswapRouter",outputs:[{internalType:"contract IUniswapRouter02",name:"",type:"address"}],stateMutability:"view",type:"function"},"updateDonationMiner(address)":{inputs:[{internalType:"contract IDonationMiner",name:"newDonationMiner",type:"address"}],name:"updateDonationMiner",outputs:[],stateMutability:"nonpayable",type:"function"},"updateMicrocreditManager(address)":{inputs:[{internalType:"contract IMicrocreditManager",name:"_uniswapQuoter",type:"address"}],name:"updateMicrocreditManager",outputs:[],stateMutability:"nonpayable",type:"function"},"updateRevenueAddress(address)":{inputs:[{internalType:"address",name:"newRevenueAddress",type:"address"}],name:"updateRevenueAddress",outputs:[],stateMutability:"nonpayable",type:"function"},"updateUniswapQuoter(address)":{inputs:[{internalType:"contract IQuoter",name:"_uniswapQuoter",type:"address"}],name:"updateUniswapQuoter",outputs:[],stateMutability:"nonpayable",type:"function"},"updateUniswapRouter(address)":{inputs:[{internalType:"contract IUniswapRouter02",name:"_uniswapRouter",type:"address"}],name:"updateUniswapRouter",outputs:[],stateMutability:"nonpayable",type:"function"},"userLoanRepayments(address,uint256,uint256)":{inputs:[{internalType:"address",name:"userAddress",type:"address"},{internalType:"uint256",name:"loanId",type:"uint256"},{internalType:"uint256",name:"repaymentId",type:"uint256"}],name:"userLoanRepayments",outputs:[{components:[{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"tokenAmount",type:"uint256"}],internalType:"struct IMicrocredit.Repayment",name:"repayment",type:"tuple"}],stateMutability:"view",type:"function"},"userLoans(address,uint256)":{inputs:[{internalType:"address",name:"userAddress",type:"address"},{internalType:"uint256",name:"loanId",type:"uint256"}],name:"userLoans",outputs:[{components:[{internalType:"uint256",name:"amountBorrowed",type:"uint256"},{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"dailyInterest",type:"uint256"},{internalType:"uint256",name:"claimDeadline",type:"uint256"},{internalType:"uint256",name:"startDate",type:"uint256"},{internalType:"uint256",name:"currentDebt",type:"uint256"},{internalType:"uint256",name:"lastComputedDebt",type:"uint256"},{internalType:"uint256",name:"amountRepayed",type:"uint256"},{internalType:"uint256",name:"repaymentsLength",type:"uint256"},{internalType:"uint256",name:"lastComputedDate",type:"uint256"},{internalType:"address",name:"managerAddress",type:"address"},{internalType:"address",name:"tokenAddress",type:"address"},{internalType:"uint256",name:"tokenAmountBorrowed",type:"uint256"},{internalType:"uint256",name:"tokenAmountRepayed",type:"uint256"},{internalType:"uint256",name:"tokenLastComputedDebt",type:"uint256"},{internalType:"uint256",name:"tokenCurrentDebt",type:"uint256"}],internalType:"struct IMicrocredit.UserLoanResponse",name:"userLoan",type:"tuple"}],stateMutability:"nonpayable",type:"function"},"walletListAt(uint256)":{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"walletListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"walletListLength()":{inputs:[],name:"walletListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"walletMetadata(address)":{inputs:[{internalType:"address",name:"userAddress",type:"address"}],name:"walletMetadata",outputs:[{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"address",name:"movedTo",type:"address"},{internalType:"uint256",name:"loansLength",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/microcredit/interfaces/IMicrocreditOld.sol:IMicrocreditOld":{source:"contracts/microcredit/interfaces/IMicrocreditOld.sol",name:"IMicrocreditOld",methods:{"managerListAt(uint256)":{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"managerListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"managerListLength()":{inputs:[],name:"managerListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"managers(address)":{inputs:[{internalType:"address",name:"managerAddress",type:"address"}],name:"managers",outputs:[{internalType:"uint256",name:"currentLentAmountLimit",type:"uint256"},{internalType:"uint256",name:"currentLentAmount",type:"uint256"}],stateMutability:"view",type:"function"},"userLoanRepayments(address,uint256,uint256)":{inputs:[{internalType:"address",name:"userAddress",type:"address"},{internalType:"uint256",name:"loanId",type:"uint256"},{internalType:"uint256",name:"repaymentId",type:"uint256"}],name:"userLoanRepayments",outputs:[{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"userLoans(address,uint256)":{inputs:[{internalType:"address",name:"userAddress",type:"address"},{internalType:"uint256",name:"loanId",type:"uint256"}],name:"userLoans",outputs:[{internalType:"uint256",name:"amountBorrowed",type:"uint256"},{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"dailyInterest",type:"uint256"},{internalType:"uint256",name:"claimDeadline",type:"uint256"},{internalType:"uint256",name:"startDate",type:"uint256"},{internalType:"uint256",name:"lastComputedDebt",type:"uint256"},{internalType:"uint256",name:"currentDebt",type:"uint256"},{internalType:"uint256",name:"amountRepayed",type:"uint256"},{internalType:"uint256",name:"repaymentsLength",type:"uint256"},{internalType:"uint256",name:"lastComputedDate",type:"uint256"}],stateMutability:"view",type:"function"},"walletListAt(uint256)":{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"walletListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"walletListLength()":{inputs:[],name:"walletListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"walletMetadata(address)":{inputs:[{internalType:"address",name:"userAddress",type:"address"}],name:"walletMetadata",outputs:[{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"address",name:"movedTo",type:"address"},{internalType:"uint256",name:"loansLength",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/microcredit/interfaces/IMicrocreditRevenue.sol:IMicrocreditRevenue":{source:"contracts/microcredit/interfaces/IMicrocreditRevenue.sol",name:"IMicrocreditRevenue",methods:{"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"transferERC20(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferERC20",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/microcredit/interfaces/MicrocreditRevenueStorageV1.sol:MicrocreditRevenueStorageV1":{source:"contracts/microcredit/interfaces/MicrocreditRevenueStorageV1.sol",name:"MicrocreditRevenueStorageV1",title:"Storage for MicrocreditRevenue",notice:"For future upgrades, do not change MicrocreditRevenueStorageV1. Create a new contract which implements MicrocreditRevenueStorageV1 and following the naming convention MicrocreditRevenueStorageVx.",methods:{"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"transferERC20(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferERC20",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/microcredit/interfaces/MicrocreditStorageV1.sol:MicrocreditStorageV1":{source:"contracts/microcredit/interfaces/MicrocreditStorageV1.sol",name:"MicrocreditStorageV1",title:"Storage for Microcredit",notice:"For future upgrades, do not change MicrocreditStorageV1. Create a new contract which implements MicrocreditStorageV1 and following the naming convention MicrocreditStorageVx.",methods:{"addLoan(address,address,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"address",name:"userAddress",type:"address"},{internalType:"address",name:"tokenAddress",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"dailyInterest",type:"uint256"},{internalType:"uint256",name:"claimDeadline",type:"uint256"}],name:"addLoan",outputs:[],stateMutability:"nonpayable",type:"function"},"addLoans(address[],address[],uint256[],uint256[],uint256[],uint256[])":{inputs:[{internalType:"address[]",name:"userAddresses",type:"address[]"},{internalType:"address[]",name:"tokenAddresses",type:"address[]"},{internalType:"uint256[]",name:"amounts",type:"uint256[]"},{internalType:"uint256[]",name:"periods",type:"uint256[]"},{internalType:"uint256[]",name:"dailyInterests",type:"uint256[]"},{internalType:"uint256[]",name:"claimDeadlines",type:"uint256[]"}],name:"addLoans",outputs:[],stateMutability:"nonpayable",type:"function"},"addMaintainers(address[])":{inputs:[{internalType:"address[]",name:"_maintainerAddresses",type:"address[]"}],name:"addMaintainers",outputs:[],stateMutability:"nonpayable",type:"function"},"addManagers(address[],uint256[])":{inputs:[{internalType:"address[]",name:"managerAddresses",type:"address[]"},{internalType:"uint256[]",name:"lentAmountLimits",type:"uint256[]"}],name:"addManagers",outputs:[],stateMutability:"nonpayable",type:"function"},"addToken(address,address[],uint24[])":{inputs:[{internalType:"address",name:"tokenAddress",type:"address"},{internalType:"address[]",name:"exchangeTokens",type:"address[]"},{internalType:"uint24[]",name:"exchangeTokensFees",type:"uint24[]"}],name:"addToken",outputs:[],stateMutability:"nonpayable",type:"function"},"cUSD()":{inputs:[],name:"cUSD",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"cancelLoans(address[],uint256[])":{inputs:[{internalType:"address[]",name:"userAddresses",type:"address[]"},{internalType:"uint256[]",name:"loansIds",type:"uint256[]"}],name:"cancelLoans",outputs:[],stateMutability:"nonpayable",type:"function"},"changeManager(address[],address)":{inputs:[{internalType:"address[]",name:"borrowerAddresses",type:"address[]"},{internalType:"address",name:"managerAddress",type:"address"}],name:"changeManager",outputs:[],stateMutability:"nonpayable",type:"function"},"changeUserAddress(address,address)":{inputs:[{internalType:"address",name:"oldWalletAddress",type:"address"},{internalType:"address",name:"newWalletAddress",type:"address"}],name:"changeUserAddress",outputs:[],stateMutability:"nonpayable",type:"function"},"claimLoan(uint256)":{inputs:[{internalType:"uint256",name:"loanId",type:"uint256"}],name:"claimLoan",outputs:[],stateMutability:"nonpayable",type:"function"},"donationMiner()":{inputs:[],name:"donationMiner",outputs:[{internalType:"contract IDonationMiner",name:"",type:"address"}],stateMutability:"view",type:"function"},"editLoanClaimDeadlines(address[],uint256[],uint256[])":{inputs:[{internalType:"address[]",name:"userAddresses",type:"address[]"},{internalType:"uint256[]",name:"loanIds",type:"uint256[]"},{internalType:"uint256[]",name:"newClaimDeadlines",type:"uint256[]"}],name:"editLoanClaimDeadlines",outputs:[],stateMutability:"nonpayable",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"inactivateToken(address)":{inputs:[{internalType:"address",name:"tokenAddress",type:"address"}],name:"inactivateToken",outputs:[],stateMutability:"nonpayable",type:"function"},"maintainerListAt(uint256)":{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"maintainerListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"maintainerListLength()":{inputs:[],name:"maintainerListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"managerListAt(uint256)":{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"managerListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"managerListLength()":{inputs:[],name:"managerListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"managers(address)":{inputs:[{internalType:"address",name:"managerAddress",type:"address"}],name:"managers",outputs:[{components:[{internalType:"uint256",name:"lentAmountLimit",type:"uint256"},{internalType:"uint256",name:"lentAmount",type:"uint256"}],internalType:"struct IMicrocredit.Manager",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"microcreditManager()":{inputs:[],name:"microcreditManager",outputs:[{internalType:"contract IMicrocreditManager",name:"",type:"address"}],stateMutability:"view",type:"function"},"removeMaintainers(address[])":{inputs:[{internalType:"address[]",name:"_maintainerAddresses",type:"address[]"}],name:"removeMaintainers",outputs:[],stateMutability:"nonpayable",type:"function"},"removeManagers(address[])":{inputs:[{internalType:"address[]",name:"managerAddresses",type:"address[]"}],name:"removeManagers",outputs:[],stateMutability:"nonpayable",type:"function"},"repayLoan(uint256,uint256)":{inputs:[{internalType:"uint256",name:"loanId",type:"uint256"},{internalType:"uint256",name:"repaymentAmount",type:"uint256"}],name:"repayLoan",outputs:[],stateMutability:"nonpayable",type:"function"},"revenueAddress()":{inputs:[],name:"revenueAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"tokenListAt(uint256)":{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"tokenListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"tokenListLength()":{inputs:[],name:"tokenListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"tokens(address)":{inputs:[{internalType:"address",name:"tokenAddress",type:"address"}],name:"tokens",outputs:[{internalType:"bool",name:"active",type:"bool"}],stateMutability:"view",type:"function"},"transferERC20(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"token",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferERC20",outputs:[],stateMutability:"nonpayable",type:"function"},"uniswapQuoter()":{inputs:[],name:"uniswapQuoter",outputs:[{internalType:"contract IQuoter",name:"",type:"address"}],stateMutability:"view",type:"function"},"uniswapRouter()":{inputs:[],name:"uniswapRouter",outputs:[{internalType:"contract IUniswapRouter02",name:"",type:"address"}],stateMutability:"view",type:"function"},"updateDonationMiner(address)":{inputs:[{internalType:"contract IDonationMiner",name:"newDonationMiner",type:"address"}],name:"updateDonationMiner",outputs:[],stateMutability:"nonpayable",type:"function"},"updateMicrocreditManager(address)":{inputs:[{internalType:"contract IMicrocreditManager",name:"_uniswapQuoter",type:"address"}],name:"updateMicrocreditManager",outputs:[],stateMutability:"nonpayable",type:"function"},"updateRevenueAddress(address)":{inputs:[{internalType:"address",name:"newRevenueAddress",type:"address"}],name:"updateRevenueAddress",outputs:[],stateMutability:"nonpayable",type:"function"},"updateUniswapQuoter(address)":{inputs:[{internalType:"contract IQuoter",name:"_uniswapQuoter",type:"address"}],name:"updateUniswapQuoter",outputs:[],stateMutability:"nonpayable",type:"function"},"updateUniswapRouter(address)":{inputs:[{internalType:"contract IUniswapRouter02",name:"_uniswapRouter",type:"address"}],name:"updateUniswapRouter",outputs:[],stateMutability:"nonpayable",type:"function"},"userLoanRepayments(address,uint256,uint256)":{inputs:[{internalType:"address",name:"userAddress",type:"address"},{internalType:"uint256",name:"loanId",type:"uint256"},{internalType:"uint256",name:"repaymentId",type:"uint256"}],name:"userLoanRepayments",outputs:[{components:[{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"tokenAmount",type:"uint256"}],internalType:"struct IMicrocredit.Repayment",name:"repayment",type:"tuple"}],stateMutability:"view",type:"function"},"userLoans(address,uint256)":{inputs:[{internalType:"address",name:"userAddress",type:"address"},{internalType:"uint256",name:"loanId",type:"uint256"}],name:"userLoans",outputs:[{components:[{internalType:"uint256",name:"amountBorrowed",type:"uint256"},{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"dailyInterest",type:"uint256"},{internalType:"uint256",name:"claimDeadline",type:"uint256"},{internalType:"uint256",name:"startDate",type:"uint256"},{internalType:"uint256",name:"currentDebt",type:"uint256"},{internalType:"uint256",name:"lastComputedDebt",type:"uint256"},{internalType:"uint256",name:"amountRepayed",type:"uint256"},{internalType:"uint256",name:"repaymentsLength",type:"uint256"},{internalType:"uint256",name:"lastComputedDate",type:"uint256"},{internalType:"address",name:"managerAddress",type:"address"},{internalType:"address",name:"tokenAddress",type:"address"},{internalType:"uint256",name:"tokenAmountBorrowed",type:"uint256"},{internalType:"uint256",name:"tokenAmountRepayed",type:"uint256"},{internalType:"uint256",name:"tokenLastComputedDebt",type:"uint256"},{internalType:"uint256",name:"tokenCurrentDebt",type:"uint256"}],internalType:"struct IMicrocredit.UserLoanResponse",name:"userLoan",type:"tuple"}],stateMutability:"nonpayable",type:"function"},"walletListAt(uint256)":{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"walletListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"walletListLength()":{inputs:[],name:"walletListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"walletMetadata(address)":{inputs:[{internalType:"address",name:"userAddress",type:"address"}],name:"walletMetadata",outputs:[{internalType:"uint256",name:"userId",type:"uint256"},{internalType:"address",name:"movedTo",type:"address"},{internalType:"uint256",name:"loansLength",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/microcreditManager/MicrocreditManagerProxy.sol:MicrocreditManagerProxy":{source:"contracts/microcreditManager/MicrocreditManagerProxy.sol",name:"MicrocreditManagerProxy",constructor:{inputs:[{internalType:"address",name:"_logic",type:"address"},{internalType:"address",name:"_proxyAdmin",type:"address"}],stateMutability:"nonpayable",type:"constructor"},fallback:{stateMutability:"payable",type:"fallback"},receive:{stateMutability:"payable",type:"receive"},events:{"AdminChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"previousAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"AdminChanged",type:"event"},"BeaconUpgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"beacon",type:"address"}],name:"BeaconUpgraded",type:"event"},"Upgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"implementation",type:"address"}],name:"Upgraded",type:"event"}},methods:{"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"admin_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"changeAdmin(address)":{inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"changeAdmin",outputs:[],stateMutability:"nonpayable",type:"function",details:"Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."},"implementation()":{inputs:[],name:"implementation",outputs:[{internalType:"address",name:"implementation_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"},"upgradeTo(address)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"}],name:"upgradeTo",outputs:[],stateMutability:"nonpayable",type:"function",details:"Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."},"upgradeToAndCall(address,bytes)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"upgradeToAndCall",outputs:[],stateMutability:"payable",type:"function",details:"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."}}},"contracts/microcreditManager/MicrocreditMangerImplementation.sol:MicrocreditManagerImplementation":{source:"contracts/microcreditManager/MicrocreditMangerImplementation.sol",name:"MicrocreditManagerImplementation",events:{"Claimed(address,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"manager",type:"address"},{indexed:!1,internalType:"uint256",name:"firstRewardPeriod",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lastRewardPeriod",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalRewardReferenceToken",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalRewardClaimToken",type:"uint256"}],name:"Claimed",type:"event",params:{firstRewardPeriod:"The first reward period for which the claim was made",lastRewardPeriod:"The last reward period for which the claim was made",manager:"The address of the manager that has claimed",totalRewardClaimToken:"The amount of the claim",totalRewardReferenceToken:"The amount of the claim in reference token"},notice:"Triggered after a claim"},"ManagerAdded(address,address,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"manager",type:"address"},{indexed:!1,internalType:"address",name:"referenceToken",type:"address"},{indexed:!1,internalType:"address",name:"claimToken",type:"address"},{indexed:!1,internalType:"uint256",name:"baseReward",type:"uint256"},{indexed:!1,internalType:"uint256",name:"claimDelay",type:"uint256"}],name:"ManagerAdded",type:"event",params:{baseReward:"Amount of pact (in cusd) as base reward             E.g. A manager has:                    - referenceToken = cUSD                    - claimToken = PACT                    - baseReward = 100e18                    - 1 cUSD = 50 PACTs              That user fill receive 100 * 50 PACTs as reward",claimDelay:"Period of time between two claims",claimToken:"Token to be used as reward token (usually PACT)",manager:"Address of the manager",referenceToken:"Token to be used as reward reference (usually cUSD)"},notice:"Triggered when a manager has been added"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Paused(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Paused",type:"event"},"TokenPairEdited(address,address,uint24)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"referenceTokenAddress",type:"address"},{indexed:!0,internalType:"address",name:"claimTokenAddress",type:"address"},{indexed:!1,internalType:"uint24",name:"uniswapPairFee",type:"uint24"}],name:"TokenPairEdited",type:"event"},"Unpaused(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Unpaused",type:"event"}},methods:{"addCompletedLoanToManager(address,address,uint256)":{inputs:[{internalType:"address",name:"_managerAddress",type:"address"},{internalType:"address",name:"_borrowerAddress",type:"address"},{internalType:"uint256",name:"_loanId",type:"uint256"}],name:"addCompletedLoanToManager",outputs:[],stateMutability:"nonpayable",type:"function"},"addManager(address,address,address,uint256,uint256)":{inputs:[{internalType:"address",name:"_managerAddress",type:"address"},{internalType:"address",name:"_referenceToken",type:"address"},{internalType:"address",name:"_claimToken",type:"address"},{internalType:"uint256",name:"_baseReward",type:"uint256"},{internalType:"uint256",name:"_claimDelay",type:"uint256"}],name:"addManager",outputs:[],stateMutability:"nonpayable",type:"function",params:{_baseReward:"amount of pact (in cusd) as base reward",_managerAddress:"address of the manager"},notice:"Adds a new manager"},"claim()":{inputs:[],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function"},"claimAmounts(address)":{inputs:[{internalType:"address",name:"managerAddress",type:"address"}],name:"claimAmounts",outputs:[{internalType:"uint256",name:"totalBaseReward",type:"uint256"},{internalType:"uint256",name:"totalExtraReward",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"editTokenPair(address,address,uint24)":{inputs:[{internalType:"address",name:"_referenceTokenAddress",type:"address"},{internalType:"address",name:"_claimTokenAddress",type:"address"},{internalType:"uint24",name:"_uniswapPairFee",type:"uint24"}],name:"editTokenPair",outputs:[],stateMutability:"nonpayable",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function",notice:"Returns the current implementation version"},"initialize(uint256,address,address)":{inputs:[{internalType:"uint256",name:"_rewardPercentage",type:"uint256"},{internalType:"contract IMicrocredit",name:"_microcredit",type:"address"},{internalType:"contract IQuoter",name:"_uniswapQuoter",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",params:{_microcredit:"The address of the microcredit contract",_uniswapQuoter:"The address of the UniswapQuoter"},notice:"Used to initialize a new MicrocreditManager contract"},"managerListAt(uint256)":{inputs:[{internalType:"uint256",name:"index_",type:"uint256"}],name:"managerListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",params:{index_:"index value"},returns:{_0:"address of the manager"},notice:"Returns an address from the managerList"},"managerListLength()":{inputs:[],name:"managerListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Returns the length of the managerList"},"managerRewardPeriodLoan(address,uint256,uint256)":{inputs:[{internalType:"address",name:"_managerAddress",type:"address"},{internalType:"uint256",name:"_rewardPeriodIndex",type:"uint256"},{internalType:"uint256",name:"_loanIndex",type:"uint256"}],name:"managerRewardPeriodLoan",outputs:[{internalType:"address",name:"borrowerAddress",type:"address"},{internalType:"uint256",name:"borrowerLoanId",type:"uint256"}],stateMutability:"view",type:"function"},"managerRewardPeriods(address,uint256)":{inputs:[{internalType:"address",name:"_managerAddress",type:"address"},{internalType:"uint256",name:"_rewardPeriodIndex",type:"uint256"}],name:"managerRewardPeriods",outputs:[{internalType:"uint256",name:"startDate",type:"uint256"},{internalType:"uint256",name:"endDate",type:"uint256"},{internalType:"uint256",name:"baseReward",type:"uint256"},{internalType:"uint256",name:"extraReward",type:"uint256"},{internalType:"uint256",name:"completedLoansLength",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"managers(address)":{inputs:[{internalType:"address",name:"_managerAddress",type:"address"}],name:"managers",outputs:[{internalType:"address",name:"referenceToken",type:"address"},{internalType:"address",name:"claimToken",type:"address"},{internalType:"uint256",name:"baseReward",type:"uint256"},{internalType:"uint256",name:"claimDelay",type:"uint256"},{internalType:"uint256",name:"rewardPeriodsLength",type:"uint256"},{internalType:"uint256",name:"rewardPeriodToClaim",type:"uint256"}],stateMutability:"view",type:"function"},"microcredit()":{inputs:[],name:"microcredit",outputs:[{internalType:"contract IMicrocredit",name:"",type:"address"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"paused()":{inputs:[],name:"paused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns true if the contract is paused, and false otherwise."},"referenceToken(address)":{inputs:[{internalType:"address",name:"_referenceTokenAddress",type:"address"}],name:"referenceToken",outputs:[{internalType:"uint256",name:"claimTokenListLength",type:"uint256"}],stateMutability:"view",type:"function"},"referenceTokenClaimTokenListAt(address,uint256)":{inputs:[{internalType:"address",name:"_referenceTokenAddress",type:"address"},{internalType:"uint256",name:"_claimTokenIndex",type:"uint256"}],name:"referenceTokenClaimTokenListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"referenceTokenListAt(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"referenceTokenListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",params:{_index:"index value"},returns:{_0:"address of the token"},notice:"Returns an address from the _referenceTokenList"},"referenceTokenListLength()":{inputs:[],name:"referenceTokenListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Returns the length of the _referenceTokenList"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"rewardPercentage()":{inputs:[],name:"rewardPercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"tokenPair(address,address)":{inputs:[{internalType:"address",name:"_referenceToken",type:"address"},{internalType:"address",name:"_claimToken",type:"address"}],name:"tokenPair",outputs:[{components:[{internalType:"uint24",name:"uniswapFee",type:"uint24"}],internalType:"struct IMicrocreditManager.TokenPair",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"uniswapQuoter()":{inputs:[],name:"uniswapQuoter",outputs:[{internalType:"contract IQuoter",name:"",type:"address"}],stateMutability:"view",type:"function"}}},"contracts/microcreditManager/interfaces/IMicrocreditManager.sol:IMicrocreditManager":{source:"contracts/microcreditManager/interfaces/IMicrocreditManager.sol",name:"IMicrocreditManager",methods:{"addCompletedLoanToManager(address,address,uint256)":{inputs:[{internalType:"address",name:"managerAddress",type:"address"},{internalType:"address",name:"_borrowerAddress",type:"address"},{internalType:"uint256",name:"loanId",type:"uint256"}],name:"addCompletedLoanToManager",outputs:[],stateMutability:"nonpayable",type:"function"},"addManager(address,address,address,uint256,uint256)":{inputs:[{internalType:"address",name:"_managerAddress",type:"address"},{internalType:"address",name:"_referenceToken",type:"address"},{internalType:"address",name:"_claimToken",type:"address"},{internalType:"uint256",name:"_baseReward",type:"uint256"},{internalType:"uint256",name:"_claimDelay",type:"uint256"}],name:"addManager",outputs:[],stateMutability:"nonpayable",type:"function"},"claim()":{inputs:[],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function"},"claimAmounts(address)":{inputs:[{internalType:"address",name:"managerAddress",type:"address"}],name:"claimAmounts",outputs:[{internalType:"uint256",name:"totalBaseReward",type:"uint256"},{internalType:"uint256",name:"totalExtraReward",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"editTokenPair(address,address,uint24)":{inputs:[{internalType:"address",name:"referenceTokenAddress",type:"address"},{internalType:"address",name:"claimTokenAddress",type:"address"},{internalType:"uint24",name:"uniswapPairFee",type:"uint24"}],name:"editTokenPair",outputs:[],stateMutability:"nonpayable",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"managerListAt(uint256)":{inputs:[{internalType:"uint256",name:"index_",type:"uint256"}],name:"managerListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"managerListLength()":{inputs:[],name:"managerListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"managerRewardPeriodLoan(address,uint256,uint256)":{inputs:[{internalType:"address",name:"_managerAddress",type:"address"},{internalType:"uint256",name:"_rewardPeriodIndex",type:"uint256"},{internalType:"uint256",name:"_loanIndex",type:"uint256"}],name:"managerRewardPeriodLoan",outputs:[{internalType:"address",name:"borrowerAddress",type:"address"},{internalType:"uint256",name:"borrowerLoanId",type:"uint256"}],stateMutability:"view",type:"function"},"managerRewardPeriods(address,uint256)":{inputs:[{internalType:"address",name:"_managerAddress",type:"address"},{internalType:"uint256",name:"_rewardPeriodIndex",type:"uint256"}],name:"managerRewardPeriods",outputs:[{internalType:"uint256",name:"startDate",type:"uint256"},{internalType:"uint256",name:"endDate",type:"uint256"},{internalType:"uint256",name:"baseReward",type:"uint256"},{internalType:"uint256",name:"extraReward",type:"uint256"},{internalType:"uint256",name:"completedLoansLength",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"managers(address)":{inputs:[{internalType:"address",name:"_managerAddress",type:"address"}],name:"managers",outputs:[{internalType:"address",name:"referenceToken",type:"address"},{internalType:"address",name:"claimToken",type:"address"},{internalType:"uint256",name:"baseReward",type:"uint256"},{internalType:"uint256",name:"claimDelay",type:"uint256"},{internalType:"uint256",name:"rewardPeriodsLength",type:"uint256"},{internalType:"uint256",name:"rewardPeriodToClaim",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"microcredit()":{inputs:[],name:"microcredit",outputs:[{internalType:"contract IMicrocredit",name:"",type:"address"}],stateMutability:"view",type:"function"},"referenceToken(address)":{inputs:[{internalType:"address",name:"_referenceTokenAddress",type:"address"}],name:"referenceToken",outputs:[{internalType:"uint256",name:"claimTokenListLength",type:"uint256"}],stateMutability:"view",type:"function"},"referenceTokenClaimTokenListAt(address,uint256)":{inputs:[{internalType:"address",name:"referenceTokenAddress",type:"address"},{internalType:"uint256",name:"claimTokenIndex",type:"uint256"}],name:"referenceTokenClaimTokenListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"referenceTokenListAt(uint256)":{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"referenceTokenListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"referenceTokenListLength()":{inputs:[],name:"referenceTokenListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPercentage()":{inputs:[],name:"rewardPercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"tokenPair(address,address)":{inputs:[{internalType:"address",name:"referenceToken",type:"address"},{internalType:"address",name:"claimToken",type:"address"}],name:"tokenPair",outputs:[{components:[{internalType:"uint24",name:"uniswapFee",type:"uint24"}],internalType:"struct IMicrocreditManager.TokenPair",name:"",type:"tuple"}],stateMutability:"nonpayable",type:"function"},"uniswapQuoter()":{inputs:[],name:"uniswapQuoter",outputs:[{internalType:"contract IQuoter",name:"",type:"address"}],stateMutability:"view",type:"function"}}},"contracts/microcreditManager/interfaces/MicrocreditManagerStorageV1.sol:MicrocreditManagerStorageV1":{source:"contracts/microcreditManager/interfaces/MicrocreditManagerStorageV1.sol",name:"MicrocreditManagerStorageV1",title:"Storage for MicrocreditManager",notice:"For future upgrades, do not change MicrocreditManagerStorageV1. Create a new contract which implements MicrocreditManagerStorageV1 and following the naming convention MicrocreditManagerStorageVx.",methods:{"addCompletedLoanToManager(address,address,uint256)":{inputs:[{internalType:"address",name:"managerAddress",type:"address"},{internalType:"address",name:"_borrowerAddress",type:"address"},{internalType:"uint256",name:"loanId",type:"uint256"}],name:"addCompletedLoanToManager",outputs:[],stateMutability:"nonpayable",type:"function"},"addManager(address,address,address,uint256,uint256)":{inputs:[{internalType:"address",name:"_managerAddress",type:"address"},{internalType:"address",name:"_referenceToken",type:"address"},{internalType:"address",name:"_claimToken",type:"address"},{internalType:"uint256",name:"_baseReward",type:"uint256"},{internalType:"uint256",name:"_claimDelay",type:"uint256"}],name:"addManager",outputs:[],stateMutability:"nonpayable",type:"function"},"claim()":{inputs:[],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function"},"claimAmounts(address)":{inputs:[{internalType:"address",name:"managerAddress",type:"address"}],name:"claimAmounts",outputs:[{internalType:"uint256",name:"totalBaseReward",type:"uint256"},{internalType:"uint256",name:"totalExtraReward",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"editTokenPair(address,address,uint24)":{inputs:[{internalType:"address",name:"referenceTokenAddress",type:"address"},{internalType:"address",name:"claimTokenAddress",type:"address"},{internalType:"uint24",name:"uniswapPairFee",type:"uint24"}],name:"editTokenPair",outputs:[],stateMutability:"nonpayable",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"managerListAt(uint256)":{inputs:[{internalType:"uint256",name:"index_",type:"uint256"}],name:"managerListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"managerListLength()":{inputs:[],name:"managerListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"managerRewardPeriodLoan(address,uint256,uint256)":{inputs:[{internalType:"address",name:"_managerAddress",type:"address"},{internalType:"uint256",name:"_rewardPeriodIndex",type:"uint256"},{internalType:"uint256",name:"_loanIndex",type:"uint256"}],name:"managerRewardPeriodLoan",outputs:[{internalType:"address",name:"borrowerAddress",type:"address"},{internalType:"uint256",name:"borrowerLoanId",type:"uint256"}],stateMutability:"view",type:"function"},"managerRewardPeriods(address,uint256)":{inputs:[{internalType:"address",name:"_managerAddress",type:"address"},{internalType:"uint256",name:"_rewardPeriodIndex",type:"uint256"}],name:"managerRewardPeriods",outputs:[{internalType:"uint256",name:"startDate",type:"uint256"},{internalType:"uint256",name:"endDate",type:"uint256"},{internalType:"uint256",name:"baseReward",type:"uint256"},{internalType:"uint256",name:"extraReward",type:"uint256"},{internalType:"uint256",name:"completedLoansLength",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"managers(address)":{inputs:[{internalType:"address",name:"_managerAddress",type:"address"}],name:"managers",outputs:[{internalType:"address",name:"referenceToken",type:"address"},{internalType:"address",name:"claimToken",type:"address"},{internalType:"uint256",name:"baseReward",type:"uint256"},{internalType:"uint256",name:"claimDelay",type:"uint256"},{internalType:"uint256",name:"rewardPeriodsLength",type:"uint256"},{internalType:"uint256",name:"rewardPeriodToClaim",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"microcredit()":{inputs:[],name:"microcredit",outputs:[{internalType:"contract IMicrocredit",name:"",type:"address"}],stateMutability:"view",type:"function"},"referenceToken(address)":{inputs:[{internalType:"address",name:"_referenceTokenAddress",type:"address"}],name:"referenceToken",outputs:[{internalType:"uint256",name:"claimTokenListLength",type:"uint256"}],stateMutability:"view",type:"function"},"referenceTokenClaimTokenListAt(address,uint256)":{inputs:[{internalType:"address",name:"referenceTokenAddress",type:"address"},{internalType:"uint256",name:"claimTokenIndex",type:"uint256"}],name:"referenceTokenClaimTokenListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"referenceTokenListAt(uint256)":{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"referenceTokenListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"referenceTokenListLength()":{inputs:[],name:"referenceTokenListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPercentage()":{inputs:[],name:"rewardPercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"tokenPair(address,address)":{inputs:[{internalType:"address",name:"referenceToken",type:"address"},{internalType:"address",name:"claimToken",type:"address"}],name:"tokenPair",outputs:[{components:[{internalType:"uint24",name:"uniswapFee",type:"uint24"}],internalType:"struct IMicrocreditManager.TokenPair",name:"",type:"tuple"}],stateMutability:"nonpayable",type:"function"},"uniswapQuoter()":{inputs:[],name:"uniswapQuoter",outputs:[{internalType:"contract IQuoter",name:"",type:"address"}],stateMutability:"view",type:"function"}}},"contracts/mocks/community/CommunityAdminImplementationOld.sol:CommunityAdminImplementationOld":{source:"contracts/mocks/community/CommunityAdminImplementationOld.sol",name:"CommunityAdminImplementationOld",notice:"Welcome to CommunityAdmin, the main contract. This is an administrative (for now) contract where the admins have control over the list of communities. Being only able to add and remove communities",events:{"CommunityAdded(address,address[],uint256,uint256,uint256,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"communityAddress",type:"address"},{indexed:!1,internalType:"address[]",name:"managers",type:"address[]"},{indexed:!1,internalType:"uint256",name:"claimAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"maxClaim",type:"uint256"},{indexed:!1,internalType:"uint256",name:"decreaseStep",type:"uint256"},{indexed:!1,internalType:"uint256",name:"baseInterval",type:"uint256"},{indexed:!1,internalType:"uint256",name:"incrementInterval",type:"uint256"},{indexed:!1,internalType:"uint256",name:"minTranche",type:"uint256"},{indexed:!1,internalType:"uint256",name:"maxTranche",type:"uint256"}],name:"CommunityAdded",type:"event",params:{baseInterval:"Value of the baseInterval",claimAmount:"Value of the claimAmount",communityAddress:"Address of the community that has been added",decreaseStep:"Value of the decreaseStep",incrementInterval:"Value of the incrementInterval",managers:"Addresses of the initial managers",maxClaim:"Value of the maxClaim",maxTranche:"Value of the maxTranche For further information regarding each parameter, see *Community* smart contract initialize method.",minTranche:"Value of the minTranche"},notice:"Triggered when a community has been added"},"CommunityFunded(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"community",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"CommunityFunded",type:"event",params:{amount:"Amount of the funding",community:"Address of the community"},notice:"Triggered when a community has been funded"},"CommunityMigrated(address[],address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address[]",name:"managers",type:"address[]"},{indexed:!0,internalType:"address",name:"communityAddress",type:"address"},{indexed:!0,internalType:"address",name:"previousCommunityAddress",type:"address"}],name:"CommunityMigrated",type:"event",params:{communityAddress:"New community address",managers:"Addresses of the new community's initial managers",previousCommunityAddress:"Old community address"},notice:"Triggered when a community has been migrated"},"CommunityRemoved(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"communityAddress",type:"address"}],name:"CommunityRemoved",type:"event",params:{communityAddress:"Address of the community that has been removed"},notice:"Triggered when a community has been removed"},"CommunityTemplateUpdated(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"oldCommunityTemplate",type:"address"},{indexed:!0,internalType:"address",name:"newCommunityTemplate",type:"address"}],name:"CommunityTemplateUpdated",type:"event",params:{newCommunityTemplate:"New communityTemplate address",oldCommunityTemplate:"Old communityTemplate address"},notice:"Triggered when the communityTemplate address has been updated"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"TransferERC20(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TransferERC20",type:"event",params:{amount:"Amount of the transaction",to:"Address of the receiver",token:"ERC20 token address"},notice:"Triggered when an amount of an ERC20 has been transferred from this contract to an address"},"TreasuryUpdated(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"oldTreasury",type:"address"},{indexed:!0,internalType:"address",name:"newTreasury",type:"address"}],name:"TreasuryUpdated",type:"event",params:{newTreasury:"New treasury address",oldTreasury:"Old treasury address"},notice:"Triggered when the treasury address has been updated"}},methods:{"addCommunity(address[],uint256,uint256,uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"address[]",name:"_managers",type:"address[]"},{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"},{internalType:"uint256",name:"_minTranche",type:"uint256"},{internalType:"uint256",name:"_maxTranche",type:"uint256"}],name:"addCommunity",outputs:[],stateMutability:"nonpayable",type:"function",params:{_baseInterval:"base interval to start claiming",_claimAmount:"base amount to be claim by the beneficiary",_decreaseStep:"value decreased from maxClaim for every beneficiary added",_incrementInterval:"increment interval used in each claim",_managers:"addresses of the community managers",_maxClaim:"limit that a beneficiary can claim at in total",_maxTranche:"maximum amount that the community will receive when requesting funds",_minTranche:"minimum amount that the community will receive when requesting funds"},notice:"Adds a new community"},"addManagerToCommunity(address,address)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"address",name:"_account",type:"address"}],name:"addManagerToCommunity",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"address to be added as community manager",_community:"address of the community"},notice:"Adds a new manager to a community"},"cUSD()":{inputs:[],name:"cUSD",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"communities(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"communities",outputs:[{internalType:"enum ICommunityAdmin.CommunityState",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"communityListAt(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"communityListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",params:{_index:"index of the community"},returns:{_0:"address of the community"},notice:"Returns the address of a community from communityList"},"communityListLength()":{inputs:[],name:"communityListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",returns:{_0:"uint256 number of communities"},notice:"Returns the number of communities"},"communityProxyAdmin()":{inputs:[],name:"communityProxyAdmin",outputs:[{internalType:"contract ProxyAdmin",name:"",type:"address"}],stateMutability:"view",type:"function"},"communityTemplate()":{inputs:[],name:"communityTemplate",outputs:[{internalType:"contract ICommunity",name:"",type:"address"}],stateMutability:"view",type:"function"},"fundCommunity()":{inputs:[],name:"fundCommunity",outputs:[],stateMutability:"nonpayable",type:"function",details:"Funds an existing community if it hasn't enough funds"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function",notice:"Returns the current implementation version"},"initialize(address,address)":{inputs:[{internalType:"contract ICommunity",name:"_communityTemplate",type:"address"},{internalType:"contract IERC20Upgradeable",name:"_cUSD",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",params:{_cUSD:"Address of the cUSD token",_communityTemplate:"Address of the Community implementation                              used for deploying new communities"},notice:"Used to initialize a new CommunityAdmin contract"},"migrateCommunity(address[],address)":{inputs:[{internalType:"address[]",name:"_managers",type:"address[]"},{internalType:"contract ICommunity",name:"_previousCommunity",type:"address"}],name:"migrateCommunity",outputs:[],stateMutability:"nonpayable",type:"function",params:{_managers:"address of the community managers",_previousCommunity:"address of the community to be migrated"},notice:"Migrates a community by deploying a new contract."},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"removeCommunity(address)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"}],name:"removeCommunity",outputs:[],stateMutability:"nonpayable",type:"function",params:{_community:"address of the community"},notice:"Removes an existing community. All community funds are transferred to the treasury"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"amount of the transaction",_to:"address of the receiver",_token:"address of the ERC20 token"},notice:"Transfers an amount of an ERC20 from this contract to an address"},"transferFromCommunity(address,address,address,uint256)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferFromCommunity",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"amount of the transaction",_community:"address of the community",_to:"address of the receiver",_token:"address of the ERC20 token"},notice:"Transfers an amount of an ERC20 from  community to an address"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"treasury()":{inputs:[],name:"treasury",outputs:[{internalType:"contract ITreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"updateBeneficiaryParams(address,uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"}],name:"updateBeneficiaryParams",outputs:[],stateMutability:"nonpayable",type:"function",params:{_baseInterval:"base interval to start claiming",_claimAmount:"base amount to be claim by the beneficiary",_community:"address of the community",_decreaseStep:"value decreased from maxClaim each time a is beneficiary added",_incrementInterval:"increment interval used in each claim",_maxClaim:"limit that a beneficiary can claim  in total"},notice:"Updates the beneficiary params of a community"},"updateCommunityParams(address,uint256,uint256)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"uint256",name:"_minTranche",type:"uint256"},{internalType:"uint256",name:"_maxTranche",type:"uint256"}],name:"updateCommunityParams",outputs:[],stateMutability:"nonpayable",type:"function",params:{_community:"address of the community",_maxTranche:"maximum amount that the community will receive when requesting funds",_minTranche:"minimum amount that the community will receive when requesting funds"},notice:"Updates params of a community"},"updateCommunityTemplate(address)":{inputs:[{internalType:"contract ICommunity",name:"_newCommunityTemplate",type:"address"}],name:"updateCommunityTemplate",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newCommunityTemplate:"address of the new communityTemplate contract"},notice:"Updates the address of the the communityTemplate"},"updateProxyImplementation(address,address)":{inputs:[{internalType:"address",name:"_communityProxy",type:"address"},{internalType:"address",name:"_newCommunityTemplate",type:"address"}],name:"updateProxyImplementation",outputs:[],stateMutability:"nonpayable",type:"function",params:{_communityProxy:"address of the community",_newCommunityTemplate:"address of new implementation contract"},notice:"Updates proxy implementation address of a community"},"updateTreasury(address)":{inputs:[{internalType:"contract ITreasury",name:"_newTreasury",type:"address"}],name:"updateTreasury",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newTreasury:"address of the new treasury contract"},notice:"Updates the address of the treasury"}}},"contracts/mocks/community/CommunityOld.sol:CommunityOld":{source:"contracts/mocks/community/CommunityOld.sol",name:"CommunityOld",notice:"Welcome to the Community contract. For each community there will be one proxy contract deployed by CommunityAdmin. The implementation of the proxy is this contract. This enable us to save tokens on the contract itself, and avoid the problems of having everything in one single contract. Each community has it's own members and and managers.",events:{"BeneficiaryAdded(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"manager",type:"address"},{indexed:!0,internalType:"address",name:"beneficiary",type:"address"}],name:"BeneficiaryAdded",type:"event",params:{beneficiary:"Address of the beneficiary that has been added",manager:"Address of the manager that triggered the event"},notice:"Triggered when a beneficiary has been added"},"BeneficiaryClaim(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"beneficiary",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"BeneficiaryClaim",type:"event",params:{amount:"Amount of the claim",beneficiary:"Address of the beneficiary that has claimed"},notice:"Triggered when a beneficiary has claimed"},"BeneficiaryJoined(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"beneficiary",type:"address"}],name:"BeneficiaryJoined",type:"event",params:{beneficiary:"Address of the beneficiary"},notice:"Triggered when a beneficiary from previous community has joined in the current community"},"BeneficiaryLocked(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"manager",type:"address"},{indexed:!0,internalType:"address",name:"beneficiary",type:"address"}],name:"BeneficiaryLocked",type:"event",params:{beneficiary:"Address of the beneficiary that has been locked",manager:"Address of the manager that triggered the event"},notice:"Triggered when a beneficiary has been locked"},"BeneficiaryParamsUpdated(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldClaimAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"oldMaxClaim",type:"uint256"},{indexed:!1,internalType:"uint256",name:"oldDecreaseStep",type:"uint256"},{indexed:!1,internalType:"uint256",name:"oldBaseInterval",type:"uint256"},{indexed:!1,internalType:"uint256",name:"oldIncrementInterval",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newClaimAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newMaxClaim",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDecreaseStep",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newBaseInterval",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newIncrementInterval",type:"uint256"}],name:"BeneficiaryParamsUpdated",type:"event",params:{newBaseInterval:"New baseInterval value",newClaimAmount:"New claimAmount value",newDecreaseStep:"New decreaseStep value",newIncrementInterval:"New incrementInterval value For further information regarding each parameter, see *Community* smart contract initialize method.",newMaxClaim:"New maxClaim value",oldBaseInterval:"Old baseInterval value",oldClaimAmount:"Old claimAmount value",oldDecreaseStep:"Old decreaseStep value",oldIncrementInterval:"Old incrementInterval value",oldMaxClaim:"Old maxClaim value"},notice:"Triggered when beneficiary params has been updated"},"BeneficiaryRemoved(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"manager",type:"address"},{indexed:!0,internalType:"address",name:"beneficiary",type:"address"}],name:"BeneficiaryRemoved",type:"event",params:{beneficiary:"Address of the beneficiary that has been removed",manager:"Address of the manager that triggered the event"},notice:"Triggered when a beneficiary has been removed"},"BeneficiaryUnlocked(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"manager",type:"address"},{indexed:!0,internalType:"address",name:"beneficiary",type:"address"}],name:"BeneficiaryUnlocked",type:"event",params:{beneficiary:"Address of the beneficiary that has been unlocked",manager:"Address of the manager that triggered the event"},notice:"Triggered when a beneficiary has been unlocked"},"CommunityAdminUpdated(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"oldCommunityAdmin",type:"address"},{indexed:!0,internalType:"address",name:"newCommunityAdmin",type:"address"}],name:"CommunityAdminUpdated",type:"event",params:{newCommunityAdmin:"New communityAdmin address",oldCommunityAdmin:"Old communityAdmin address"},notice:"Triggered when communityAdmin has been updated"},"CommunityLocked(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"manager",type:"address"}],name:"CommunityLocked",type:"event",params:{manager:"Address of the manager that triggered the event"},notice:"Triggered when a community has been locked"},"CommunityParamsUpdated(uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldMinTranche",type:"uint256"},{indexed:!1,internalType:"uint256",name:"oldMaxTranche",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newMinTranche",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newMaxTranche",type:"uint256"}],name:"CommunityParamsUpdated",type:"event",params:{newMaxTranche:"New maxTranche value For further information regarding each parameter, see *Community* smart contract initialize method.",newMinTranche:"New minTranche value",oldMaxTranche:"Old maxTranche value",oldMinTranche:"Old minTranche value"},notice:"Triggered when community params has been updated"},"CommunityUnlocked(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"manager",type:"address"}],name:"CommunityUnlocked",type:"event",params:{manager:"Address of the manager that triggered the event"},notice:"Triggered when a community has been unlocked"},"Donate(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"donor",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Donate",type:"event",params:{amount:"Amount of the donation",donor:"Address of the donor"},notice:"Triggered when someone has donated cUSD"},"FundsRequested(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"manager",type:"address"}],name:"FundsRequested",type:"event",params:{manager:"Address of the manager that triggered the event"},notice:"Triggered when a manager has requested funds for community"},"ManagerAdded(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"manager",type:"address"},{indexed:!0,internalType:"address",name:"account",type:"address"}],name:"ManagerAdded",type:"event",params:{account:"Address of the manager that has been added",manager:"Address of the manager that triggered the event                          or address of the CommunityAdmin if it's first manager"},notice:"Triggered when a manager has been added"},"ManagerRemoved(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"manager",type:"address"},{indexed:!0,internalType:"address",name:"account",type:"address"}],name:"ManagerRemoved",type:"event",params:{account:"Address of the manager that has been removed",manager:"Address of the manager that triggered the event"},notice:"Triggered when a manager has been removed"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"PreviousCommunityUpdated(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"oldPreviousCommunity",type:"address"},{indexed:!0,internalType:"address",name:"newPreviousCommunity",type:"address"}],name:"PreviousCommunityUpdated",type:"event",params:{newPreviousCommunity:"New previousCommunity address",oldPreviousCommunity:"Old previousCommunity address"},notice:"Triggered when previousCommunity has been updated"},"RoleAdminChanged(bytes32,bytes32,bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},"RoleGranted(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},"RoleRevoked(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},"TransferERC20(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TransferERC20",type:"event",params:{amount:"Amount of the transaction",to:"Address of the receiver",token:"ERC20 token address"},notice:"Triggered when an amount of an ERC20 has been transferred from this contract to an address"}},methods:{"DEFAULT_ADMIN_ROLE()":{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"_firstBlockTimestamp()":{inputs:[],name:"_firstBlockTimestamp",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"addBeneficiary(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"addBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function",params:{_beneficiaryAddress:"address of the beneficiary to be added"},notice:"Adds a new beneficiary"},"addManager(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"addManager",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"address of the manager to be added"},notice:"Adds a new manager"},"addTreasuryFunds(uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"addTreasuryFunds",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"amount to be added to treasuryFunds"},notice:"Increases the treasuryFunds value Used by communityAdmin after an amount of cUSD are sent from the treasury"},"baseInterval()":{inputs:[],name:"baseInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"beneficiaries(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"beneficiaries",outputs:[{internalType:"enum ICommunity.BeneficiaryState",name:"state",type:"uint8"},{internalType:"uint256",name:"claims",type:"uint256"},{internalType:"uint256",name:"claimedAmount",type:"uint256"},{internalType:"uint256",name:"lastClaim",type:"uint256"}],stateMutability:"view",type:"function"},"beneficiaryJoinFromMigrated()":{inputs:[],name:"beneficiaryJoinFromMigrated",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Allows a beneficiary from the previousCommunity to join in this community"},"beneficiaryListAt(uint256)":{inputs:[{internalType:"uint256",name:"index_",type:"uint256"}],name:"beneficiaryListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",params:{index_:"index value"},returns:{_0:"address of the beneficiary"},notice:"Returns an address from the beneficiaryList"},"beneficiaryListLength()":{inputs:[],name:"beneficiaryListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Returns the length of the beneficiaryList"},"cUSD()":{inputs:[],name:"cUSD",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"Returns the cUSD contract address"},"claim()":{inputs:[],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers cUSD to a valid beneficiary"},"claimAmount()":{inputs:[],name:"claimAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"claimCooldown(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"claimCooldown",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_beneficiaryAddress:"address of the beneficiary"},returns:{_0:"uint256 number of block when the beneficiary can claim"},notice:"Returns the block number when a beneficiary can claim again"},"communityAdmin()":{inputs:[],name:"communityAdmin",outputs:[{internalType:"contract ICommunityAdmin",name:"",type:"address"}],stateMutability:"view",type:"function"},"decreaseStep()":{inputs:[],name:"decreaseStep",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donate(address,uint256)":{inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"donate",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"amount to be donated",_sender:"address of the sender"},notice:"Transfers cUSDs from donor to this community Used by donationToCommunity method from DonationMiner contract"},"getInitialMaxClaim()":{inputs:[],name:"getInitialMaxClaim",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Returns the initial maxClaim"},"getRoleAdmin(bytes32)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function",notice:"Returns the current implementation version"},"grantRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"",type:"address"}],name:"grantRole",outputs:[],stateMutability:"pure",type:"function",notice:"Enforces managers to use addManager method"},"hasRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns `true` if `account` has been granted `role`."},"impactMarketAddress()":{inputs:[],name:"impactMarketAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"pure",type:"function",notice:"Returns the 0 address only used for backwards compatibility"},"incrementInterval()":{inputs:[],name:"incrementInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"initialize(address[],uint256,uint256,uint256,uint256,uint256,uint256,uint256,address)":{inputs:[{internalType:"address[]",name:"_managers",type:"address[]"},{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"},{internalType:"uint256",name:"_minTranche",type:"uint256"},{internalType:"uint256",name:"_maxTranche",type:"uint256"},{internalType:"contract ICommunity",name:"_previousCommunity",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",params:{_baseInterval:"Base interval to start claiming",_claimAmount:"Base amount to be claim by the beneficiary",_decreaseStep:"Value decreased from maxClaim each time a beneficiary is added",_incrementInterval:"Increment interval used in each claim",_managers:"Community's initial managers.                             Will be able to add others",_maxClaim:"Limit that a beneficiary can claim in total",_maxTranche:"Maximum amount that the community will receive when requesting funds",_minTranche:"Minimum amount that the community will receive when requesting funds",_previousCommunity:"Previous smart contract address of community"},notice:"Used to initialize a new Community contract"},"lastFundRequest()":{inputs:[],name:"lastFundRequest",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lastInterval(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"lastInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_beneficiaryAddress:"address of the beneficiary"},returns:{_0:"uint256 number of blocks for the lastInterval"},notice:"Returns the number of blocks that a beneficiary have to wait between claims"},"lock()":{inputs:[],name:"lock",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Locks the community claims"},"lockBeneficiary(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"lockBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function",params:{_beneficiaryAddress:"address of the beneficiary to be locked"},notice:"Locks a valid beneficiary"},"locked()":{inputs:[],name:"locked",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"maxClaim()":{inputs:[],name:"maxClaim",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxTranche()":{inputs:[],name:"maxTranche",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"minTranche()":{inputs:[],name:"minTranche",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"previousCommunity()":{inputs:[],name:"previousCommunity",outputs:[{internalType:"contract ICommunity",name:"",type:"address"}],stateMutability:"view",type:"function"},"privateFunds()":{inputs:[],name:"privateFunds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"removeBeneficiary(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"removeBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function",params:{_beneficiaryAddress:"address of the beneficiary to be removed"},notice:"Remove an existing beneficiary"},"removeManager(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"removeManager",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"address of the manager to be removed"},notice:"Remove an existing manager"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"renounceRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"requestFunds()":{inputs:[],name:"requestFunds",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Requests treasury funds from the communityAdmin"},"revokeRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"pure",type:"function",notice:"Enforces managers to use removeManager method"},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC165-supportsInterface}."},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"amount of the transaction",_to:"address of the receiver",_token:"address of the ERC20 token"},notice:"Transfers an amount of an ERC20 from this contract to an address"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"treasuryFunds()":{inputs:[],name:"treasuryFunds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"unlock()":{inputs:[],name:"unlock",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Unlocks the community claims"},"unlockBeneficiary(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"unlockBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function",params:{_beneficiaryAddress:"address of the beneficiary to be unlocked"},notice:"Unlocks a locked beneficiary"},"updateBeneficiaryParams(uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"}],name:"updateBeneficiaryParams",outputs:[],stateMutability:"nonpayable",type:"function",params:{_baseInterval:"base interval to start claiming",_claimAmount:"base amount to be claim by the beneficiary",_decreaseStep:"value decreased from maxClaim each time a is beneficiary added",_incrementInterval:"increment interval used in each claim",_maxClaim:"limit that a beneficiary can claim  in total"},notice:"Updates beneficiary params"},"updateCommunityAdmin(address)":{inputs:[{internalType:"contract ICommunityAdmin",name:"_newCommunityAdmin",type:"address"}],name:"updateCommunityAdmin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newCommunityAdmin:"address of the new communityAdmin"},notice:"Updates the address of the communityAdmin"},"updateCommunityParams(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_minTranche",type:"uint256"},{internalType:"uint256",name:"_maxTranche",type:"uint256"}],name:"updateCommunityParams",outputs:[],stateMutability:"nonpayable",type:"function",params:{_maxTranche:"maximum amount that the community will receive when requesting funds",_minTranche:"minimum amount that the community will receive when requesting funds"},notice:"Updates params of a community"},"updatePreviousCommunity(address)":{inputs:[{internalType:"contract ICommunity",name:"_newPreviousCommunity",type:"address"}],name:"updatePreviousCommunity",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newPreviousCommunity:"address of the new previousCommunity"},notice:"Updates the address of the previousCommunity"},"validBeneficiaryCount()":{inputs:[],name:"validBeneficiaryCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/mocks/community/interfaces/CommunityAdminStorageV1.sol:CommunityAdminStorageV1":{source:"contracts/mocks/community/interfaces/CommunityAdminStorageV1.sol",name:"CommunityAdminStorageV1",title:"Storage for CommunityAdmin",notice:"For future upgrades, do not change CommunityAdminStorageV1. Create a new contract which implements CommunityAdminStorageV1 and following the naming convention CommunityAdminStorageVX.",methods:{"addCommunity(address[],uint256,uint256,uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"address[]",name:"_managers",type:"address[]"},{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"},{internalType:"uint256",name:"_minTranche",type:"uint256"},{internalType:"uint256",name:"_maxTranche",type:"uint256"}],name:"addCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"addManagerToCommunity(address,address)":{inputs:[{internalType:"contract ICommunity",name:"_community_",type:"address"},{internalType:"address",name:"_account_",type:"address"}],name:"addManagerToCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"cUSD()":{inputs:[],name:"cUSD",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"communities(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"communities",outputs:[{internalType:"enum ICommunityAdmin.CommunityState",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"communityListAt(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"communityListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"communityListLength()":{inputs:[],name:"communityListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"communityProxyAdmin()":{inputs:[],name:"communityProxyAdmin",outputs:[{internalType:"contract ProxyAdmin",name:"",type:"address"}],stateMutability:"view",type:"function"},"communityTemplate()":{inputs:[],name:"communityTemplate",outputs:[{internalType:"contract ICommunity",name:"",type:"address"}],stateMutability:"view",type:"function"},"fundCommunity()":{inputs:[],name:"fundCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"migrateCommunity(address[],address)":{inputs:[{internalType:"address[]",name:"_managers",type:"address[]"},{internalType:"contract ICommunity",name:"_previousCommunity",type:"address"}],name:"migrateCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"removeCommunity(address)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"}],name:"removeCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function"},"transferFromCommunity(address,address,address,uint256)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferFromCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"treasury()":{inputs:[],name:"treasury",outputs:[{internalType:"contract ITreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"updateBeneficiaryParams(address,uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"}],name:"updateBeneficiaryParams",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityParams(address,uint256,uint256)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"uint256",name:"_minTranche",type:"uint256"},{internalType:"uint256",name:"_maxTranche",type:"uint256"}],name:"updateCommunityParams",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityTemplate(address)":{inputs:[{internalType:"contract ICommunity",name:"_communityTemplate_",type:"address"}],name:"updateCommunityTemplate",outputs:[],stateMutability:"nonpayable",type:"function"},"updateProxyImplementation(address,address)":{inputs:[{internalType:"address",name:"_communityProxy",type:"address"},{internalType:"address",name:"_newLogic",type:"address"}],name:"updateProxyImplementation",outputs:[],stateMutability:"nonpayable",type:"function"},"updateTreasury(address)":{inputs:[{internalType:"contract ITreasury",name:"_newTreasury",type:"address"}],name:"updateTreasury",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/mocks/community/interfaces/CommunityStorageV1.sol:CommunityStorageV1":{source:"contracts/mocks/community/interfaces/CommunityStorageV1.sol",name:"CommunityStorageV1",title:"Storage for Community",notice:"For future upgrades, do not change CommunityStorageV1. Create a new contract which implements CommunityStorageV1 and following the naming convention CommunityStorageVX.",methods:{"addBeneficiary(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"addBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function"},"addManager(address)":{inputs:[{internalType:"address",name:"_managerAddress",type:"address"}],name:"addManager",outputs:[],stateMutability:"nonpayable",type:"function"},"addTreasuryFunds(uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"addTreasuryFunds",outputs:[],stateMutability:"nonpayable",type:"function"},"baseInterval()":{inputs:[],name:"baseInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"beneficiaries(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"beneficiaries",outputs:[{internalType:"enum ICommunity.BeneficiaryState",name:"state",type:"uint8"},{internalType:"uint256",name:"claims",type:"uint256"},{internalType:"uint256",name:"claimedAmount",type:"uint256"},{internalType:"uint256",name:"lastClaim",type:"uint256"}],stateMutability:"view",type:"function"},"beneficiaryJoinFromMigrated()":{inputs:[],name:"beneficiaryJoinFromMigrated",outputs:[],stateMutability:"nonpayable",type:"function"},"beneficiaryListAt(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"beneficiaryListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"beneficiaryListLength()":{inputs:[],name:"beneficiaryListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"cUSD()":{inputs:[],name:"cUSD",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"claim()":{inputs:[],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function"},"claimAmount()":{inputs:[],name:"claimAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"claimCooldown(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"claimCooldown",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"communityAdmin()":{inputs:[],name:"communityAdmin",outputs:[{internalType:"contract ICommunityAdmin",name:"",type:"address"}],stateMutability:"view",type:"function"},"decreaseStep()":{inputs:[],name:"decreaseStep",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donate(address,uint256)":{inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"donate",outputs:[],stateMutability:"nonpayable",type:"function"},"getInitialMaxClaim()":{inputs:[],name:"getInitialMaxClaim",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"impactMarketAddress()":{inputs:[],name:"impactMarketAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"pure",type:"function"},"incrementInterval()":{inputs:[],name:"incrementInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lastFundRequest()":{inputs:[],name:"lastFundRequest",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lastInterval(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"lastInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lock()":{inputs:[],name:"lock",outputs:[],stateMutability:"nonpayable",type:"function"},"lockBeneficiary(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"lockBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function"},"locked()":{inputs:[],name:"locked",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"maxClaim()":{inputs:[],name:"maxClaim",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxTranche()":{inputs:[],name:"maxTranche",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"minTranche()":{inputs:[],name:"minTranche",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"previousCommunity()":{inputs:[],name:"previousCommunity",outputs:[{internalType:"contract ICommunity",name:"",type:"address"}],stateMutability:"view",type:"function"},"privateFunds()":{inputs:[],name:"privateFunds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"removeBeneficiary(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"removeBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function"},"removeManager(address)":{inputs:[{internalType:"address",name:"_managerAddress",type:"address"}],name:"removeManager",outputs:[],stateMutability:"nonpayable",type:"function"},"requestFunds()":{inputs:[],name:"requestFunds",outputs:[],stateMutability:"nonpayable",type:"function"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function"},"treasuryFunds()":{inputs:[],name:"treasuryFunds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"unlock()":{inputs:[],name:"unlock",outputs:[],stateMutability:"nonpayable",type:"function"},"unlockBeneficiary(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"unlockBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function"},"updateBeneficiaryParams(uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"}],name:"updateBeneficiaryParams",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityAdmin(address)":{inputs:[{internalType:"contract ICommunityAdmin",name:"_communityAdmin",type:"address"}],name:"updateCommunityAdmin",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityParams(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_minTranche",type:"uint256"},{internalType:"uint256",name:"_maxTranche",type:"uint256"}],name:"updateCommunityParams",outputs:[],stateMutability:"nonpayable",type:"function"},"updatePreviousCommunity(address)":{inputs:[{internalType:"contract ICommunity",name:"_newPreviousCommunity",type:"address"}],name:"updatePreviousCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"validBeneficiaryCount()":{inputs:[],name:"validBeneficiaryCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/mocks/community/interfaces/ICommunity.sol:ICommunity":{source:"contracts/mocks/community/interfaces/ICommunity.sol",name:"ICommunity",methods:{"addBeneficiary(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"addBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function"},"addManager(address)":{inputs:[{internalType:"address",name:"_managerAddress",type:"address"}],name:"addManager",outputs:[],stateMutability:"nonpayable",type:"function"},"addTreasuryFunds(uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"addTreasuryFunds",outputs:[],stateMutability:"nonpayable",type:"function"},"baseInterval()":{inputs:[],name:"baseInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"beneficiaries(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"beneficiaries",outputs:[{internalType:"enum ICommunity.BeneficiaryState",name:"state",type:"uint8"},{internalType:"uint256",name:"claims",type:"uint256"},{internalType:"uint256",name:"claimedAmount",type:"uint256"},{internalType:"uint256",name:"lastClaim",type:"uint256"}],stateMutability:"view",type:"function"},"beneficiaryJoinFromMigrated()":{inputs:[],name:"beneficiaryJoinFromMigrated",outputs:[],stateMutability:"nonpayable",type:"function"},"beneficiaryListAt(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"beneficiaryListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"beneficiaryListLength()":{inputs:[],name:"beneficiaryListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"cUSD()":{inputs:[],name:"cUSD",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"claim()":{inputs:[],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function"},"claimAmount()":{inputs:[],name:"claimAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"claimCooldown(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"claimCooldown",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"communityAdmin()":{inputs:[],name:"communityAdmin",outputs:[{internalType:"contract ICommunityAdmin",name:"",type:"address"}],stateMutability:"view",type:"function"},"decreaseStep()":{inputs:[],name:"decreaseStep",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donate(address,uint256)":{inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"donate",outputs:[],stateMutability:"nonpayable",type:"function"},"getInitialMaxClaim()":{inputs:[],name:"getInitialMaxClaim",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"impactMarketAddress()":{inputs:[],name:"impactMarketAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"pure",type:"function"},"incrementInterval()":{inputs:[],name:"incrementInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lastFundRequest()":{inputs:[],name:"lastFundRequest",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lastInterval(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"lastInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lock()":{inputs:[],name:"lock",outputs:[],stateMutability:"nonpayable",type:"function"},"lockBeneficiary(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"lockBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function"},"locked()":{inputs:[],name:"locked",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"maxClaim()":{inputs:[],name:"maxClaim",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxTranche()":{inputs:[],name:"maxTranche",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"minTranche()":{inputs:[],name:"minTranche",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"previousCommunity()":{inputs:[],name:"previousCommunity",outputs:[{internalType:"contract ICommunity",name:"",type:"address"}],stateMutability:"view",type:"function"},"privateFunds()":{inputs:[],name:"privateFunds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"removeBeneficiary(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"removeBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function"},"removeManager(address)":{inputs:[{internalType:"address",name:"_managerAddress",type:"address"}],name:"removeManager",outputs:[],stateMutability:"nonpayable",type:"function"},"requestFunds()":{inputs:[],name:"requestFunds",outputs:[],stateMutability:"nonpayable",type:"function"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function"},"treasuryFunds()":{inputs:[],name:"treasuryFunds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"unlock()":{inputs:[],name:"unlock",outputs:[],stateMutability:"nonpayable",type:"function"},"unlockBeneficiary(address)":{inputs:[{internalType:"address",name:"_beneficiaryAddress",type:"address"}],name:"unlockBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function"},"updateBeneficiaryParams(uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"}],name:"updateBeneficiaryParams",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityAdmin(address)":{inputs:[{internalType:"contract ICommunityAdmin",name:"_communityAdmin",type:"address"}],name:"updateCommunityAdmin",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityParams(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_minTranche",type:"uint256"},{internalType:"uint256",name:"_maxTranche",type:"uint256"}],name:"updateCommunityParams",outputs:[],stateMutability:"nonpayable",type:"function"},"updatePreviousCommunity(address)":{inputs:[{internalType:"contract ICommunity",name:"_newPreviousCommunity",type:"address"}],name:"updatePreviousCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"validBeneficiaryCount()":{inputs:[],name:"validBeneficiaryCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/mocks/community/interfaces/ICommunityAdmin.sol:ICommunityAdmin":{source:"contracts/mocks/community/interfaces/ICommunityAdmin.sol",name:"ICommunityAdmin",methods:{"addCommunity(address[],uint256,uint256,uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"address[]",name:"_managers",type:"address[]"},{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"},{internalType:"uint256",name:"_minTranche",type:"uint256"},{internalType:"uint256",name:"_maxTranche",type:"uint256"}],name:"addCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"addManagerToCommunity(address,address)":{inputs:[{internalType:"contract ICommunity",name:"_community_",type:"address"},{internalType:"address",name:"_account_",type:"address"}],name:"addManagerToCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"cUSD()":{inputs:[],name:"cUSD",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"communities(address)":{inputs:[{internalType:"address",name:"_community",type:"address"}],name:"communities",outputs:[{internalType:"enum ICommunityAdmin.CommunityState",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"communityListAt(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"communityListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"communityListLength()":{inputs:[],name:"communityListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"communityProxyAdmin()":{inputs:[],name:"communityProxyAdmin",outputs:[{internalType:"contract ProxyAdmin",name:"",type:"address"}],stateMutability:"view",type:"function"},"communityTemplate()":{inputs:[],name:"communityTemplate",outputs:[{internalType:"contract ICommunity",name:"",type:"address"}],stateMutability:"view",type:"function"},"fundCommunity()":{inputs:[],name:"fundCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"migrateCommunity(address[],address)":{inputs:[{internalType:"address[]",name:"_managers",type:"address[]"},{internalType:"contract ICommunity",name:"_previousCommunity",type:"address"}],name:"migrateCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"removeCommunity(address)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"}],name:"removeCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function"},"transferFromCommunity(address,address,address,uint256)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferFromCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"treasury()":{inputs:[],name:"treasury",outputs:[{internalType:"contract ITreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"updateBeneficiaryParams(address,uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_decreaseStep",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"}],name:"updateBeneficiaryParams",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityParams(address,uint256,uint256)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"uint256",name:"_minTranche",type:"uint256"},{internalType:"uint256",name:"_maxTranche",type:"uint256"}],name:"updateCommunityParams",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityTemplate(address)":{inputs:[{internalType:"contract ICommunity",name:"_communityTemplate_",type:"address"}],name:"updateCommunityTemplate",outputs:[],stateMutability:"nonpayable",type:"function"},"updateProxyImplementation(address,address)":{inputs:[{internalType:"address",name:"_communityProxy",type:"address"},{internalType:"address",name:"_newLogic",type:"address"}],name:"updateProxyImplementation",outputs:[],stateMutability:"nonpayable",type:"function"},"updateTreasury(address)":{inputs:[{internalType:"contract ITreasury",name:"_newTreasury",type:"address"}],name:"updateTreasury",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/mocks/community/interfaces/ICommunityOld.sol:ICommunityOld":{source:"contracts/mocks/community/interfaces/ICommunityOld.sol",name:"ICommunityOld",methods:{"addBeneficiary(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"addBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function"},"addManager(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"addManager",outputs:[],stateMutability:"nonpayable",type:"function"},"baseInterval()":{inputs:[],name:"baseInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"beneficiaries(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"beneficiaries",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"cUSDAddress()":{inputs:[],name:"cUSDAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},"claim()":{inputs:[],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function"},"claimAmount()":{inputs:[],name:"claimAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"claimed(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"claimed",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"cooldown(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"cooldown",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"edit(uint256,uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"_claimAmount",type:"uint256"},{internalType:"uint256",name:"_maxClaim",type:"uint256"},{internalType:"uint256",name:"_baseInterval",type:"uint256"},{internalType:"uint256",name:"_incrementInterval",type:"uint256"}],name:"edit",outputs:[],stateMutability:"nonpayable",type:"function"},"hasRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"impactMarketAddress()":{inputs:[],name:"impactMarketAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},"incrementInterval()":{inputs:[],name:"incrementInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"lastInterval(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"lastInterval",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"lock()":{inputs:[],name:"lock",outputs:[],stateMutability:"nonpayable",type:"function"},"lockBeneficiary(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"lockBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function"},"locked()":{inputs:[],name:"locked",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},"maxClaim()":{inputs:[],name:"maxClaim",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"migrateFunds(address,address)":{inputs:[{internalType:"address",name:"_newCommunity",type:"address"},{internalType:"address",name:"_newCommunityManager",type:"address"}],name:"migrateFunds",outputs:[],stateMutability:"nonpayable",type:"function"},"previousCommunityContract()":{inputs:[],name:"previousCommunityContract",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},"removeBeneficiary(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"removeBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function"},"removeManager(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"removeManager",outputs:[],stateMutability:"nonpayable",type:"function"},"unlock()":{inputs:[],name:"unlock",outputs:[],stateMutability:"nonpayable",type:"function"},"unlockBeneficiary(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"unlockBeneficiary",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/mocks/donationMiner/DonationMinerImplementationOld.sol:DonationMinerImplementationOld":{source:"contracts/mocks/donationMiner/DonationMinerImplementationOld.sol",name:"DonationMinerImplementationOld",events:{"AgainstPeriodsUpdated(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldAgainstPeriods",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newAgainstPeriods",type:"uint256"}],name:"AgainstPeriodsUpdated",type:"event",params:{newAgainstPeriods:"New againstPeriods value",oldAgainstPeriods:"Old againstPeriods value"},notice:"Triggered when the againstPeriods value has been updated"},"ClaimDelayUpdated(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldClaimDelay",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newClaimDelay",type:"uint256"}],name:"ClaimDelayUpdated",type:"event",params:{newClaimDelay:"New claimDelay value",oldClaimDelay:"Old claimDelay value"},notice:"Triggered when the claimDelay value has been updated"},"DonationAdded(uint256,address,uint256,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"donationId",type:"uint256"},{indexed:!0,internalType:"address",name:"donor",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!0,internalType:"address",name:"target",type:"address"}],name:"DonationAdded",type:"event",params:{amount:"Value of the donation",donationId:"Id of the donation",donor:"Address of the donner",target:"Address of the receiver (community or treasury)                    or address of the DonationMiner contract otherwise"},notice:"Triggered when a donation has been added"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Paused(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Paused",type:"event"},"RewardClaimed(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"donor",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"RewardClaimed",type:"event",params:{amount:"Value of the reward",donor:"Address of the donner"},notice:"Triggered when a donor has claimed his reward"},"RewardClaimedPartial(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"donor",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lastRewardPeriod",type:"uint256"}],name:"RewardClaimedPartial",type:"event",params:{amount:"Value of the reward",donor:"Address of the donner",lastRewardPeriod:"Number of the last reward period for witch tha claim was made"},notice:"Triggered when a donor has claimed his reward"},"RewardPeriodParamsUpdated(uint256,uint256,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldRewardPeriodSize",type:"uint256"},{indexed:!1,internalType:"uint256",name:"oldDecayNumerator",type:"uint256"},{indexed:!1,internalType:"uint256",name:"oldDecayDenominator",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newRewardPeriodSize",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDecayNumerator",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDecayDenominator",type:"uint256"}],name:"RewardPeriodParamsUpdated",type:"event",params:{newDecayDenominator:"New decayDenominator value For further information regarding each parameter, see *DonationMiner* smart contract initialize method.",newDecayNumerator:"New decayNumerator value",newRewardPeriodSize:"New rewardPeriodSize value",oldDecayDenominator:"Old decayDenominator value",oldDecayNumerator:"Old decayNumerator value",oldRewardPeriodSize:"Old rewardPeriodSize value"},notice:"Triggered when reward period params have been updated"},"TransferERC20(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TransferERC20",type:"event",params:{amount:"Amount of the transaction",to:"Address of the receiver",token:"ERC20 token address"},notice:"Triggered when an amount of an ERC20 has been transferred from this contract to an address"},"TreasuryUpdated(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"oldTreasury",type:"address"},{indexed:!0,internalType:"address",name:"newTreasury",type:"address"}],name:"TreasuryUpdated",type:"event",params:{newTreasury:"New treasury address",oldTreasury:"Old treasury address"},notice:"Triggered when the treasury address has been updated"},"Unpaused(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Unpaused",type:"event"}},methods:{"PACT()":{inputs:[],name:"PACT",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"againstPeriods()":{inputs:[],name:"againstPeriods",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"cUSD()":{inputs:[],name:"cUSD",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"calculateClaimableRewards(address)":{inputs:[{internalType:"address",name:"_donorAddress",type:"address"}],name:"calculateClaimableRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_donorAddress:"address of the donor"},returns:{_0:"uint256 sum of all donor's rewards that has not been claimed"},notice:"Calculates the rewards from ended reward periods of a donor"},"calculateClaimableRewardsByPeriodNumber(address,uint256)":{inputs:[{internalType:"address",name:"_donorAddress",type:"address"},{internalType:"uint256",name:"_lastPeriodNumber",type:"uint256"}],name:"calculateClaimableRewardsByPeriodNumber",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_donorAddress:"address of the donor",_lastPeriodNumber:"last reward period number to be computed"},returns:{_0:"uint256 sum of all donor's rewards that has not been claimed until _lastPeriodNumber"},notice:"Calculates the rewards from ended reward periods of a donor"},"claimDelay()":{inputs:[],name:"claimDelay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"claimRewards()":{inputs:[],name:"claimRewards",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Transfers to the sender the rewards"},"claimRewardsPartial(uint256)":{inputs:[{internalType:"uint256",name:"_lastPeriodNumber",type:"uint256"}],name:"claimRewardsPartial",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Transfers to the sender the rewards"},"decayDenominator()":{inputs:[],name:"decayDenominator",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"decayNumerator()":{inputs:[],name:"decayNumerator",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donate(uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"donate",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"Amount of cUSD tokens to deposit."},notice:"Transfers cUSD tokens to the treasury contract"},"donateToCommunity(address,uint256)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"donateToCommunity",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers cUSD tokens to the community contract",params:{_amount:"amount of cUSD tokens to deposit",_community:"address of the community"}},"donationCount()":{inputs:[],name:"donationCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donations(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"donations",outputs:[{internalType:"address",name:"donor",type:"address"},{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"rewardPeriod",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"contract IERC20Upgradeable",name:"token",type:"address"},{internalType:"uint256",name:"tokenPrice",type:"uint256"}],stateMutability:"view",type:"function"},"donorRewardPeriod(address,uint256)":{inputs:[{internalType:"address",name:"_donor",type:"address"},{internalType:"uint256",name:"_rewardPeriodIndex",type:"uint256"}],name:"donorRewardPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_donor:"address of the donor",_rewardPeriodIndex:"index of the reward period"},returns:{_0:"uint256 number of the reward period"},notice:"Returns a reward period number from a donor reward period list"},"donors(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"donors",outputs:[{internalType:"uint256",name:"lastClaim",type:"uint256"},{internalType:"uint256",name:"rewardPeriodsCount",type:"uint256"},{internalType:"uint256",name:"lastClaimPeriod",type:"uint256"}],stateMutability:"view",type:"function"},"estimateClaimableReward(address)":{inputs:[{internalType:"address",name:"_donorAddress",type:"address"}],name:"estimateClaimableReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_donorAddress:"address of the donor"},returns:{_0:"uint256 reward that donor will receive in current reward period if there isn't another donation"},notice:"Calculates the estimate reward of a donor for current reward period"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function",notice:"Returns the current implementation version"},"initialize(address,address,address,uint256,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_cUSD",type:"address"},{internalType:"contract IERC20Upgradeable",name:"_PACT",type:"address"},{internalType:"contract ITreasury",name:"_treasury",type:"address"},{internalType:"uint256",name:"_firstRewardPerBlock",type:"uint256"},{internalType:"uint256",name:"_rewardPeriodSize",type:"uint256"},{internalType:"uint256",name:"_startingBlock",type:"uint256"},{internalType:"uint256",name:"_decayNumerator",type:"uint256"},{internalType:"uint256",name:"_decayDenominator",type:"uint256"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",params:{_PACT:"Address of the PACT Token",_cUSD:"Address of the cUSD token",_decayDenominator:"Decay denominator used for calculating the new reward per block based on the previous reward per block",_decayNumerator:"Decay numerator used for calculating the new reward per block based on the previous reward per block",_firstRewardPerBlock:"Number of PACTs given for each block                              from the first reward period",_rewardPeriodSize:"Number of blocks of the reward period",_startingBlock:"First block of the first reward period",_treasury:"Address of the Treasury"},notice:"Used to initialize a new DonationMiner contract"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"paused()":{inputs:[],name:"paused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns true if the contract is paused, and false otherwise."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"rewardPeriodCount()":{inputs:[],name:"rewardPeriodCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriodDonorAmount(uint256,address)":{inputs:[{internalType:"uint256",name:"_period",type:"uint256"},{internalType:"address",name:"_donor",type:"address"}],name:"rewardPeriodDonorAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_donor:"address of the donor",_period:"number of the reward period"},returns:{_0:"uint256 amount of cUSD donated by the user in this reward period"},notice:"Returns the amount of cUSD donated by a user in a reward period"},"rewardPeriodSize()":{inputs:[],name:"rewardPeriodSize",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriods(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"rewardPeriods",outputs:[{internalType:"uint256",name:"rewardPerBlock",type:"uint256"},{internalType:"uint256",name:"rewardAmount",type:"uint256"},{internalType:"uint256",name:"startBlock",type:"uint256"},{internalType:"uint256",name:"endBlock",type:"uint256"},{internalType:"uint256",name:"donationsAmount",type:"uint256"},{internalType:"uint256",name:"againstPeriods",type:"uint256"}],stateMutability:"view",type:"function"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"amount of the transaction",_to:"address of the receiver",_token:"address of the ERC20 token"},notice:"Transfers an amount of an ERC20 from this contract to an address"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"treasury()":{inputs:[],name:"treasury",outputs:[{internalType:"contract ITreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"updateAgainstPeriods(uint256)":{inputs:[{internalType:"uint256",name:"_newAgainstPeriods",type:"uint256"}],name:"updateAgainstPeriods",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newAgainstPeriods:"Number of reward periods for the backward computation"},notice:"Updates againstPeriods value"},"updateClaimDelay(uint256)":{inputs:[{internalType:"uint256",name:"_newClaimDelay",type:"uint256"}],name:"updateClaimDelay",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newClaimDelay:"Number of reward periods a donor has to wait after                            a donation until he will be able to claim his reward"},notice:"Updates claimDelay value"},"updateRewardPeriodParams(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"_newRewardPeriodSize",type:"uint256"},{internalType:"uint256",name:"_newDecayNumerator",type:"uint256"},{internalType:"uint256",name:"_newDecayDenominator",type:"uint256"}],name:"updateRewardPeriodParams",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newDecayDenominator:"value of new decayDenominator",_newDecayNumerator:"value of new decayNumerator",_newRewardPeriodSize:"value of new rewardPeriodSize"},notice:"Updates reward period default params"},"updateTreasury(address)":{inputs:[{internalType:"contract ITreasury",name:"_newTreasury",type:"address"}],name:"updateTreasury",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newTreasury:"address of new treasury_ contract"},notice:"Updates Treasury address"}}},"contracts/mocks/donationMiner/interfaces/DonationMinerStorageV1Old.sol:DonationMinerStorageV1Old":{source:"contracts/mocks/donationMiner/interfaces/DonationMinerStorageV1Old.sol",name:"DonationMinerStorageV1Old",title:"Storage for DonationMiner",notice:"For future upgrades, do not change DonationMinerStorageV1. Create a new contract which implements DonationMinerStorageV1 and following the naming convention DonationMinerStorageVX.",methods:{"PACT()":{inputs:[],name:"PACT",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"againstPeriods()":{inputs:[],name:"againstPeriods",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"cUSD()":{inputs:[],name:"cUSD",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"calculateClaimableRewards(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"calculateClaimableRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"calculateClaimableRewardsByPeriodNumber(address,uint256)":{inputs:[{internalType:"address",name:"_donor",type:"address"},{internalType:"uint256",name:"_lastPeriodNumber",type:"uint256"}],name:"calculateClaimableRewardsByPeriodNumber",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"claimDelay()":{inputs:[],name:"claimDelay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"claimRewards()":{inputs:[],name:"claimRewards",outputs:[],stateMutability:"nonpayable",type:"function"},"claimRewardsPartial(uint256)":{inputs:[{internalType:"uint256",name:"_lastPeriodNumber",type:"uint256"}],name:"claimRewardsPartial",outputs:[],stateMutability:"nonpayable",type:"function"},"decayDenominator()":{inputs:[],name:"decayDenominator",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"decayNumerator()":{inputs:[],name:"decayNumerator",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donate(uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"donate",outputs:[],stateMutability:"nonpayable",type:"function"},"donateToCommunity(address,uint256)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"donateToCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"donationCount()":{inputs:[],name:"donationCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donations(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"donations",outputs:[{internalType:"address",name:"donor",type:"address"},{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"rewardPeriod",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"contract IERC20Upgradeable",name:"token",type:"address"},{internalType:"uint256",name:"tokenPrice",type:"uint256"}],stateMutability:"view",type:"function"},"donorRewardPeriod(address,uint256)":{inputs:[{internalType:"address",name:"_donor",type:"address"},{internalType:"uint256",name:"_rewardPeriodIndex",type:"uint256"}],name:"donorRewardPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donors(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"donors",outputs:[{internalType:"uint256",name:"lastClaim",type:"uint256"},{internalType:"uint256",name:"rewardPeriodsCount",type:"uint256"},{internalType:"uint256",name:"lastClaimPeriod",type:"uint256"}],stateMutability:"view",type:"function"},"estimateClaimableReward(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"estimateClaimableReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"rewardPeriodCount()":{inputs:[],name:"rewardPeriodCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriodDonorAmount(uint256,address)":{inputs:[{internalType:"uint256",name:"_period",type:"uint256"},{internalType:"address",name:"_donor",type:"address"}],name:"rewardPeriodDonorAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriodSize()":{inputs:[],name:"rewardPeriodSize",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriods(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"rewardPeriods",outputs:[{internalType:"uint256",name:"rewardPerBlock",type:"uint256"},{internalType:"uint256",name:"rewardAmount",type:"uint256"},{internalType:"uint256",name:"startBlock",type:"uint256"},{internalType:"uint256",name:"endBlock",type:"uint256"},{internalType:"uint256",name:"donationsAmount",type:"uint256"},{internalType:"uint256",name:"againstPeriods",type:"uint256"}],stateMutability:"view",type:"function"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function"},"treasury()":{inputs:[],name:"treasury",outputs:[{internalType:"contract ITreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"updateAgainstPeriods(uint256)":{inputs:[{internalType:"uint256",name:"_newAgainstPeriods",type:"uint256"}],name:"updateAgainstPeriods",outputs:[],stateMutability:"nonpayable",type:"function"},"updateClaimDelay(uint256)":{inputs:[{internalType:"uint256",name:"_newClaimDelay",type:"uint256"}],name:"updateClaimDelay",outputs:[],stateMutability:"nonpayable",type:"function"},"updateRewardPeriodParams(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"_newRewardPeriodSize",type:"uint256"},{internalType:"uint256",name:"_newDecayNumerator",type:"uint256"},{internalType:"uint256",name:"_newDecayDenominator",type:"uint256"}],name:"updateRewardPeriodParams",outputs:[],stateMutability:"nonpayable",type:"function"},"updateTreasury(address)":{inputs:[{internalType:"contract ITreasury",name:"_newTreasury",type:"address"}],name:"updateTreasury",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/mocks/donationMiner/interfaces/DonationMinerStorageV2Old.sol:DonationMinerStorageV2Old":{source:"contracts/mocks/donationMiner/interfaces/DonationMinerStorageV2Old.sol",name:"DonationMinerStorageV2Old",title:"Storage for DonationMiner",notice:"For future upgrades, do not change DonationMinerStorageV2. Create a new contract which implements DonationMinerStorageV2 and following the naming convention DonationMinerStorageVX.",methods:{"PACT()":{inputs:[],name:"PACT",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"againstPeriods()":{inputs:[],name:"againstPeriods",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"cUSD()":{inputs:[],name:"cUSD",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"calculateClaimableRewards(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"calculateClaimableRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"calculateClaimableRewardsByPeriodNumber(address,uint256)":{inputs:[{internalType:"address",name:"_donor",type:"address"},{internalType:"uint256",name:"_lastPeriodNumber",type:"uint256"}],name:"calculateClaimableRewardsByPeriodNumber",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"claimDelay()":{inputs:[],name:"claimDelay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"claimRewards()":{inputs:[],name:"claimRewards",outputs:[],stateMutability:"nonpayable",type:"function"},"claimRewardsPartial(uint256)":{inputs:[{internalType:"uint256",name:"_lastPeriodNumber",type:"uint256"}],name:"claimRewardsPartial",outputs:[],stateMutability:"nonpayable",type:"function"},"decayDenominator()":{inputs:[],name:"decayDenominator",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"decayNumerator()":{inputs:[],name:"decayNumerator",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donate(uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"donate",outputs:[],stateMutability:"nonpayable",type:"function"},"donateToCommunity(address,uint256)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"donateToCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"donationCount()":{inputs:[],name:"donationCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donations(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"donations",outputs:[{internalType:"address",name:"donor",type:"address"},{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"rewardPeriod",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"contract IERC20Upgradeable",name:"token",type:"address"},{internalType:"uint256",name:"tokenPrice",type:"uint256"}],stateMutability:"view",type:"function"},"donorRewardPeriod(address,uint256)":{inputs:[{internalType:"address",name:"_donor",type:"address"},{internalType:"uint256",name:"_rewardPeriodIndex",type:"uint256"}],name:"donorRewardPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donors(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"donors",outputs:[{internalType:"uint256",name:"lastClaim",type:"uint256"},{internalType:"uint256",name:"rewardPeriodsCount",type:"uint256"},{internalType:"uint256",name:"lastClaimPeriod",type:"uint256"}],stateMutability:"view",type:"function"},"estimateClaimableReward(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"estimateClaimableReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"rewardPeriodCount()":{inputs:[],name:"rewardPeriodCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriodDonorAmount(uint256,address)":{inputs:[{internalType:"uint256",name:"_period",type:"uint256"},{internalType:"address",name:"_donor",type:"address"}],name:"rewardPeriodDonorAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriodSize()":{inputs:[],name:"rewardPeriodSize",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriods(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"rewardPeriods",outputs:[{internalType:"uint256",name:"rewardPerBlock",type:"uint256"},{internalType:"uint256",name:"rewardAmount",type:"uint256"},{internalType:"uint256",name:"startBlock",type:"uint256"},{internalType:"uint256",name:"endBlock",type:"uint256"},{internalType:"uint256",name:"donationsAmount",type:"uint256"},{internalType:"uint256",name:"againstPeriods",type:"uint256"}],stateMutability:"view",type:"function"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function"},"treasury()":{inputs:[],name:"treasury",outputs:[{internalType:"contract ITreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"updateAgainstPeriods(uint256)":{inputs:[{internalType:"uint256",name:"_newAgainstPeriods",type:"uint256"}],name:"updateAgainstPeriods",outputs:[],stateMutability:"nonpayable",type:"function"},"updateClaimDelay(uint256)":{inputs:[{internalType:"uint256",name:"_newClaimDelay",type:"uint256"}],name:"updateClaimDelay",outputs:[],stateMutability:"nonpayable",type:"function"},"updateRewardPeriodParams(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"_newRewardPeriodSize",type:"uint256"},{internalType:"uint256",name:"_newDecayNumerator",type:"uint256"},{internalType:"uint256",name:"_newDecayDenominator",type:"uint256"}],name:"updateRewardPeriodParams",outputs:[],stateMutability:"nonpayable",type:"function"},"updateTreasury(address)":{inputs:[{internalType:"contract ITreasury",name:"_newTreasury",type:"address"}],name:"updateTreasury",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/mocks/donationMiner/interfaces/DonationMinerStorageV3Old.sol:DonationMinerStorageV3Old":{source:"contracts/mocks/donationMiner/interfaces/DonationMinerStorageV3Old.sol",name:"DonationMinerStorageV3Old",title:"Storage for DonationMiner",notice:"For future upgrades, do not change DonationMinerStorageV2. Create a new contract which implements DonationMinerStorageV3 and following the naming convention DonationMinerStorageVX.",methods:{"PACT()":{inputs:[],name:"PACT",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"againstPeriods()":{inputs:[],name:"againstPeriods",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"cUSD()":{inputs:[],name:"cUSD",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"calculateClaimableRewards(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"calculateClaimableRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"calculateClaimableRewardsByPeriodNumber(address,uint256)":{inputs:[{internalType:"address",name:"_donor",type:"address"},{internalType:"uint256",name:"_lastPeriodNumber",type:"uint256"}],name:"calculateClaimableRewardsByPeriodNumber",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"claimDelay()":{inputs:[],name:"claimDelay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"claimRewards()":{inputs:[],name:"claimRewards",outputs:[],stateMutability:"nonpayable",type:"function"},"claimRewardsPartial(uint256)":{inputs:[{internalType:"uint256",name:"_lastPeriodNumber",type:"uint256"}],name:"claimRewardsPartial",outputs:[],stateMutability:"nonpayable",type:"function"},"decayDenominator()":{inputs:[],name:"decayDenominator",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"decayNumerator()":{inputs:[],name:"decayNumerator",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donate(uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"donate",outputs:[],stateMutability:"nonpayable",type:"function"},"donateToCommunity(address,uint256)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"donateToCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"donationCount()":{inputs:[],name:"donationCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donations(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"donations",outputs:[{internalType:"address",name:"donor",type:"address"},{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"rewardPeriod",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"contract IERC20Upgradeable",name:"token",type:"address"},{internalType:"uint256",name:"tokenPrice",type:"uint256"}],stateMutability:"view",type:"function"},"donorRewardPeriod(address,uint256)":{inputs:[{internalType:"address",name:"_donor",type:"address"},{internalType:"uint256",name:"_rewardPeriodIndex",type:"uint256"}],name:"donorRewardPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donors(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"donors",outputs:[{internalType:"uint256",name:"lastClaim",type:"uint256"},{internalType:"uint256",name:"rewardPeriodsCount",type:"uint256"},{internalType:"uint256",name:"lastClaimPeriod",type:"uint256"}],stateMutability:"view",type:"function"},"estimateClaimableReward(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"estimateClaimableReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"rewardPeriodCount()":{inputs:[],name:"rewardPeriodCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriodDonorAmount(uint256,address)":{inputs:[{internalType:"uint256",name:"_period",type:"uint256"},{internalType:"address",name:"_donor",type:"address"}],name:"rewardPeriodDonorAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriodSize()":{inputs:[],name:"rewardPeriodSize",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriods(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"rewardPeriods",outputs:[{internalType:"uint256",name:"rewardPerBlock",type:"uint256"},{internalType:"uint256",name:"rewardAmount",type:"uint256"},{internalType:"uint256",name:"startBlock",type:"uint256"},{internalType:"uint256",name:"endBlock",type:"uint256"},{internalType:"uint256",name:"donationsAmount",type:"uint256"},{internalType:"uint256",name:"againstPeriods",type:"uint256"}],stateMutability:"view",type:"function"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function"},"treasury()":{inputs:[],name:"treasury",outputs:[{internalType:"contract ITreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"updateAgainstPeriods(uint256)":{inputs:[{internalType:"uint256",name:"_newAgainstPeriods",type:"uint256"}],name:"updateAgainstPeriods",outputs:[],stateMutability:"nonpayable",type:"function"},"updateClaimDelay(uint256)":{inputs:[{internalType:"uint256",name:"_newClaimDelay",type:"uint256"}],name:"updateClaimDelay",outputs:[],stateMutability:"nonpayable",type:"function"},"updateRewardPeriodParams(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"_newRewardPeriodSize",type:"uint256"},{internalType:"uint256",name:"_newDecayNumerator",type:"uint256"},{internalType:"uint256",name:"_newDecayDenominator",type:"uint256"}],name:"updateRewardPeriodParams",outputs:[],stateMutability:"nonpayable",type:"function"},"updateTreasury(address)":{inputs:[{internalType:"contract ITreasury",name:"_newTreasury",type:"address"}],name:"updateTreasury",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/mocks/donationMiner/interfaces/IDonationMinerOld.sol:IDonationMinerOld":{source:"contracts/mocks/donationMiner/interfaces/IDonationMinerOld.sol",name:"IDonationMinerOld",methods:{"PACT()":{inputs:[],name:"PACT",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"againstPeriods()":{inputs:[],name:"againstPeriods",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"cUSD()":{inputs:[],name:"cUSD",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"calculateClaimableRewards(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"calculateClaimableRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"calculateClaimableRewardsByPeriodNumber(address,uint256)":{inputs:[{internalType:"address",name:"_donor",type:"address"},{internalType:"uint256",name:"_lastPeriodNumber",type:"uint256"}],name:"calculateClaimableRewardsByPeriodNumber",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"claimDelay()":{inputs:[],name:"claimDelay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"claimRewards()":{inputs:[],name:"claimRewards",outputs:[],stateMutability:"nonpayable",type:"function"},"claimRewardsPartial(uint256)":{inputs:[{internalType:"uint256",name:"_lastPeriodNumber",type:"uint256"}],name:"claimRewardsPartial",outputs:[],stateMutability:"nonpayable",type:"function"},"decayDenominator()":{inputs:[],name:"decayDenominator",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"decayNumerator()":{inputs:[],name:"decayNumerator",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donate(uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"donate",outputs:[],stateMutability:"nonpayable",type:"function"},"donateToCommunity(address,uint256)":{inputs:[{internalType:"contract ICommunity",name:"_community",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"donateToCommunity",outputs:[],stateMutability:"nonpayable",type:"function"},"donationCount()":{inputs:[],name:"donationCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donations(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"donations",outputs:[{internalType:"address",name:"donor",type:"address"},{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"rewardPeriod",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"contract IERC20Upgradeable",name:"token",type:"address"},{internalType:"uint256",name:"tokenPrice",type:"uint256"}],stateMutability:"view",type:"function"},"donorRewardPeriod(address,uint256)":{inputs:[{internalType:"address",name:"_donor",type:"address"},{internalType:"uint256",name:"_rewardPeriodIndex",type:"uint256"}],name:"donorRewardPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donors(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"donors",outputs:[{internalType:"uint256",name:"rewardPeriodsCount",type:"uint256"},{internalType:"uint256",name:"lastClaim",type:"uint256"},{internalType:"uint256",name:"lastClaimPeriod",type:"uint256"}],stateMutability:"view",type:"function"},"estimateClaimableReward(address)":{inputs:[{internalType:"address",name:"_donor",type:"address"}],name:"estimateClaimableReward",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"rewardPeriodCount()":{inputs:[],name:"rewardPeriodCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriodDonorAmount(uint256,address)":{inputs:[{internalType:"uint256",name:"_period",type:"uint256"},{internalType:"address",name:"_donor",type:"address"}],name:"rewardPeriodDonorAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriodSize()":{inputs:[],name:"rewardPeriodSize",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rewardPeriods(uint256)":{inputs:[{internalType:"uint256",name:"_period",type:"uint256"}],name:"rewardPeriods",outputs:[{internalType:"uint256",name:"rewardPerBlock",type:"uint256"},{internalType:"uint256",name:"rewardAmount",type:"uint256"},{internalType:"uint256",name:"startBlock",type:"uint256"},{internalType:"uint256",name:"endBlock",type:"uint256"},{internalType:"uint256",name:"donationsAmount",type:"uint256"},{internalType:"uint256",name:"againstPeriods",type:"uint256"}],stateMutability:"view",type:"function"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function"},"treasury()":{inputs:[],name:"treasury",outputs:[{internalType:"contract ITreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"updateAgainstPeriods(uint256)":{inputs:[{internalType:"uint256",name:"_newAgainstPeriods",type:"uint256"}],name:"updateAgainstPeriods",outputs:[],stateMutability:"nonpayable",type:"function"},"updateClaimDelay(uint256)":{inputs:[{internalType:"uint256",name:"_newClaimDelay",type:"uint256"}],name:"updateClaimDelay",outputs:[],stateMutability:"nonpayable",type:"function"},"updateRewardPeriodParams(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"_newRewardPeriodSize",type:"uint256"},{internalType:"uint256",name:"_newDecayNumerator",type:"uint256"},{internalType:"uint256",name:"_newDecayDenominator",type:"uint256"}],name:"updateRewardPeriodParams",outputs:[],stateMutability:"nonpayable",type:"function"},"updateTreasury(address)":{inputs:[{internalType:"contract ITreasury",name:"_newTreasury",type:"address"}],name:"updateTreasury",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/mocks/governor/PACTDelegateOld.sol:PACTDelegateOld":{source:"contracts/mocks/governor/PACTDelegateOld.sol",name:"PACTDelegateOld",events:{"NewAdmin(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"NewAdmin",type:"event",notice:"Emitted when pendingAdmin is accepted, which means admin is updated"},"NewImplementation(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldImplementation",type:"address"},{indexed:!1,internalType:"address",name:"newImplementation",type:"address"}],name:"NewImplementation",type:"event",notice:"Emitted when implementation is changed"},"NewPendingAdmin(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldPendingAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newPendingAdmin",type:"address"}],name:"NewPendingAdmin",type:"event",notice:"Emitted when pendingAdmin is changed"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"ProposalCanceled(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"id",type:"uint256"}],name:"ProposalCanceled",type:"event",notice:"An event emitted when a proposal has been canceled"},"ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"address",name:"proposer",type:"address"},{indexed:!1,internalType:"address[]",name:"targets",type:"address[]"},{indexed:!1,internalType:"uint256[]",name:"values",type:"uint256[]"},{indexed:!1,internalType:"string[]",name:"signatures",type:"string[]"},{indexed:!1,internalType:"bytes[]",name:"calldatas",type:"bytes[]"},{indexed:!1,internalType:"uint256",name:"startBlock",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endBlock",type:"uint256"},{indexed:!1,internalType:"string",name:"description",type:"string"}],name:"ProposalCreated",type:"event",notice:"An event emitted when a new proposal is created"},"ProposalExecuted(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"id",type:"uint256"}],name:"ProposalExecuted",type:"event",notice:"An event emitted when a proposal has been executed in the Timelock"},"ProposalQueued(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"eta",type:"uint256"}],name:"ProposalQueued",type:"event",notice:"An event emitted when a proposal has been queued in the Timelock"},"ProposalThresholdSet(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldProposalThreshold",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newProposalThreshold",type:"uint256"}],name:"ProposalThresholdSet",type:"event",notice:"Emitted when proposal threshold is set"},"QuorumVotesSet(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldQuorumVotes",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newQuorumVotes",type:"uint256"}],name:"QuorumVotesSet",type:"event",notice:"An event emitted when the quorum votes is set"},"ReleaseTokenSet(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldReleaseToken",type:"address"},{indexed:!1,internalType:"address",name:"newReleaseToken",type:"address"}],name:"ReleaseTokenSet",type:"event",notice:"Emitted when release token is set"},"TransferERC20(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TransferERC20",type:"event",notice:"Triggered when an amount of an ERC20 has been transferred from this contract to an address"},"VoteCast(address,uint256,uint8,uint256,string)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"voter",type:"address"},{indexed:!1,internalType:"uint256",name:"proposalId",type:"uint256"},{indexed:!1,internalType:"uint8",name:"support",type:"uint8"},{indexed:!1,internalType:"uint256",name:"votes",type:"uint256"},{indexed:!1,internalType:"string",name:"reason",type:"string"}],name:"VoteCast",type:"event",notice:"An event emitted when a vote has been cast on a proposal"},"VotingDelaySet(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldVotingDelay",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newVotingDelay",type:"uint256"}],name:"VotingDelaySet",type:"event",notice:"An event emitted when the voting delay is set"},"VotingPeriodSet(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldVotingPeriod",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newVotingPeriod",type:"uint256"}],name:"VotingPeriodSet",type:"event",notice:"An event emitted when the voting period is set"}},methods:{"BALLOT_TYPEHASH()":{inputs:[],name:"BALLOT_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",notice:"The EIP-712 typehash for the ballot struct used by the contract"},"DOMAIN_TYPEHASH()":{inputs:[],name:"DOMAIN_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",notice:"The EIP-712 typehash for the contract's domain"},"MAX_PROPOSAL_THRESHOLD()":{inputs:[],name:"MAX_PROPOSAL_THRESHOLD",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The maximum setable proposal threshold"},"MAX_VOTING_DELAY()":{inputs:[],name:"MAX_VOTING_DELAY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The max setable voting delay"},"MAX_VOTING_PERIOD()":{inputs:[],name:"MAX_VOTING_PERIOD",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The max setable voting period"},"MIN_PROPOSAL_THRESHOLD()":{inputs:[],name:"MIN_PROPOSAL_THRESHOLD",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The minimum setable proposal threshold"},"MIN_VOTING_DELAY()":{inputs:[],name:"MIN_VOTING_DELAY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The min setable voting delay"},"MIN_VOTING_PERIOD()":{inputs:[],name:"MIN_VOTING_PERIOD",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The minimum setable voting period"},"NAME()":{inputs:[],name:"NAME",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",notice:"The name of this contract"},"PROPOSAL_MAX_OPERATIONS()":{inputs:[],name:"PROPOSAL_MAX_OPERATIONS",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The maximum number of actions that can be included in a proposal"},"_setProposalThreshold(uint256)":{inputs:[{internalType:"uint256",name:"_newProposalThreshold",type:"uint256"}],name:"_setProposalThreshold",outputs:[],stateMutability:"nonpayable",type:"function",details:"_newProposalThreshold must be greater than the hardcoded min",params:{_newProposalThreshold:"new proposal threshold"},notice:"Owner function for setting the proposal threshold"},"_setQuorumVotes(uint256)":{inputs:[{internalType:"uint256",name:"_newQuorumVotes",type:"uint256"}],name:"_setQuorumVotes",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newQuorumVotes:"new quorum votes"},notice:"Owner function for setting the quorum votes"},"_setVotingDelay(uint256)":{inputs:[{internalType:"uint256",name:"_newVotingDelay",type:"uint256"}],name:"_setVotingDelay",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newVotingDelay:"new voting delay, in blocks"},notice:"Owner function for setting the voting delay"},"_setVotingPeriod(uint256)":{inputs:[{internalType:"uint256",name:"_newVotingPeriod",type:"uint256"}],name:"_setVotingPeriod",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newVotingPeriod:"new voting period, in blocks"},notice:"Owner function for setting the voting period"},"cancel(uint256)":{inputs:[{internalType:"uint256",name:"_proposalId",type:"uint256"}],name:"cancel",outputs:[],stateMutability:"nonpayable",type:"function",params:{_proposalId:"The id of the proposal to cancel"},notice:"Cancels a proposal only if sender is the proposer, or proposer delegates dropped below proposal threshold"},"castVote(uint256,uint8)":{inputs:[{internalType:"uint256",name:"_proposalId",type:"uint256"},{internalType:"uint8",name:"_support",type:"uint8"}],name:"castVote",outputs:[],stateMutability:"nonpayable",type:"function",params:{_proposalId:"The id of the proposal to vote on",_support:"The support value for the vote. 0=against, 1=for, 2=abstain"},notice:"Cast a vote for a proposal"},"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)":{inputs:[{internalType:"uint256",name:"_proposalId",type:"uint256"},{internalType:"uint8",name:"_support",type:"uint8"},{internalType:"uint8",name:"_v",type:"uint8"},{internalType:"bytes32",name:"_r",type:"bytes32"},{internalType:"bytes32",name:"_s",type:"bytes32"}],name:"castVoteBySig",outputs:[],stateMutability:"nonpayable",type:"function",details:"External function that accepts EIP-712 signatures for voting on proposals.",notice:"Cast a vote for a proposal by signature"},"castVoteWithReason(uint256,uint8,string)":{inputs:[{internalType:"uint256",name:"_proposalId",type:"uint256"},{internalType:"uint8",name:"_support",type:"uint8"},{internalType:"string",name:"_reason",type:"string"}],name:"castVoteWithReason",outputs:[],stateMutability:"nonpayable",type:"function",params:{_proposalId:"The id of the proposal to vote on",_reason:"The reason given for the vote by the voter",_support:"The support value for the vote. 0=against, 1=for, 2=abstain"},notice:"Cast a vote for a proposal with a reason"},"execute(uint256)":{inputs:[{internalType:"uint256",name:"_proposalId",type:"uint256"}],name:"execute",outputs:[],stateMutability:"payable",type:"function",params:{_proposalId:"The id of the proposal to execute"},notice:"Executes a queued proposal if eta has passed"},"getActions(uint256)":{inputs:[{internalType:"uint256",name:"_proposalId",type:"uint256"}],name:"getActions",outputs:[{internalType:"address[]",name:"targets",type:"address[]"},{internalType:"uint256[]",name:"values",type:"uint256[]"},{internalType:"string[]",name:"signatures",type:"string[]"},{internalType:"bytes[]",name:"calldatas",type:"bytes[]"}],stateMutability:"view",type:"function",params:{_proposalId:"Proposal to query."},returns:{calldatas:"Calldatas for proposal calls.",signatures:"Function signatures for proposal calls.",targets:"Target addresses for proposal calls.",values:"Eth values for proposal calls."},notice:"Gets actions of a proposal."},"getReceipt(uint256,address)":{inputs:[{internalType:"uint256",name:"_proposalId",type:"uint256"},{internalType:"address",name:"_voter",type:"address"}],name:"getReceipt",outputs:[{components:[{internalType:"bool",name:"hasVoted",type:"bool"},{internalType:"uint8",name:"support",type:"uint8"},{internalType:"uint96",name:"votes",type:"uint96"}],internalType:"struct PACTDelegateStorageV1.Receipt",name:"",type:"tuple"}],stateMutability:"view",type:"function",params:{_proposalId:"the id of proposal",_voter:"The address of the voter"},returns:{_0:"The voting receipt"},notice:"Gets the receipt for a voter on a given proposal"},"initialize(address,address,address,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"address",name:"_timelock",type:"address"},{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_releaseToken",type:"address"},{internalType:"uint256",name:"_votingPeriod",type:"uint256"},{internalType:"uint256",name:"_votingDelay",type:"uint256"},{internalType:"uint256",name:"_proposalThreshold",type:"uint256"},{internalType:"uint256",name:"_quorumVotes",type:"uint256"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",params:{_proposalThreshold:"The initial proposal threshold",_quorumVotes:"The initial quorum votes",_releaseToken:'The address of the "Release" voting token. If none, specify the zero address.',_timelock:"The address of the Timelock",_token:"The address of the voting token",_votingDelay:"The initial voting delay",_votingPeriod:"The initial voting period"},notice:"Used to initialize the contract during delegator contructor"},"latestProposalIds(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"latestProposalIds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The latest proposal for each proposer"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"proposalCalldatas(uint256,uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],name:"proposalCalldatas",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function",notice:"The official each proposal's calldatas: An ordered list of calldata to be passed to each call"},"proposalCount()":{inputs:[],name:"proposalCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The total number of proposals"},"proposalReceipts(uint256,address)":{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"address",name:"",type:"address"}],name:"proposalReceipts",outputs:[{internalType:"bool",name:"hasVoted",type:"bool"},{internalType:"uint8",name:"support",type:"uint8"},{internalType:"uint96",name:"votes",type:"uint96"}],stateMutability:"view",type:"function",notice:"The official each proposal's receipts: Receipts of ballots for the entire set of voters"},"proposalSignatures(uint256,uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],name:"proposalSignatures",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",notice:"The official each proposal's signatures: An ordered list of function signatures to be called"},"proposalTargets(uint256,uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],name:"proposalTargets",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The official each proposal's targets: An ordered list of target addresses for calls to be made"},"proposalThreshold()":{inputs:[],name:"proposalThreshold",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The number of votes required in order for a voter to become a proposer"},"proposalValues(uint256,uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],name:"proposalValues",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The official each proposal's values: An ordered list of values (i.e. msg.value) to be passed to the calls to be made"},"proposals(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"proposals",outputs:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"address",name:"proposer",type:"address"},{internalType:"uint256",name:"eta",type:"uint256"},{internalType:"uint256",name:"startBlock",type:"uint256"},{internalType:"uint256",name:"endBlock",type:"uint256"},{internalType:"uint256",name:"forVotes",type:"uint256"},{internalType:"uint256",name:"againstVotes",type:"uint256"},{internalType:"uint256",name:"abstainVotes",type:"uint256"},{internalType:"bool",name:"canceled",type:"bool"},{internalType:"bool",name:"executed",type:"bool"}],stateMutability:"view",type:"function",notice:"The official record of all proposals ever proposed"},"propose(address[],uint256[],string[],bytes[],string)":{inputs:[{internalType:"address[]",name:"_targets",type:"address[]"},{internalType:"uint256[]",name:"_values",type:"uint256[]"},{internalType:"string[]",name:"_signatures",type:"string[]"},{internalType:"bytes[]",name:"_calldatas",type:"bytes[]"},{internalType:"string",name:"_description",type:"string"}],name:"propose",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{_calldatas:"Calldatas for proposal calls.",_description:"String description of the proposal.",_signatures:"Function signatures for proposal calls.",_targets:"Target addresses for proposal calls.",_values:"Eth values for proposal calls."},returns:{_0:"Proposal id of new proposal."},notice:"Function used to propose a new proposal. Sender must have delegates above the proposal threshold."},"queue(uint256)":{inputs:[{internalType:"uint256",name:"_proposalId",type:"uint256"}],name:"queue",outputs:[],stateMutability:"nonpayable",type:"function",params:{_proposalId:"The id of the proposal to queue"},notice:"Queues a proposal of state succeeded"},"quorumVotes()":{inputs:[],name:"quorumVotes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed"},"releaseToken()":{inputs:[],name:"releaseToken",outputs:[{internalType:"contract IHasVotes",name:"",type:"address"}],stateMutability:"view",type:"function",notice:'The address of the "Release" governance token'},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"state(uint256)":{inputs:[{internalType:"uint256",name:"_proposalId",type:"uint256"}],name:"state",outputs:[{internalType:"enum PACTDelegateStorageV1.ProposalState",name:"",type:"uint8"}],stateMutability:"view",type:"function",params:{_proposalId:"The id of the proposal"},returns:{_0:"Proposal state"},notice:"Gets the state of a proposal"},"timelock()":{inputs:[],name:"timelock",outputs:[{internalType:"contract TimelockInterface",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The address of the Governance Timelock"},"token()":{inputs:[],name:"token",outputs:[{internalType:"contract IHasVotes",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"The address of the governance token"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"amount of the transaction",_to:"address of the receiver",_token:"address of the ERC20 token"},notice:"Transfers an amount of an ERC20 from this contract to an address"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"votingDelay()":{inputs:[],name:"votingDelay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The delay before voting on a proposal may take place, once proposed, in blocks"},"votingPeriod()":{inputs:[],name:"votingPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"The duration of voting on a proposal, in blocks"}}},"contracts/mocks/token/TokenMock.sol:TokenMock":{source:"contracts/mocks/token/TokenMock.sol",name:"TokenMock",constructor:{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"}],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Paused(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Paused",type:"event"},"RoleAdminChanged(bytes32,bytes32,bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},"RoleGranted(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},"RoleRevoked(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},"Unpaused(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Unpaused",type:"event"}},methods:{"DEFAULT_ADMIN_ROLE()":{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"MINTER_ROLE()":{inputs:[],name:"MINTER_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"PAUSER_ROLE()":{inputs:[],name:"PAUSER_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"burn(uint256)":{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function",details:"Destroys `amount` tokens from the caller. See {ERC20-_burn}."},"burnFrom(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"burnFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"getRoleAdmin(bytes32)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"getRoleMember(bytes32,uint256)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"uint256",name:"index",type:"uint256"}],name:"getRoleMember",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."},"getRoleMemberCount(bytes32)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleMemberCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."},"grantRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns `true` if `account` has been granted `role`."},"increaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"mint(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function",details:"Creates `amount` new tokens for `to`. See {ERC20-_mint}. Requirements: - the caller must have the `MINTER_ROLE`."},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the name of the token."},"pause()":{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function",details:"Pauses all token transfers. See {ERC20Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`."},"paused()":{inputs:[],name:"paused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns true if the contract is paused, and false otherwise."},"renounceRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC165-supportsInterface}."},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."},"unpause()":{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function",details:"Unpauses all token transfers. See {ERC20Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`."}}},"contracts/mocks/treasury/interfaces/ITreasury.sol:ITreasury":{source:"contracts/mocks/treasury/interfaces/ITreasury.sol",name:"ITreasury",methods:{"communityAdmin()":{inputs:[],name:"communityAdmin",outputs:[{internalType:"contract ICommunityAdmin",name:"",type:"address"}],stateMutability:"view",type:"function"},"convertAmount(address,uint256,uint256,address[],uint256)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_amountIn",type:"uint256"},{internalType:"uint256",name:"_amountOutMin",type:"uint256"},{internalType:"address[]",name:"_exchangePath",type:"address[]"},{internalType:"uint256",name:"_deadline",type:"uint256"}],name:"convertAmount",outputs:[],stateMutability:"nonpayable",type:"function"},"getConvertedAmount(address,uint256)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"getConvertedAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"isToken(address)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"}],name:"isToken",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"removeToken(address)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"}],name:"removeToken",outputs:[],stateMutability:"nonpayable",type:"function"},"setToken(address,uint256,address[])":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_rate",type:"uint256"},{internalType:"address[]",name:"_exchangePath",type:"address[]"}],name:"setToken",outputs:[],stateMutability:"nonpayable",type:"function"},"tokenListAt(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"tokenListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"tokenListLength()":{inputs:[],name:"tokenListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"tokens(address)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"}],name:"tokens",outputs:[{internalType:"uint256",name:"rate",type:"uint256"},{internalType:"address[]",name:"exchangePath",type:"address[]"}],stateMutability:"view",type:"function"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function"},"uniswapRouter()":{inputs:[],name:"uniswapRouter",outputs:[{internalType:"contract IUniswapV2Router",name:"",type:"address"}],stateMutability:"view",type:"function"},"updateCommunityAdmin(address)":{inputs:[{internalType:"contract ICommunityAdmin",name:"_communityAdmin",type:"address"}],name:"updateCommunityAdmin",outputs:[],stateMutability:"nonpayable",type:"function"},"updateUniswapRouter(address)":{inputs:[{internalType:"contract IUniswapV2Router",name:"_uniswapRouter",type:"address"}],name:"updateUniswapRouter",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/mocks/treasury/interfaces/IUniswapV2Router.sol:IUniswapV2Router":{source:"contracts/mocks/treasury/interfaces/IUniswapV2Router.sol",name:"IUniswapV2Router",methods:{"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)":{inputs:[{internalType:"address",name:"tokenA",type:"address"},{internalType:"address",name:"tokenB",type:"address"},{internalType:"uint256",name:"amountADesired",type:"uint256"},{internalType:"uint256",name:"amountBDesired",type:"uint256"},{internalType:"uint256",name:"amountAMin",type:"uint256"},{internalType:"uint256",name:"amountBMin",type:"uint256"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"addLiquidity",outputs:[{internalType:"uint256",name:"amountA",type:"uint256"},{internalType:"uint256",name:"amountB",type:"uint256"},{internalType:"uint256",name:"liquidity",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"factory()":{inputs:[],name:"factory",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"pure",type:"function"},"getAmountIn(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint256",name:"reserveIn",type:"uint256"},{internalType:"uint256",name:"reserveOut",type:"uint256"}],name:"getAmountIn",outputs:[{internalType:"uint256",name:"amountIn",type:"uint256"}],stateMutability:"pure",type:"function"},"getAmountOut(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"reserveIn",type:"uint256"},{internalType:"uint256",name:"reserveOut",type:"uint256"}],name:"getAmountOut",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"}],stateMutability:"pure",type:"function"},"getAmountsIn(uint256,address[])":{inputs:[{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"}],name:"getAmountsIn",outputs:[{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],stateMutability:"view",type:"function"},"getAmountsOut(uint256,address[])":{inputs:[{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"}],name:"getAmountsOut",outputs:[{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],stateMutability:"view",type:"function"},"pairFor(address,address)":{inputs:[{internalType:"address",name:"tokenA",type:"address"},{internalType:"address",name:"tokenB",type:"address"}],name:"pairFor",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"quote(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"amountA",type:"uint256"},{internalType:"uint256",name:"reserveA",type:"uint256"},{internalType:"uint256",name:"reserveB",type:"uint256"}],name:"quote",outputs:[{internalType:"uint256",name:"amountB",type:"uint256"}],stateMutability:"pure",type:"function"},"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)":{inputs:[{internalType:"address",name:"tokenA",type:"address"},{internalType:"address",name:"tokenB",type:"address"},{internalType:"uint256",name:"liquidity",type:"uint256"},{internalType:"uint256",name:"amountAMin",type:"uint256"},{internalType:"uint256",name:"amountBMin",type:"uint256"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"removeLiquidity",outputs:[{internalType:"uint256",name:"amountA",type:"uint256"},{internalType:"uint256",name:"amountB",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)":{inputs:[{internalType:"address",name:"tokenA",type:"address"},{internalType:"address",name:"tokenB",type:"address"},{internalType:"uint256",name:"liquidity",type:"uint256"},{internalType:"uint256",name:"amountAMin",type:"uint256"},{internalType:"uint256",name:"amountBMin",type:"uint256"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"bool",name:"approveMax",type:"bool"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"removeLiquidityWithPermit",outputs:[{internalType:"uint256",name:"amountA",type:"uint256"},{internalType:"uint256",name:"amountB",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)":{inputs:[{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"amountOutMin",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swapExactTokensForTokens",outputs:[{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)":{inputs:[{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"amountOutMin",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swapExactTokensForTokensSupportingFeeOnTransferTokens",outputs:[],stateMutability:"nonpayable",type:"function"},"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)":{inputs:[{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint256",name:"amountInMax",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swapTokensForExactTokens",outputs:[{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"}}},"contracts/multisig/CouncilProxyAdmin.sol:CouncilProxyAdmin":{source:"contracts/multisig/CouncilProxyAdmin.sol",name:"CouncilProxyAdmin",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"changeProxyAdmin(address,address)":{inputs:[{internalType:"contract TransparentUpgradeableProxy",name:"proxy",type:"address"},{internalType:"address",name:"newAdmin",type:"address"}],name:"changeProxyAdmin",outputs:[],stateMutability:"nonpayable",type:"function",details:"Changes the admin of `proxy` to `newAdmin`. Requirements: - This contract must be the current admin of `proxy`."},"getProxyAdmin(address)":{inputs:[{internalType:"contract TransparentUpgradeableProxy",name:"proxy",type:"address"}],name:"getProxyAdmin",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the current admin of `proxy`. Requirements: - This contract must be the admin of `proxy`."},"getProxyImplementation(address)":{inputs:[{internalType:"contract TransparentUpgradeableProxy",name:"proxy",type:"address"}],name:"getProxyImplementation",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the current implementation of `proxy`. Requirements: - This contract must be the admin of `proxy`."},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"upgrade(address,address)":{inputs:[{internalType:"contract TransparentUpgradeableProxy",name:"proxy",type:"address"},{internalType:"address",name:"implementation",type:"address"}],name:"upgrade",outputs:[],stateMutability:"nonpayable",type:"function",details:"Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}. Requirements: - This contract must be the admin of `proxy`."},"upgradeAndCall(address,address,bytes)":{inputs:[{internalType:"contract TransparentUpgradeableProxy",name:"proxy",type:"address"},{internalType:"address",name:"implementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"upgradeAndCall",outputs:[],stateMutability:"payable",type:"function",details:"Upgrades `proxy` to `implementation` and calls a function on the new implementation. See {TransparentUpgradeableProxy-upgradeToAndCall}. Requirements: - This contract must be the admin of `proxy`."}}},"contracts/multisig/ImpactMultiSigProxyAdmin.sol:ImpactMultiSigProxyAdmin":{source:"contracts/multisig/ImpactMultiSigProxyAdmin.sol",name:"ImpactMultiSigProxyAdmin",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"changeProxyAdmin(address,address)":{inputs:[{internalType:"contract TransparentUpgradeableProxy",name:"proxy",type:"address"},{internalType:"address",name:"newAdmin",type:"address"}],name:"changeProxyAdmin",outputs:[],stateMutability:"nonpayable",type:"function",details:"Changes the admin of `proxy` to `newAdmin`. Requirements: - This contract must be the current admin of `proxy`."},"getProxyAdmin(address)":{inputs:[{internalType:"contract TransparentUpgradeableProxy",name:"proxy",type:"address"}],name:"getProxyAdmin",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the current admin of `proxy`. Requirements: - This contract must be the admin of `proxy`."},"getProxyImplementation(address)":{inputs:[{internalType:"contract TransparentUpgradeableProxy",name:"proxy",type:"address"}],name:"getProxyImplementation",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the current implementation of `proxy`. Requirements: - This contract must be the admin of `proxy`."},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"upgrade(address,address)":{inputs:[{internalType:"contract TransparentUpgradeableProxy",name:"proxy",type:"address"},{internalType:"address",name:"implementation",type:"address"}],name:"upgrade",outputs:[],stateMutability:"nonpayable",type:"function",details:"Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}. Requirements: - This contract must be the admin of `proxy`."},"upgradeAndCall(address,address,bytes)":{inputs:[{internalType:"contract TransparentUpgradeableProxy",name:"proxy",type:"address"},{internalType:"address",name:"implementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"upgradeAndCall",outputs:[],stateMutability:"payable",type:"function",details:"Upgrades `proxy` to `implementation` and calls a function on the new implementation. See {TransparentUpgradeableProxy-upgradeToAndCall}. Requirements: - This contract must be the admin of `proxy`."}}},"contracts/referralLink/ReferralLinkImplementation.sol:ReferralLinkImplementation":{source:"contracts/referralLink/ReferralLinkImplementation.sol",name:"ReferralLinkImplementation",events:{"CampaignAdded(uint256,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"campaignId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"startTime",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endTime",type:"uint256"},{indexed:!1,internalType:"uint256",name:"rewardAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"maxReferralLinks",type:"uint256"}],name:"CampaignAdded",type:"event",params:{campaignId:"Id of the campaign",endTime:"End date of the campaign",maxReferralLinks:"Maximum number of referral links for an user",rewardAmount:"Reward amount of the campaign",startTime:"Start date of the campaign"},notice:"Triggered when a campaign state has been changed"},"CampaignFunded(uint256,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"campaignId",type:"uint256"},{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"CampaignFunded",type:"event",params:{amount:"Amount of the fund",campaignId:"Id of the campaign",sender:"Address of the sender"},notice:"Triggered when a campaign has been funded"},"CampaignStateChanged(uint256,uint8)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"campaignId",type:"uint256"},{indexed:!0,internalType:"enum IReferralLink.CampaignState",name:"state",type:"uint8"}],name:"CampaignStateChanged",type:"event",params:{campaignId:"Id of the campaign",state:"New state of the campaign"},notice:"Triggered when a campaign state has been changed"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Paused(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Paused",type:"event"},"RewardClaimed(address,uint256,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"uint256",name:"campaignId",type:"uint256"},{indexed:!1,internalType:"address",name:"receiverAddress",type:"address"}],name:"RewardClaimed",type:"event",params:{campaignId:"the id of the campaign",receiverAddress:"address of the receiver",sender:"address of the sender to be rewarded"},notice:"Triggered when a reward has been claimed"},"Unpaused(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Unpaused",type:"event"}},methods:{"addCampaign(address,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"uint256",name:"_startTime",type:"uint256"},{internalType:"uint256",name:"_endTime",type:"uint256"},{internalType:"uint256",name:"_rewardAmount",type:"uint256"},{internalType:"uint256",name:"_maxReferralLinks",type:"uint256"}],name:"addCampaign",outputs:[],stateMutability:"nonpayable",type:"function",params:{_endTime:"the end date of the campaign",_rewardAmount:"the reward amount of the campaign",_startTime:"the start date of the campaign",_token:"the token used for reward"},notice:"Adds a new campaign"},"campaignReferralLinks(uint256,address)":{inputs:[{internalType:"uint256",name:"_campaignId",type:"uint256"},{internalType:"address",name:"_senderAddress",type:"address"}],name:"campaignReferralLinks",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{_campaignId:"id of the campaign",_senderAddress:"address of the token"},returns:{_0:"the number of referral links used by a sender"},notice:"Returns the number of referral links used by a sender"},"campaigns(uint256)":{inputs:[{internalType:"uint256",name:"_campaignId",type:"uint256"}],name:"campaigns",outputs:[{internalType:"contract IERC20Upgradeable",name:"token",type:"address"},{internalType:"uint256",name:"balance",type:"uint256"},{internalType:"enum IReferralLink.CampaignState",name:"state",type:"uint8"},{internalType:"uint256",name:"startTime",type:"uint256"},{internalType:"uint256",name:"endTime",type:"uint256"},{internalType:"uint256",name:"rewardAmount",type:"uint256"},{internalType:"uint256",name:"maxReferralLinks",type:"uint256"}],stateMutability:"view",type:"function",params:{_campaignId:"id of the campaign"},returns:{balance:"balance of the campaign",endTime:"end date of the campaign",maxReferralLinks:"maximum number of referral links",rewardAmount:"reward amount of the campaign",startTime:"start date of the campaign",state:"state of the campaign",token:"address of the token"},notice:"Returns the details of a campaign"},"campaignsLength()":{inputs:[],name:"campaignsLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"cancelCampaign(uint256,address)":{inputs:[{internalType:"uint256",name:"_campaignId",type:"uint256"},{internalType:"address",name:"_fundRecipient",type:"address"}],name:"cancelCampaign",outputs:[],stateMutability:"nonpayable",type:"function",params:{_campaignId:"id of the campaign",_fundRecipient:"the address of the recipient who will receive the funds allocated for this campaign"},notice:"Cancels a campaign"},"claimReward(address,uint256[],address[],bytes[])":{inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"uint256[]",name:"_campaignIds",type:"uint256[]"},{internalType:"address[]",name:"_newUserAddresses",type:"address[]"},{internalType:"bytes[]",name:"_signatures",type:"bytes[]"}],name:"claimReward",outputs:[],stateMutability:"nonpayable",type:"function",params:{_campaignIds:"ids of the campaigns",_newUserAddresses:"addresses of the new users",_sender:"address of the sender",_signatures:"signatures from the backend"},notice:"Allows users to claim the reward for a campaign using a signature"},"fundCampaign(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_campaignId",type:"uint256"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"fundCampaign",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"the amount to be funded",_campaignId:"the id of the campaign"},notice:"Funds a campaign"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function",notice:"Returns the current implementation version"},"initialize(address,address,address)":{inputs:[{internalType:"address",name:"_signerWalletAddress",type:"address"},{internalType:"address",name:"_socialConnectAddress",type:"address"},{internalType:"address",name:"_socialConnectIssuer",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",params:{_signerWalletAddress:"Address of the backend wallet"},notice:"Used to initialize a new contract"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pause()":{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function",details:"Pauses the contract"},"pauseCampaign(uint256)":{inputs:[{internalType:"uint256",name:"_campaignId",type:"uint256"}],name:"pauseCampaign",outputs:[],stateMutability:"nonpayable",type:"function",params:{_campaignId:"id of the campaign"},notice:"Pauses a campaign"},"paused()":{inputs:[],name:"paused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns true if the contract is paused, and false otherwise."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"signerWalletAddress()":{inputs:[],name:"signerWalletAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"socialConnect()":{inputs:[],name:"socialConnect",outputs:[{internalType:"contract ISocialConnect",name:"",type:"address"}],stateMutability:"view",type:"function"},"socialConnectIssuer()":{inputs:[],name:"socialConnectIssuer",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"unpause()":{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function",details:"Unpauses the contract"},"unpauseCampaign(uint256)":{inputs:[{internalType:"uint256",name:"_campaignId",type:"uint256"}],name:"unpauseCampaign",outputs:[],stateMutability:"nonpayable",type:"function",params:{_campaignId:"id of the campaign"},notice:"Unpauses a campaign"},"updateSignerWalletAddress(address)":{inputs:[{internalType:"address",name:"_newSignerWalletAddress",type:"address"}],name:"updateSignerWalletAddress",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newSignerWalletAddress:"address of the new backend wallet"},notice:"Updates the address of the backend wallet"},"verifiedUsersAt(uint256)":{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"verifiedUsersAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",params:{index:"index of the verified user"},returns:{_0:"the address of an verified user at a given index"},notice:"Returns the address of an verified user at a given index"},"verifiedUsersLength()":{inputs:[],name:"verifiedUsersLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",returns:{_0:"the number of verified users"},notice:"Returns the number of verified users"}}},"contracts/referralLink/ReferralLinkProxy.sol:ReferralLinkProxy":{source:"contracts/referralLink/ReferralLinkProxy.sol",name:"ReferralLinkProxy",constructor:{inputs:[{internalType:"address",name:"_logic",type:"address"},{internalType:"address",name:"_proxyAdmin",type:"address"}],stateMutability:"nonpayable",type:"constructor"},fallback:{stateMutability:"payable",type:"fallback"},receive:{stateMutability:"payable",type:"receive"},events:{"AdminChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"previousAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"AdminChanged",type:"event"},"BeaconUpgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"beacon",type:"address"}],name:"BeaconUpgraded",type:"event"},"Upgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"implementation",type:"address"}],name:"Upgraded",type:"event"}},methods:{"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"admin_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"changeAdmin(address)":{inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"changeAdmin",outputs:[],stateMutability:"nonpayable",type:"function",details:"Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."},"implementation()":{inputs:[],name:"implementation",outputs:[{internalType:"address",name:"implementation_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"},"upgradeTo(address)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"}],name:"upgradeTo",outputs:[],stateMutability:"nonpayable",type:"function",details:"Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."},"upgradeToAndCall(address,bytes)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"upgradeToAndCall",outputs:[],stateMutability:"payable",type:"function",details:"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."}}},"contracts/referralLink/interfaces/IReferralLink.sol:IReferralLink":{source:"contracts/referralLink/interfaces/IReferralLink.sol",name:"IReferralLink",methods:{"addCampaign(address,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"token",type:"address"},{internalType:"uint256",name:"startTime",type:"uint256"},{internalType:"uint256",name:"endTime",type:"uint256"},{internalType:"uint256",name:"rewardAmount",type:"uint256"},{internalType:"uint256",name:"maxReferralLinks",type:"uint256"}],name:"addCampaign",outputs:[],stateMutability:"nonpayable",type:"function"},"campaignReferralLinks(uint256,address)":{inputs:[{internalType:"uint256",name:"_campaignId",type:"uint256"},{internalType:"address",name:"_senderAddress",type:"address"}],name:"campaignReferralLinks",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"campaigns(uint256)":{inputs:[{internalType:"uint256",name:"_campaignId",type:"uint256"}],name:"campaigns",outputs:[{internalType:"contract IERC20Upgradeable",name:"token",type:"address"},{internalType:"uint256",name:"balance",type:"uint256"},{internalType:"enum IReferralLink.CampaignState",name:"state",type:"uint8"},{internalType:"uint256",name:"startTime",type:"uint256"},{internalType:"uint256",name:"endTime",type:"uint256"},{internalType:"uint256",name:"rewardAmount",type:"uint256"},{internalType:"uint256",name:"maxReferralLinks",type:"uint256"}],stateMutability:"view",type:"function"},"campaignsLength()":{inputs:[],name:"campaignsLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"cancelCampaign(uint256,address)":{inputs:[{internalType:"uint256",name:"campaignId",type:"uint256"},{internalType:"address",name:"fundRecipient",type:"address"}],name:"cancelCampaign",outputs:[],stateMutability:"nonpayable",type:"function"},"claimReward(address,uint256[],address[],bytes[])":{inputs:[{internalType:"address",name:"beneficiary",type:"address"},{internalType:"uint256[]",name:"campaignIds",type:"uint256[]"},{internalType:"address[]",name:"newUserAddresses",type:"address[]"},{internalType:"bytes[]",name:"signatures",type:"bytes[]"}],name:"claimReward",outputs:[],stateMutability:"nonpayable",type:"function"},"fundCampaign(uint256,uint256)":{inputs:[{internalType:"uint256",name:"campaignId",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"fundCampaign",outputs:[],stateMutability:"nonpayable",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"pauseCampaign(uint256)":{inputs:[{internalType:"uint256",name:"campaignId",type:"uint256"}],name:"pauseCampaign",outputs:[],stateMutability:"nonpayable",type:"function"},"signerWalletAddress()":{inputs:[],name:"signerWalletAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"socialConnect()":{inputs:[],name:"socialConnect",outputs:[{internalType:"contract ISocialConnect",name:"",type:"address"}],stateMutability:"view",type:"function"},"socialConnectIssuer()":{inputs:[],name:"socialConnectIssuer",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"unpauseCampaign(uint256)":{inputs:[{internalType:"uint256",name:"campaignId",type:"uint256"}],name:"unpauseCampaign",outputs:[],stateMutability:"nonpayable",type:"function"},"updateSignerWalletAddress(address)":{inputs:[{internalType:"address",name:"newSignerAddress",type:"address"}],name:"updateSignerWalletAddress",outputs:[],stateMutability:"nonpayable",type:"function"},"verifiedUsersAt(uint256)":{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"verifiedUsersAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"verifiedUsersLength()":{inputs:[],name:"verifiedUsersLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/referralLink/interfaces/ReferralLinkStorageV1.sol:ReferralLinkStorageV1":{source:"contracts/referralLink/interfaces/ReferralLinkStorageV1.sol",name:"ReferralLinkStorageV1",title:"Storage for ReferralLink",notice:"For future upgrades, do not change ReferralLinkStorageV1. Create a new contract which implements ReferralLinkStorageV1 and following the naming convention ReferralLinkVX.",methods:{"addCampaign(address,uint256,uint256,uint256,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"token",type:"address"},{internalType:"uint256",name:"startTime",type:"uint256"},{internalType:"uint256",name:"endTime",type:"uint256"},{internalType:"uint256",name:"rewardAmount",type:"uint256"},{internalType:"uint256",name:"maxReferralLinks",type:"uint256"}],name:"addCampaign",outputs:[],stateMutability:"nonpayable",type:"function"},"campaignReferralLinks(uint256,address)":{inputs:[{internalType:"uint256",name:"_campaignId",type:"uint256"},{internalType:"address",name:"_senderAddress",type:"address"}],name:"campaignReferralLinks",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"campaigns(uint256)":{inputs:[{internalType:"uint256",name:"_campaignId",type:"uint256"}],name:"campaigns",outputs:[{internalType:"contract IERC20Upgradeable",name:"token",type:"address"},{internalType:"uint256",name:"balance",type:"uint256"},{internalType:"enum IReferralLink.CampaignState",name:"state",type:"uint8"},{internalType:"uint256",name:"startTime",type:"uint256"},{internalType:"uint256",name:"endTime",type:"uint256"},{internalType:"uint256",name:"rewardAmount",type:"uint256"},{internalType:"uint256",name:"maxReferralLinks",type:"uint256"}],stateMutability:"view",type:"function"},"campaignsLength()":{inputs:[],name:"campaignsLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"cancelCampaign(uint256,address)":{inputs:[{internalType:"uint256",name:"campaignId",type:"uint256"},{internalType:"address",name:"fundRecipient",type:"address"}],name:"cancelCampaign",outputs:[],stateMutability:"nonpayable",type:"function"},"claimReward(address,uint256[],address[],bytes[])":{inputs:[{internalType:"address",name:"beneficiary",type:"address"},{internalType:"uint256[]",name:"campaignIds",type:"uint256[]"},{internalType:"address[]",name:"newUserAddresses",type:"address[]"},{internalType:"bytes[]",name:"signatures",type:"bytes[]"}],name:"claimReward",outputs:[],stateMutability:"nonpayable",type:"function"},"fundCampaign(uint256,uint256)":{inputs:[{internalType:"uint256",name:"campaignId",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"fundCampaign",outputs:[],stateMutability:"nonpayable",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"pauseCampaign(uint256)":{inputs:[{internalType:"uint256",name:"campaignId",type:"uint256"}],name:"pauseCampaign",outputs:[],stateMutability:"nonpayable",type:"function"},"signerWalletAddress()":{inputs:[],name:"signerWalletAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"socialConnect()":{inputs:[],name:"socialConnect",outputs:[{internalType:"contract ISocialConnect",name:"",type:"address"}],stateMutability:"view",type:"function"},"socialConnectIssuer()":{inputs:[],name:"socialConnectIssuer",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"unpauseCampaign(uint256)":{inputs:[{internalType:"uint256",name:"campaignId",type:"uint256"}],name:"unpauseCampaign",outputs:[],stateMutability:"nonpayable",type:"function"},"updateSignerWalletAddress(address)":{inputs:[{internalType:"address",name:"newSignerAddress",type:"address"}],name:"updateSignerWalletAddress",outputs:[],stateMutability:"nonpayable",type:"function"},"verifiedUsersAt(uint256)":{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"verifiedUsersAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"verifiedUsersLength()":{inputs:[],name:"verifiedUsersLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/staking/StakingImplementation.sol:StakingImplementation":{source:"contracts/staking/StakingImplementation.sol",name:"StakingImplementation",events:{"Claimed(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"holder",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Claimed",type:"event",params:{amount:"Claim amount",holder:"Address of the holder"},notice:"Triggered when some tokens have been claimed"},"ClaimedPartial(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"holder",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lastUnstakeId",type:"uint256"}],name:"ClaimedPartial",type:"event",params:{amount:"Claim amount",holder:"Address of the holder",lastUnstakeId:"Last unstake is to be claimed (if possible)"},notice:"Triggered when some tokens have been partially claimed"},"CooldownUpdated(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldCooldown",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newCooldown",type:"uint256"}],name:"CooldownUpdated",type:"event",params:{newCooldown:"New cooldown value",oldCooldown:"Old cooldown value"},notice:"Triggered when the cooldown value has been updated"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Staked(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"holder",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Staked",type:"event",params:{amount:"Stake amount",holder:"Address of the holder"},notice:"Triggered when some tokens have been staked"},"Unstaked(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"holder",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Unstaked",type:"event",params:{amount:"Unstake amount",holder:"Address of the holder"},notice:"Triggered when some tokens have been unstaked"}},methods:{"PACT()":{inputs:[],name:"PACT",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"SPACT()":{inputs:[],name:"SPACT",outputs:[{internalType:"contract IMintableERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},"claim()":{inputs:[],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Claim all unstakes that are older than cooldown"},"claimAmount(address)":{inputs:[{internalType:"address",name:"_holderAddress",type:"address"}],name:"claimAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"claimPartial(uint256)":{inputs:[{internalType:"uint256",name:"_lastUnstakeId",type:"uint256"}],name:"claimPartial",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Claim all unstakes until _lastUnstakeId"},"cooldown()":{inputs:[],name:"cooldown",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"currentTotalAmount()":{inputs:[],name:"currentTotalAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donationMiner()":{inputs:[],name:"donationMiner",outputs:[{internalType:"contract IDonationMiner",name:"",type:"address"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function",notice:"Returns the current implementation version"},"initialize(address,address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_PACT",type:"address"},{internalType:"contract IMintableERC20",name:"_SPACT",type:"address"},{internalType:"contract IDonationMiner",name:"_donationMiner",type:"address"},{internalType:"uint256",name:"_cooldown",type:"uint256"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",params:{_PACT:"Address of the PACT Token",_SPACT:"Address of the SPACT Token",_cooldown:"Number of blocks after a user can claim an unstake",_donationMiner:"Address of the DonationMiner"},notice:"Used to initialize a new DonationMiner contract"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"stake(address,uint256)":{inputs:[{internalType:"address",name:"_holderAddress",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"stake",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"Amount of cUSD tokens to stake",_holderAddress:"Address of the holder"},notice:"Stakes new founds for the holder"},"stakeholder(address)":{inputs:[{internalType:"address",name:"_holderAddress",type:"address"}],name:"stakeholder",outputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"nextUnstakeId",type:"uint256"},{internalType:"uint256",name:"unstakeListLength",type:"uint256"},{internalType:"uint256",name:"unstakedAmount",type:"uint256"}],stateMutability:"view",type:"function"},"stakeholderAmount(address)":{inputs:[{internalType:"address",name:"_holderAddress",type:"address"}],name:"stakeholderAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"stakeholderUnstakeAt(address,uint256)":{inputs:[{internalType:"address",name:"_holderAddress",type:"address"},{internalType:"uint256",name:"_unstakeIndex",type:"uint256"}],name:"stakeholderUnstakeAt",outputs:[{components:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"cooldownBlock",type:"uint256"}],internalType:"struct IStaking.Unstake",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"stakeholdersListAt(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"stakeholdersListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",params:{_index:"index of the stakeholder"},returns:{_0:"address of the stakeholder"},notice:"Returns the address of a stakeholder from stakeholdersList"},"stakeholdersListLength()":{inputs:[],name:"stakeholdersListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",returns:{_0:"uint256 number of stakeholders"},notice:"Returns the number of stakeholders"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"unstake(uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"unstake",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"number of tokens to be unstaked"},notice:"Unstake"},"updateCooldown(uint256)":{inputs:[{internalType:"uint256",name:"_newCooldown",type:"uint256"}],name:"updateCooldown",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newCooldown:"Number of blocks after a user can claim an unstake"},notice:"Updates cooldown value"}}},"contracts/staking/StakingProxy.sol:StakingProxy":{source:"contracts/staking/StakingProxy.sol",name:"StakingProxy",constructor:{inputs:[{internalType:"address",name:"_logic",type:"address"},{internalType:"address",name:"_proxyAdmin",type:"address"}],stateMutability:"nonpayable",type:"constructor"},fallback:{stateMutability:"payable",type:"fallback"},receive:{stateMutability:"payable",type:"receive"},events:{"AdminChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"previousAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"AdminChanged",type:"event"},"BeaconUpgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"beacon",type:"address"}],name:"BeaconUpgraded",type:"event"},"Upgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"implementation",type:"address"}],name:"Upgraded",type:"event"}},methods:{"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"admin_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"changeAdmin(address)":{inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"changeAdmin",outputs:[],stateMutability:"nonpayable",type:"function",details:"Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."},"implementation()":{inputs:[],name:"implementation",outputs:[{internalType:"address",name:"implementation_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"},"upgradeTo(address)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"}],name:"upgradeTo",outputs:[],stateMutability:"nonpayable",type:"function",details:"Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."},"upgradeToAndCall(address,bytes)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"upgradeToAndCall",outputs:[],stateMutability:"payable",type:"function",details:"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."}}},"contracts/staking/interfaces/IStaking.sol:IStaking":{source:"contracts/staking/interfaces/IStaking.sol",name:"IStaking",methods:{"PACT()":{inputs:[],name:"PACT",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"SPACT()":{inputs:[],name:"SPACT",outputs:[{internalType:"contract IMintableERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},"claim()":{inputs:[],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function"},"claimAmount(address)":{inputs:[{internalType:"address",name:"_holderAddress",type:"address"}],name:"claimAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"claimPartial(uint256)":{inputs:[{internalType:"uint256",name:"_lastUnstakeId",type:"uint256"}],name:"claimPartial",outputs:[],stateMutability:"nonpayable",type:"function"},"cooldown()":{inputs:[],name:"cooldown",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"currentTotalAmount()":{inputs:[],name:"currentTotalAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donationMiner()":{inputs:[],name:"donationMiner",outputs:[{internalType:"contract IDonationMiner",name:"",type:"address"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"stake(address,uint256)":{inputs:[{internalType:"address",name:"_holder",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"stake",outputs:[],stateMutability:"nonpayable",type:"function"},"stakeholder(address)":{inputs:[{internalType:"address",name:"_holderAddress",type:"address"}],name:"stakeholder",outputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"nextUnstakeId",type:"uint256"},{internalType:"uint256",name:"unstakeListLength",type:"uint256"},{internalType:"uint256",name:"unstakedAmount",type:"uint256"}],stateMutability:"view",type:"function"},"stakeholderAmount(address)":{inputs:[{internalType:"address",name:"_holderAddress",type:"address"}],name:"stakeholderAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"stakeholderUnstakeAt(address,uint256)":{inputs:[{internalType:"address",name:"_holderAddress",type:"address"},{internalType:"uint256",name:"_unstakeIndex",type:"uint256"}],name:"stakeholderUnstakeAt",outputs:[{components:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"cooldownBlock",type:"uint256"}],internalType:"struct IStaking.Unstake",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"stakeholdersListAt(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"stakeholdersListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"stakeholdersListLength()":{inputs:[],name:"stakeholdersListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"unstake(uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"unstake",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCooldown(uint256)":{inputs:[{internalType:"uint256",name:"_newCooldown",type:"uint256"}],name:"updateCooldown",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/staking/interfaces/StakingStorageV1.sol:StakingStorageV1":{source:"contracts/staking/interfaces/StakingStorageV1.sol",name:"StakingStorageV1",title:"Storage for DonationMiner",notice:"For future upgrades, do not change DonationMinerStorageV1. Create a new contract which implements DonationMinerStorageV1 and following the naming convention DonationMinerStorageVX.",methods:{"PACT()":{inputs:[],name:"PACT",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"SPACT()":{inputs:[],name:"SPACT",outputs:[{internalType:"contract IMintableERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},"claim()":{inputs:[],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function"},"claimAmount(address)":{inputs:[{internalType:"address",name:"_holderAddress",type:"address"}],name:"claimAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"claimPartial(uint256)":{inputs:[{internalType:"uint256",name:"_lastUnstakeId",type:"uint256"}],name:"claimPartial",outputs:[],stateMutability:"nonpayable",type:"function"},"cooldown()":{inputs:[],name:"cooldown",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"currentTotalAmount()":{inputs:[],name:"currentTotalAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"donationMiner()":{inputs:[],name:"donationMiner",outputs:[{internalType:"contract IDonationMiner",name:"",type:"address"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"stake(address,uint256)":{inputs:[{internalType:"address",name:"_holder",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"stake",outputs:[],stateMutability:"nonpayable",type:"function"},"stakeholder(address)":{inputs:[{internalType:"address",name:"_holderAddress",type:"address"}],name:"stakeholder",outputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"nextUnstakeId",type:"uint256"},{internalType:"uint256",name:"unstakeListLength",type:"uint256"},{internalType:"uint256",name:"unstakedAmount",type:"uint256"}],stateMutability:"view",type:"function"},"stakeholderAmount(address)":{inputs:[{internalType:"address",name:"_holderAddress",type:"address"}],name:"stakeholderAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"stakeholderUnstakeAt(address,uint256)":{inputs:[{internalType:"address",name:"_holderAddress",type:"address"},{internalType:"uint256",name:"_unstakeIndex",type:"uint256"}],name:"stakeholderUnstakeAt",outputs:[{components:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"cooldownBlock",type:"uint256"}],internalType:"struct IStaking.Unstake",name:"",type:"tuple"}],stateMutability:"view",type:"function"},"stakeholdersListAt(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"stakeholdersListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"stakeholdersListLength()":{inputs:[],name:"stakeholdersListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"unstake(uint256)":{inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"unstake",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCooldown(uint256)":{inputs:[{internalType:"uint256",name:"_newCooldown",type:"uint256"}],name:"updateCooldown",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/token/PACTToken.sol:PACTToken":{source:"contracts/token/PACTToken.sol",name:"PACTToken",constructor:{inputs:[{internalType:"address",name:"_initialOwner",type:"address"}],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Approval",type:"event",notice:"The standard EIP-20 approval event"},"DelegateChanged(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegator",type:"address"},{indexed:!0,internalType:"address",name:"fromDelegate",type:"address"},{indexed:!0,internalType:"address",name:"toDelegate",type:"address"}],name:"DelegateChanged",type:"event",notice:"An event thats emitted when an account changes its delegate"},"DelegateVotesChanged(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegate",type:"address"},{indexed:!1,internalType:"uint256",name:"previousBalance",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newBalance",type:"uint256"}],name:"DelegateVotesChanged",type:"event",notice:"An event thats emitted when a delegate account's vote balance changes"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Transfer",type:"event",notice:"An event emitted when an account's voting power is transferred."}},methods:{"DELEGATION_TYPEHASH()":{inputs:[],name:"DELEGATION_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",notice:"The EIP-712 typehash for the delegation struct used by the contract"},"DOMAIN_TYPEHASH()":{inputs:[],name:"DOMAIN_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",notice:"The EIP-712 typehash for the contract's domain"},"MAX_SUPPLY()":{inputs:[],name:"MAX_SUPPLY",outputs:[{internalType:"uint96",name:"",type:"uint96"}],stateMutability:"view",type:"function",notice:"The maximum supply of PACT Tokens."},"PERMIT_TYPEHASH()":{inputs:[],name:"PERMIT_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",notice:"The EIP-712 typehash for the permit struct used by the contract"},"allowance(address,address)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{account:"The address of the account holding the funds",spender:"The address of the account spending the funds"},returns:{_0:"The number of tokens approved"},notice:"Get the number of tokens `spender` is approved to spend on behalf of `account`"},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"rawAmount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"This will overwrite the approval amount for `spender`  and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)",params:{rawAmount:"The number of tokens that are approved (2^256-1 means infinite)",spender:"The address of the account which may transfer tokens"},returns:{_0:"Whether or not the approval succeeded"},notice:"Approve `spender` to transfer up to `amount` from `src`"},"balanceOf(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"checkpoints(address,uint32)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint32",name:"",type:"uint32"}],name:"checkpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"votes",type:"uint96"}],stateMutability:"view",type:"function",notice:"A record of votes checkpoints for each account, by index"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"delegate(address)":{inputs:[{internalType:"address",name:"delegatee",type:"address"}],name:"delegate",outputs:[],stateMutability:"nonpayable",type:"function",params:{delegatee:"The address to delegate votes to"},notice:"Delegate votes from `msg.sender` to `delegatee`"},"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":{inputs:[{internalType:"address",name:"delegatee",type:"address"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"delegateBySig",outputs:[],stateMutability:"nonpayable",type:"function",params:{delegatee:"The address to delegate votes to",expiry:"The time at which to expire the signature",nonce:"The contract state required to match the signature",r:"Half of the ECDSA signature pair",s:"Half of the ECDSA signature pair",v:"The recovery byte of the signature"},notice:"Delegates votes from signatory to `delegatee`"},"delegates(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"delegates",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"A record of each accounts delegate"},"getCurrentVotes(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getCurrentVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],stateMutability:"view",type:"function",params:{account:"The address to get votes balance"},returns:{_0:"The number of current votes for `account`"},notice:"Gets the current votes balance for `account`"},"getPriorVotes(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPriorVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],stateMutability:"view",type:"function",details:"Block number must be a finalized block or else this function will revert to prevent misinformation.",params:{account:"The address of the account to check",blockNumber:"The block number to get the vote balance at"},returns:{_0:"The number of votes the account had as of the given block"},notice:"Determine the prior number of votes for an account as of a block number"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},"nonces(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"A record of states for signing / validating signatures"},"numCheckpoints(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"numCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],stateMutability:"view",type:"function",notice:"The number of checkpoints for each account"},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"rawAmount",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function",params:{deadline:"The time at which to expire the signature",owner:"The address to approve from",r:"Half of the ECDSA signature pair",rawAmount:"The number of tokens that are approved (2^256-1 means infinite)",s:"Half of the ECDSA signature pair",spender:"The address to be approved",v:"The recovery byte of the signature"},notice:"Triggers an approval from owner to spends"},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"totalVotingPower()":{inputs:[],name:"totalVotingPower",outputs:[{internalType:"uint96",name:"",type:"uint96"}],stateMutability:"view",type:"function",notice:"Total voting power in existence."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"dst",type:"address"},{internalType:"uint256",name:"rawAmount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",params:{dst:"The address of the destination account",rawAmount:"The number of tokens to transfer"},returns:{_0:"Whether or not the transfer succeeded"},notice:"Transfer `amount` tokens from `msg.sender` to `dst`"},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"src",type:"address"},{internalType:"address",name:"dst",type:"address"},{internalType:"uint256",name:"rawAmount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",params:{dst:"The address of the destination account",rawAmount:"The number of tokens to transfer",src:"The address of the source account"},returns:{_0:"Whether or not the transfer succeeded"},notice:"Transfer `amount` tokens from `src` to `dst`"},"votingPower(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"votingPower",outputs:[{internalType:"uint96",name:"",type:"uint96"}],stateMutability:"view",type:"function",params:{account:"The address of the account to get the balance of"},returns:{_0:"The amount of voting power held"},notice:"Get the amount of voting power of an account"}}},"contracts/token/SPACTToken.sol:SPACTToken":{source:"contracts/token/SPACTToken.sol",name:"SPACTToken",constructor:{inputs:[],stateMutability:"nonpayable",type:"constructor"},events:{"DelegateChanged(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegator",type:"address"},{indexed:!0,internalType:"address",name:"fromDelegate",type:"address"},{indexed:!0,internalType:"address",name:"toDelegate",type:"address"}],name:"DelegateChanged",type:"event",notice:"An event thats emitted when an account changes its delegate"},"DelegateVotesChanged(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegate",type:"address"},{indexed:!1,internalType:"uint256",name:"previousBalance",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newBalance",type:"uint256"}],name:"DelegateVotesChanged",type:"event",notice:"An event thats emitted when a delegate account's vote balance changes"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Transfer",type:"event",notice:"An event emitted when an account's voting power is transferred."}},methods:{"DELEGATION_TYPEHASH()":{inputs:[],name:"DELEGATION_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",notice:"The EIP-712 typehash for the delegation struct used by the contract"},"DOMAIN_TYPEHASH()":{inputs:[],name:"DOMAIN_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",notice:"The EIP-712 typehash for the contract's domain"},"balanceOf(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"burn(address,uint96)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint96",name:"_amount",type:"uint96"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The address of the source account",_amount:"The amount of voting power to be burned"},notice:"Burn voting power"},"checkpoints(address,uint32)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint32",name:"",type:"uint32"}],name:"checkpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"votes",type:"uint96"}],stateMutability:"view",type:"function",notice:"A record of votes checkpoints for each account, by index"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"delegate(address)":{inputs:[{internalType:"address",name:"delegatee",type:"address"}],name:"delegate",outputs:[],stateMutability:"nonpayable",type:"function",params:{delegatee:"The address to delegate votes to"},notice:"Delegate votes from `msg.sender` to `delegatee`"},"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":{inputs:[{internalType:"address",name:"delegatee",type:"address"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"delegateBySig",outputs:[],stateMutability:"nonpayable",type:"function",params:{delegatee:"The address to delegate votes to",expiry:"The time at which to expire the signature",nonce:"The contract state required to match the signature",r:"Half of the ECDSA signature pair",s:"Half of the ECDSA signature pair",v:"The recovery byte of the signature"},notice:"Delegates votes from signatory to `delegatee`"},"delegates(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"delegates",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"A record of each accounts delegate"},"getCurrentVotes(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getCurrentVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],stateMutability:"view",type:"function",params:{account:"The address to get votes balance"},returns:{_0:"The number of current votes for `account`"},notice:"Gets the current votes balance for `account`"},"getPriorVotes(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPriorVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],stateMutability:"view",type:"function",details:"Block number must be a finalized block or else this function will revert to prevent misinformation.",params:{account:"The address of the account to check",blockNumber:"The block number to get the vote balance at"},returns:{_0:"The number of votes the account had as of the given block"},notice:"Determine the prior number of votes for an account as of a block number"},"mint(address,uint96)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint96",name:"_amount",type:"uint96"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function",params:{_account:"The address of the destination account",_amount:"The amount of voting power to be minted"},notice:"Mint new voting power"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},"nonces(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"A record of states for signing / validating signatures"},"numCheckpoints(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"numCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],stateMutability:"view",type:"function",notice:"The number of checkpoints for each account"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"totalVotingPower()":{inputs:[],name:"totalVotingPower",outputs:[{internalType:"uint96",name:"",type:"uint96"}],stateMutability:"view",type:"function",notice:"Total voting power in existence."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"votingPower(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"votingPower",outputs:[{internalType:"uint96",name:"",type:"uint96"}],stateMutability:"view",type:"function",params:{account:"The address of the account to get the balance of"},returns:{_0:"The amount of voting power held"},notice:"Get the amount of voting power of an account"}}},"contracts/token/TransferrableVotingToken.sol:TransferrableVotingToken":{source:"contracts/token/TransferrableVotingToken.sol",name:"TransferrableVotingToken",constructor:{inputs:[{internalType:"string",name:"name_",type:"string"},{internalType:"string",name:"symbol_",type:"string"},{internalType:"uint8",name:"decimals_",type:"uint8"},{internalType:"uint96",name:"initialSupply_",type:"uint96"},{internalType:"address",name:"account_",type:"address"}],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Approval",type:"event",notice:"The standard EIP-20 approval event"},"DelegateChanged(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegator",type:"address"},{indexed:!0,internalType:"address",name:"fromDelegate",type:"address"},{indexed:!0,internalType:"address",name:"toDelegate",type:"address"}],name:"DelegateChanged",type:"event",notice:"An event thats emitted when an account changes its delegate"},"DelegateVotesChanged(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegate",type:"address"},{indexed:!1,internalType:"uint256",name:"previousBalance",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newBalance",type:"uint256"}],name:"DelegateVotesChanged",type:"event",notice:"An event thats emitted when a delegate account's vote balance changes"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Transfer",type:"event",notice:"An event emitted when an account's voting power is transferred."}},methods:{"DELEGATION_TYPEHASH()":{inputs:[],name:"DELEGATION_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",notice:"The EIP-712 typehash for the delegation struct used by the contract"},"DOMAIN_TYPEHASH()":{inputs:[],name:"DOMAIN_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",notice:"The EIP-712 typehash for the contract's domain"},"PERMIT_TYPEHASH()":{inputs:[],name:"PERMIT_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",notice:"The EIP-712 typehash for the permit struct used by the contract"},"allowance(address,address)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{account:"The address of the account holding the funds",spender:"The address of the account spending the funds"},returns:{_0:"The number of tokens approved"},notice:"Get the number of tokens `spender` is approved to spend on behalf of `account`"},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"rawAmount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"This will overwrite the approval amount for `spender`  and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)",params:{rawAmount:"The number of tokens that are approved (2^256-1 means infinite)",spender:"The address of the account which may transfer tokens"},returns:{_0:"Whether or not the approval succeeded"},notice:"Approve `spender` to transfer up to `amount` from `src`"},"balanceOf(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"checkpoints(address,uint32)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint32",name:"",type:"uint32"}],name:"checkpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"votes",type:"uint96"}],stateMutability:"view",type:"function",notice:"A record of votes checkpoints for each account, by index"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"delegate(address)":{inputs:[{internalType:"address",name:"delegatee",type:"address"}],name:"delegate",outputs:[],stateMutability:"nonpayable",type:"function",params:{delegatee:"The address to delegate votes to"},notice:"Delegate votes from `msg.sender` to `delegatee`"},"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":{inputs:[{internalType:"address",name:"delegatee",type:"address"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"delegateBySig",outputs:[],stateMutability:"nonpayable",type:"function",params:{delegatee:"The address to delegate votes to",expiry:"The time at which to expire the signature",nonce:"The contract state required to match the signature",r:"Half of the ECDSA signature pair",s:"Half of the ECDSA signature pair",v:"The recovery byte of the signature"},notice:"Delegates votes from signatory to `delegatee`"},"delegates(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"delegates",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"A record of each accounts delegate"},"getCurrentVotes(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getCurrentVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],stateMutability:"view",type:"function",params:{account:"The address to get votes balance"},returns:{_0:"The number of current votes for `account`"},notice:"Gets the current votes balance for `account`"},"getPriorVotes(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPriorVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],stateMutability:"view",type:"function",details:"Block number must be a finalized block or else this function will revert to prevent misinformation.",params:{account:"The address of the account to check",blockNumber:"The block number to get the vote balance at"},returns:{_0:"The number of votes the account had as of the given block"},notice:"Determine the prior number of votes for an account as of a block number"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},"nonces(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"A record of states for signing / validating signatures"},"numCheckpoints(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"numCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],stateMutability:"view",type:"function",notice:"The number of checkpoints for each account"},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"rawAmount",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function",params:{deadline:"The time at which to expire the signature",owner:"The address to approve from",r:"Half of the ECDSA signature pair",rawAmount:"The number of tokens that are approved (2^256-1 means infinite)",s:"Half of the ECDSA signature pair",spender:"The address to be approved",v:"The recovery byte of the signature"},notice:"Triggers an approval from owner to spends"},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"totalVotingPower()":{inputs:[],name:"totalVotingPower",outputs:[{internalType:"uint96",name:"",type:"uint96"}],stateMutability:"view",type:"function",notice:"Total voting power in existence."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"dst",type:"address"},{internalType:"uint256",name:"rawAmount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",params:{dst:"The address of the destination account",rawAmount:"The number of tokens to transfer"},returns:{_0:"Whether or not the transfer succeeded"},notice:"Transfer `amount` tokens from `msg.sender` to `dst`"},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"src",type:"address"},{internalType:"address",name:"dst",type:"address"},{internalType:"uint256",name:"rawAmount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",params:{dst:"The address of the destination account",rawAmount:"The number of tokens to transfer",src:"The address of the source account"},returns:{_0:"Whether or not the transfer succeeded"},notice:"Transfer `amount` tokens from `src` to `dst`"},"votingPower(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"votingPower",outputs:[{internalType:"uint96",name:"",type:"uint96"}],stateMutability:"view",type:"function",params:{account:"The address of the account to get the balance of"},returns:{_0:"The amount of voting power held"},notice:"Get the amount of voting power of an account"}}},"contracts/token/VotingPower.sol:VotingPower":{source:"contracts/token/VotingPower.sol",name:"VotingPower",notice:"Power to vote. Heavily based on Uni.",constructor:{inputs:[{internalType:"string",name:"name_",type:"string"}],stateMutability:"nonpayable",type:"constructor"},events:{"DelegateChanged(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegator",type:"address"},{indexed:!0,internalType:"address",name:"fromDelegate",type:"address"},{indexed:!0,internalType:"address",name:"toDelegate",type:"address"}],name:"DelegateChanged",type:"event",notice:"An event thats emitted when an account changes its delegate"},"DelegateVotesChanged(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegate",type:"address"},{indexed:!1,internalType:"uint256",name:"previousBalance",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newBalance",type:"uint256"}],name:"DelegateVotesChanged",type:"event",notice:"An event thats emitted when a delegate account's vote balance changes"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Transfer",type:"event",notice:"An event emitted when an account's voting power is transferred."}},methods:{"DELEGATION_TYPEHASH()":{inputs:[],name:"DELEGATION_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",notice:"The EIP-712 typehash for the delegation struct used by the contract"},"DOMAIN_TYPEHASH()":{inputs:[],name:"DOMAIN_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",notice:"The EIP-712 typehash for the contract's domain"},"checkpoints(address,uint32)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint32",name:"",type:"uint32"}],name:"checkpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"votes",type:"uint96"}],stateMutability:"view",type:"function",notice:"A record of votes checkpoints for each account, by index"},"delegate(address)":{inputs:[{internalType:"address",name:"delegatee",type:"address"}],name:"delegate",outputs:[],stateMutability:"nonpayable",type:"function",params:{delegatee:"The address to delegate votes to"},notice:"Delegate votes from `msg.sender` to `delegatee`"},"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":{inputs:[{internalType:"address",name:"delegatee",type:"address"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"delegateBySig",outputs:[],stateMutability:"nonpayable",type:"function",params:{delegatee:"The address to delegate votes to",expiry:"The time at which to expire the signature",nonce:"The contract state required to match the signature",r:"Half of the ECDSA signature pair",s:"Half of the ECDSA signature pair",v:"The recovery byte of the signature"},notice:"Delegates votes from signatory to `delegatee`"},"delegates(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"delegates",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"A record of each accounts delegate"},"getCurrentVotes(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getCurrentVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],stateMutability:"view",type:"function",params:{account:"The address to get votes balance"},returns:{_0:"The number of current votes for `account`"},notice:"Gets the current votes balance for `account`"},"getPriorVotes(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPriorVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],stateMutability:"view",type:"function",details:"Block number must be a finalized block or else this function will revert to prevent misinformation.",params:{account:"The address of the account to check",blockNumber:"The block number to get the vote balance at"},returns:{_0:"The number of votes the account had as of the given block"},notice:"Determine the prior number of votes for an account as of a block number"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",notice:"Name of the contract."},"nonces(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"A record of states for signing / validating signatures"},"numCheckpoints(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"numCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],stateMutability:"view",type:"function",notice:"The number of checkpoints for each account"},"totalVotingPower()":{inputs:[],name:"totalVotingPower",outputs:[{internalType:"uint96",name:"",type:"uint96"}],stateMutability:"view",type:"function",notice:"Total voting power in existence."},"votingPower(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"votingPower",outputs:[{internalType:"uint96",name:"",type:"uint96"}],stateMutability:"view",type:"function",params:{account:"The address of the account to get the balance of"},returns:{_0:"The amount of voting power held"},notice:"Get the amount of voting power of an account"}}},"contracts/token/VotingToken.sol:VotingToken":{source:"contracts/token/VotingToken.sol",name:"VotingToken",notice:"A non-transferrable token that can vote.",constructor:{inputs:[{internalType:"string",name:"name_",type:"string"},{internalType:"string",name:"symbol_",type:"string"},{internalType:"uint8",name:"decimals_",type:"uint8"}],stateMutability:"nonpayable",type:"constructor"},events:{"DelegateChanged(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegator",type:"address"},{indexed:!0,internalType:"address",name:"fromDelegate",type:"address"},{indexed:!0,internalType:"address",name:"toDelegate",type:"address"}],name:"DelegateChanged",type:"event",notice:"An event thats emitted when an account changes its delegate"},"DelegateVotesChanged(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegate",type:"address"},{indexed:!1,internalType:"uint256",name:"previousBalance",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newBalance",type:"uint256"}],name:"DelegateVotesChanged",type:"event",notice:"An event thats emitted when a delegate account's vote balance changes"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Transfer",type:"event",notice:"An event emitted when an account's voting power is transferred."}},methods:{"DELEGATION_TYPEHASH()":{inputs:[],name:"DELEGATION_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",notice:"The EIP-712 typehash for the delegation struct used by the contract"},"DOMAIN_TYPEHASH()":{inputs:[],name:"DOMAIN_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",notice:"The EIP-712 typehash for the contract's domain"},"balanceOf(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"checkpoints(address,uint32)":{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint32",name:"",type:"uint32"}],name:"checkpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"votes",type:"uint96"}],stateMutability:"view",type:"function",notice:"A record of votes checkpoints for each account, by index"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"delegate(address)":{inputs:[{internalType:"address",name:"delegatee",type:"address"}],name:"delegate",outputs:[],stateMutability:"nonpayable",type:"function",params:{delegatee:"The address to delegate votes to"},notice:"Delegate votes from `msg.sender` to `delegatee`"},"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":{inputs:[{internalType:"address",name:"delegatee",type:"address"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"delegateBySig",outputs:[],stateMutability:"nonpayable",type:"function",params:{delegatee:"The address to delegate votes to",expiry:"The time at which to expire the signature",nonce:"The contract state required to match the signature",r:"Half of the ECDSA signature pair",s:"Half of the ECDSA signature pair",v:"The recovery byte of the signature"},notice:"Delegates votes from signatory to `delegatee`"},"delegates(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"delegates",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"A record of each accounts delegate"},"getCurrentVotes(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getCurrentVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],stateMutability:"view",type:"function",params:{account:"The address to get votes balance"},returns:{_0:"The number of current votes for `account`"},notice:"Gets the current votes balance for `account`"},"getPriorVotes(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPriorVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],stateMutability:"view",type:"function",details:"Block number must be a finalized block or else this function will revert to prevent misinformation.",params:{account:"The address of the account to check",blockNumber:"The block number to get the vote balance at"},returns:{_0:"The number of votes the account had as of the given block"},notice:"Determine the prior number of votes for an account as of a block number"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},"nonces(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"A record of states for signing / validating signatures"},"numCheckpoints(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"numCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],stateMutability:"view",type:"function",notice:"The number of checkpoints for each account"},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"totalVotingPower()":{inputs:[],name:"totalVotingPower",outputs:[{internalType:"uint96",name:"",type:"uint96"}],stateMutability:"view",type:"function",notice:"Total voting power in existence."},"votingPower(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"votingPower",outputs:[{internalType:"uint96",name:"",type:"uint96"}],stateMutability:"view",type:"function",params:{account:"The address of the account to get the balance of"},returns:{_0:"The amount of voting power held"},notice:"Get the amount of voting power of an account"}}},"contracts/token/interfaces/IHasVotes.sol:IHasVotes":{source:"contracts/token/interfaces/IHasVotes.sol",name:"IHasVotes",notice:"Reads the votes that an account has.",methods:{"getCurrentVotes(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getCurrentVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],stateMutability:"view",type:"function",params:{account:"The address to get votes balance"},returns:{_0:"The number of current votes for `account`"},notice:"Gets the current votes balance for `account`"},"getPriorVotes(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPriorVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],stateMutability:"view",type:"function",details:"Block number must be a finalized block or else this function will revert to prevent misinformation.",params:{account:"The address of the account to check",blockNumber:"The block number to get the vote balance at"},returns:{_0:"The number of votes the account had as of the given block"},notice:"Determine the prior number of votes for an account as of a block number"}}},"contracts/token/interfaces/IMintableToken.sol:IMintableToken":{source:"contracts/token/interfaces/IMintableToken.sol",name:"IMintableToken",methods:{"burn(address,uint96)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint96",name:"_amount",type:"uint96"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},"mint(address,uint96)":{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint96",name:"_amount",type:"uint96"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/token/interfaces/INonTransferrableToken.sol:INonTransferrableToken":{source:"contracts/token/interfaces/INonTransferrableToken.sol",name:"INonTransferrableToken",notice:"A token that cannot be transferred.",methods:{"balanceOf(address)":{inputs:[{internalType:"address",name:"_account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/token/interfaces/IVotingDelegates.sol:IVotingDelegates":{source:"contracts/token/interfaces/IVotingDelegates.sol",name:"IVotingDelegates",notice:"Interface for a contract that keeps track of voting delegates.",events:{"DelegateChanged(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegator",type:"address"},{indexed:!0,internalType:"address",name:"fromDelegate",type:"address"},{indexed:!0,internalType:"address",name:"toDelegate",type:"address"}],name:"DelegateChanged",type:"event",notice:"An event thats emitted when an account changes its delegate"},"DelegateVotesChanged(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegate",type:"address"},{indexed:!1,internalType:"uint256",name:"previousBalance",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newBalance",type:"uint256"}],name:"DelegateVotesChanged",type:"event",notice:"An event thats emitted when a delegate account's vote balance changes"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Transfer",type:"event",notice:"An event emitted when an account's voting power is transferred."}},methods:{"delegate(address)":{inputs:[{internalType:"address",name:"delegatee",type:"address"}],name:"delegate",outputs:[],stateMutability:"nonpayable",type:"function",params:{delegatee:"The address to delegate votes to"},notice:"Delegate votes from `msg.sender` to `delegatee`"},"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":{inputs:[{internalType:"address",name:"delegatee",type:"address"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"delegateBySig",outputs:[],stateMutability:"nonpayable",type:"function",params:{delegatee:"The address to delegate votes to",expiry:"The time at which to expire the signature",nonce:"The contract state required to match the signature",r:"Half of the ECDSA signature pair",s:"Half of the ECDSA signature pair",v:"The recovery byte of the signature"},notice:"Delegates votes from signatory to `delegatee`"},"delegates(address)":{inputs:[{internalType:"address",name:"delegatee",type:"address"}],name:"delegates",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",notice:"A record of each accounts delegate"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",notice:"Name of the contract."},"totalVotingPower()":{inputs:[],name:"totalVotingPower",outputs:[{internalType:"uint96",name:"",type:"uint96"}],stateMutability:"view",type:"function",notice:"Total voting power in existence."},"votingPower(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"votingPower",outputs:[{internalType:"uint96",name:"",type:"uint96"}],stateMutability:"view",type:"function",params:{account:"The address of the account to get the balance of"},returns:{_0:"The amount of voting power held"},notice:"Get the amount of voting power of an account"}}},"contracts/treasury/TreasuryImplementation.sol:TreasuryImplementation":{source:"contracts/treasury/TreasuryImplementation.sol",name:"TreasuryImplementation",events:{"AmountConverted(address,uint256,uint256,bytes,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"amountIn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountOutMin",type:"uint256"},{indexed:!1,internalType:"bytes",name:"exchangePath",type:"bytes"},{indexed:!1,internalType:"uint256",name:"amountsOut",type:"uint256"}],name:"AmountConverted",type:"event",params:{amountIn:"Amount changed",amountOutMin:"Minimum amount out",amountsOut:"Value of the final amount out",exchangePath:"Exchange path",tokenAddress:"Address of the token"},notice:"Triggered when a token has been set"},"CommunityAdminUpdated(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"oldCommunityAdmin",type:"address"},{indexed:!0,internalType:"address",name:"newCommunityAdmin",type:"address"}],name:"CommunityAdminUpdated",type:"event",params:{newCommunityAdmin:"New communityAdmin address",oldCommunityAdmin:"Old communityAdmin address"},notice:"Triggered when CommunityAdmin has been updated"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"TokenRemoved(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenAddress",type:"address"}],name:"TokenRemoved",type:"event",params:{tokenAddress:"Address of the token"},notice:"Triggered when a token has been removed"},"TokenSet(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenAddress",type:"address"}],name:"TokenSet",type:"event",params:{tokenAddress:"Address of the token"},notice:"Triggered when a token has been set"},"TransferERC20(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TransferERC20",type:"event",params:{amount:"Amount of the transaction",to:"Address of the receiver",token:"ERC20 token address"},notice:"Triggered when an amount of an ERC20 has been transferred from this contract to an address"}},methods:{"PACT()":{inputs:[],name:"PACT",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"collectFees(uint256)":{inputs:[{internalType:"uint256",name:"_uniswapNFTPositionManagerId",type:"uint256"}],name:"collectFees",outputs:[],stateMutability:"nonpayable",type:"function",params:{_uniswapNFTPositionManagerId:"is the id of the Uniswap NFT position*"},notice:"Collects the fees of a Uniswap NFT position"},"communityAdmin()":{inputs:[],name:"communityAdmin",outputs:[{internalType:"contract ICommunityAdmin",name:"",type:"address"}],stateMutability:"view",type:"function"},"convertAmount(address,uint256,uint256,bytes)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_amountIn",type:"uint256"},{internalType:"uint256",name:"_amountOutMin",type:"uint256"},{internalType:"bytes",name:"_exchangePath",type:"bytes"}],name:"convertAmount",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amountIn:"is the amount of the token to convert",_amountOutMin:"is used to prevent the transaction from failing if the price of the token changes - 0 for no check",_exchangePath:"is the path to use for the swap - empty for the default path*",_tokenAddress:"is the address of the token to convert"},notice:"Converts an amount of a token to cUSDs"},"donationMiner()":{inputs:[],name:"donationMiner",outputs:[{internalType:"contract IDonationMiner",name:"",type:"address"}],stateMutability:"view",type:"function"},"getConvertedAmount(address,uint256)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"getConvertedAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function",notice:"Gets the amount of cUSDs that can be obtained from a converting the given amount of a token*"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function",notice:"Returns the current implementation version"},"initialize(address)":{inputs:[{internalType:"contract ICommunityAdmin",name:"_communityAdmin",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",params:{_communityAdmin:"Address of the CommunityAdmin contract"},notice:"Used to initialize a new Treasury contract"},"isToken(address)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"}],name:"isToken",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",params:{_tokenAddress:"token address to be checked"},returns:{_0:"bool true if the tokenAddress is an accepted token"},notice:"Returns if an address is an accepted token"},"lpSwap()":{inputs:[],name:"lpSwap",outputs:[{internalType:"contract ITreasuryLpSwap",name:"",type:"address"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"removeToken(address)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"}],name:"removeToken",outputs:[],stateMutability:"nonpayable",type:"function",params:{_tokenAddress:"address of the token*"},notice:"Used to remove a token"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setToken(address,uint256,uint8,uint256,uint256,uint256,bytes,bytes)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_rate",type:"uint256"},{internalType:"enum ITreasury.LpStrategy",name:"_lpStrategy",type:"uint8"},{internalType:"uint256",name:"_lpPercentage",type:"uint256"},{internalType:"uint256",name:"_lpMinLimit",type:"uint256"},{internalType:"uint256",name:"_uniswapNFTPositionManagerId",type:"uint256"},{internalType:"bytes",name:"_exchangePathToCUSD",type:"bytes"},{internalType:"bytes",name:"_exchangePathToPACT",type:"bytes"}],name:"setToken",outputs:[],stateMutability:"nonpayable",type:"function",params:{_exchangePathToCUSD:"uniswap path to exchange the token to CUSD",_exchangePathToPACT:"uniswap path to exchange the token to PACT*",_lpMinLimit:"minimum amount of funds that need to be in the treasury (and not to be used for LP)",_lpPercentage:"percentage of the funds to be used for LP",_lpStrategy:"strategy to use for splitting the LP fees between treasury and buyback",_rate:"rate of the token in CUSD",_tokenAddress:"address of the token",_uniswapNFTPositionManagerId:"id of the NFT position manager"},notice:"Used to set a new token"},"tokenListAt(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"tokenListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",params:{_index:"index of the token"},returns:{_0:"address of the token"},notice:"Returns the address of a token from tokenList"},"tokenListLength()":{inputs:[],name:"tokenListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",returns:{_0:"uint256 number of tokens"},notice:"Returns the number of tokens"},"tokens(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"tokens",outputs:[{internalType:"uint256",name:"rate",type:"uint256"},{internalType:"enum ITreasury.LpStrategy",name:"lpStrategy",type:"uint8"},{internalType:"uint256",name:"lpPercentage",type:"uint256"},{internalType:"uint256",name:"lpMinLimit",type:"uint256"},{internalType:"uint256",name:"uniswapNFTPositionManagerId",type:"uint256"},{internalType:"bytes",name:"exchangePathToCUSD",type:"bytes"},{internalType:"bytes",name:"exchangePathToPACT",type:"bytes"}],stateMutability:"view",type:"function"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"amount of the transaction",_to:"address of the receiver",_token:"address of the ERC20 token"},notice:"Transfers an amount of an ERC20 from this contract to an address"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"updateCommunityAdmin(address)":{inputs:[{internalType:"contract ICommunityAdmin",name:"_newCommunityAdmin",type:"address"}],name:"updateCommunityAdmin",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newCommunityAdmin:"address of the new CommunityAdmin contract"},notice:"Updates the CommunityAdmin contract address"},"updateDonationMiner(address)":{inputs:[{internalType:"contract IDonationMiner",name:"_newDonationMiner",type:"address"}],name:"updateDonationMiner",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newDonationMiner:"address of the new DonationMiner contract"},notice:"Updates the DonationMiner contract address"},"updateLpSwap(address)":{inputs:[{internalType:"contract ITreasuryLpSwap",name:"_newLpSwap",type:"address"}],name:"updateLpSwap",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newLpSwap:"address of the new LpSwap contract"},notice:"Updates the LpSwap contract address"},"updatePACT(address)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_newPACT",type:"address"}],name:"updatePACT",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newPACT:"address of the new PACT contract"},notice:"Updates the PACT contract address"},"useFundsForLP()":{inputs:[],name:"useFundsForLP",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Uses part of the funds of a token to add liquidity to the Uniswap pool it is used by the DonationMiner when creating a new epoch it can also been used by the DAO when there are too many funds in the treasury*"}}},"contracts/treasury/TreasuryProxy.sol:TreasuryProxy":{source:"contracts/treasury/TreasuryProxy.sol",name:"TreasuryProxy",constructor:{inputs:[{internalType:"address",name:"_logic",type:"address"},{internalType:"address",name:"_proxyAdmin",type:"address"}],stateMutability:"nonpayable",type:"constructor"},fallback:{stateMutability:"payable",type:"fallback"},receive:{stateMutability:"payable",type:"receive"},events:{"AdminChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"previousAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"AdminChanged",type:"event"},"BeaconUpgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"beacon",type:"address"}],name:"BeaconUpgraded",type:"event"},"Upgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"implementation",type:"address"}],name:"Upgraded",type:"event"}},methods:{"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"admin_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"changeAdmin(address)":{inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"changeAdmin",outputs:[],stateMutability:"nonpayable",type:"function",details:"Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."},"implementation()":{inputs:[],name:"implementation",outputs:[{internalType:"address",name:"implementation_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"},"upgradeTo(address)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"}],name:"upgradeTo",outputs:[],stateMutability:"nonpayable",type:"function",details:"Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."},"upgradeToAndCall(address,bytes)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"upgradeToAndCall",outputs:[],stateMutability:"payable",type:"function",details:"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."}}},"contracts/treasury/interfaces/ITreasury.sol:ITreasury":{source:"contracts/treasury/interfaces/ITreasury.sol",name:"ITreasury",methods:{"PACT()":{inputs:[],name:"PACT",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"collectFees(uint256)":{inputs:[{internalType:"uint256",name:"_uniswapNFTPositionManagerId",type:"uint256"}],name:"collectFees",outputs:[],stateMutability:"nonpayable",type:"function"},"communityAdmin()":{inputs:[],name:"communityAdmin",outputs:[{internalType:"contract ICommunityAdmin",name:"",type:"address"}],stateMutability:"view",type:"function"},"convertAmount(address,uint256,uint256,bytes)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_amountIn",type:"uint256"},{internalType:"uint256",name:"_amountOutMin",type:"uint256"},{internalType:"bytes",name:"_exchangePath",type:"bytes"}],name:"convertAmount",outputs:[],stateMutability:"nonpayable",type:"function"},"donationMiner()":{inputs:[],name:"donationMiner",outputs:[{internalType:"contract IDonationMiner",name:"",type:"address"}],stateMutability:"view",type:"function"},"getConvertedAmount(address,uint256)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"getConvertedAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"isToken(address)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"}],name:"isToken",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"lpSwap()":{inputs:[],name:"lpSwap",outputs:[{internalType:"contract ITreasuryLpSwap",name:"",type:"address"}],stateMutability:"view",type:"function"},"removeToken(address)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"}],name:"removeToken",outputs:[],stateMutability:"nonpayable",type:"function"},"setToken(address,uint256,uint8,uint256,uint256,uint256,bytes,bytes)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_rate",type:"uint256"},{internalType:"enum ITreasury.LpStrategy",name:"_lpStrategy",type:"uint8"},{internalType:"uint256",name:"_lpPercentage",type:"uint256"},{internalType:"uint256",name:"_lpMinLimit",type:"uint256"},{internalType:"uint256",name:"_uniswapNFTPositionManagerId",type:"uint256"},{internalType:"bytes",name:"_exchangePathToCUSD",type:"bytes"},{internalType:"bytes",name:"_exchangePathToPACT",type:"bytes"}],name:"setToken",outputs:[],stateMutability:"nonpayable",type:"function"},"tokenListAt(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"tokenListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"tokenListLength()":{inputs:[],name:"tokenListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"tokens(address)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"}],name:"tokens",outputs:[{internalType:"uint256",name:"rate",type:"uint256"},{internalType:"enum ITreasury.LpStrategy",name:"lpStrategy",type:"uint8"},{internalType:"uint256",name:"lpPercentage",type:"uint256"},{internalType:"uint256",name:"lpMinLimit",type:"uint256"},{internalType:"uint256",name:"uniswapNFTPositionManagerId",type:"uint256"},{internalType:"bytes",name:"exchangePathToCUSD",type:"bytes"},{internalType:"bytes",name:"exchangePathToPACT",type:"bytes"}],stateMutability:"view",type:"function"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityAdmin(address)":{inputs:[{internalType:"contract ICommunityAdmin",name:"_communityAdmin",type:"address"}],name:"updateCommunityAdmin",outputs:[],stateMutability:"nonpayable",type:"function"},"updateDonationMiner(address)":{inputs:[{internalType:"contract IDonationMiner",name:"_newDonationMiner",type:"address"}],name:"updateDonationMiner",outputs:[],stateMutability:"nonpayable",type:"function"},"updateLpSwap(address)":{inputs:[{internalType:"contract ITreasuryLpSwap",name:"_lpSwap",type:"address"}],name:"updateLpSwap",outputs:[],stateMutability:"nonpayable",type:"function"},"updatePACT(address)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_newPACT",type:"address"}],name:"updatePACT",outputs:[],stateMutability:"nonpayable",type:"function"},"useFundsForLP()":{inputs:[],name:"useFundsForLP",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/treasury/interfaces/TreasuryStorageV1.sol:TreasuryStorageV1":{source:"contracts/treasury/interfaces/TreasuryStorageV1.sol",name:"TreasuryStorageV1",title:"Storage for Treasury",notice:"For future upgrades, do not change TreasuryStorageV1. Create a new contract which implements TreasuryStorageV1 and following the naming convention TreasuryStorageVX.",methods:{"PACT()":{inputs:[],name:"PACT",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"collectFees(uint256)":{inputs:[{internalType:"uint256",name:"_uniswapNFTPositionManagerId",type:"uint256"}],name:"collectFees",outputs:[],stateMutability:"nonpayable",type:"function"},"communityAdmin()":{inputs:[],name:"communityAdmin",outputs:[{internalType:"contract ICommunityAdmin",name:"",type:"address"}],stateMutability:"view",type:"function"},"convertAmount(address,uint256,uint256,bytes)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_amountIn",type:"uint256"},{internalType:"uint256",name:"_amountOutMin",type:"uint256"},{internalType:"bytes",name:"_exchangePath",type:"bytes"}],name:"convertAmount",outputs:[],stateMutability:"nonpayable",type:"function"},"donationMiner()":{inputs:[],name:"donationMiner",outputs:[{internalType:"contract IDonationMiner",name:"",type:"address"}],stateMutability:"view",type:"function"},"getConvertedAmount(address,uint256)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"getConvertedAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"isToken(address)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"}],name:"isToken",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"lpSwap()":{inputs:[],name:"lpSwap",outputs:[{internalType:"contract ITreasuryLpSwap",name:"",type:"address"}],stateMutability:"view",type:"function"},"removeToken(address)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"}],name:"removeToken",outputs:[],stateMutability:"nonpayable",type:"function"},"setToken(address,uint256,uint8,uint256,uint256,uint256,bytes,bytes)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_rate",type:"uint256"},{internalType:"enum ITreasury.LpStrategy",name:"_lpStrategy",type:"uint8"},{internalType:"uint256",name:"_lpPercentage",type:"uint256"},{internalType:"uint256",name:"_lpMinLimit",type:"uint256"},{internalType:"uint256",name:"_uniswapNFTPositionManagerId",type:"uint256"},{internalType:"bytes",name:"_exchangePathToCUSD",type:"bytes"},{internalType:"bytes",name:"_exchangePathToPACT",type:"bytes"}],name:"setToken",outputs:[],stateMutability:"nonpayable",type:"function"},"tokenListAt(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"tokenListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"tokenListLength()":{inputs:[],name:"tokenListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"tokens(address)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"}],name:"tokens",outputs:[{internalType:"uint256",name:"rate",type:"uint256"},{internalType:"enum ITreasury.LpStrategy",name:"lpStrategy",type:"uint8"},{internalType:"uint256",name:"lpPercentage",type:"uint256"},{internalType:"uint256",name:"lpMinLimit",type:"uint256"},{internalType:"uint256",name:"uniswapNFTPositionManagerId",type:"uint256"},{internalType:"bytes",name:"exchangePathToCUSD",type:"bytes"},{internalType:"bytes",name:"exchangePathToPACT",type:"bytes"}],stateMutability:"view",type:"function"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityAdmin(address)":{inputs:[{internalType:"contract ICommunityAdmin",name:"_communityAdmin",type:"address"}],name:"updateCommunityAdmin",outputs:[],stateMutability:"nonpayable",type:"function"},"updateDonationMiner(address)":{inputs:[{internalType:"contract IDonationMiner",name:"_newDonationMiner",type:"address"}],name:"updateDonationMiner",outputs:[],stateMutability:"nonpayable",type:"function"},"updateLpSwap(address)":{inputs:[{internalType:"contract ITreasuryLpSwap",name:"_lpSwap",type:"address"}],name:"updateLpSwap",outputs:[],stateMutability:"nonpayable",type:"function"},"updatePACT(address)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_newPACT",type:"address"}],name:"updatePACT",outputs:[],stateMutability:"nonpayable",type:"function"},"useFundsForLP()":{inputs:[],name:"useFundsForLP",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/treasury/interfaces/TreasuryStorageV2.sol:TreasuryStorageV2":{source:"contracts/treasury/interfaces/TreasuryStorageV2.sol",name:"TreasuryStorageV2",title:"Storage for Treasury",notice:"For future upgrades, do not change TreasuryStorageV2. Create a new contract which implements TreasuryStorageV2 and following the naming convention TreasuryStorageVX.",methods:{"PACT()":{inputs:[],name:"PACT",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"collectFees(uint256)":{inputs:[{internalType:"uint256",name:"_uniswapNFTPositionManagerId",type:"uint256"}],name:"collectFees",outputs:[],stateMutability:"nonpayable",type:"function"},"communityAdmin()":{inputs:[],name:"communityAdmin",outputs:[{internalType:"contract ICommunityAdmin",name:"",type:"address"}],stateMutability:"view",type:"function"},"convertAmount(address,uint256,uint256,bytes)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_amountIn",type:"uint256"},{internalType:"uint256",name:"_amountOutMin",type:"uint256"},{internalType:"bytes",name:"_exchangePath",type:"bytes"}],name:"convertAmount",outputs:[],stateMutability:"nonpayable",type:"function"},"donationMiner()":{inputs:[],name:"donationMiner",outputs:[{internalType:"contract IDonationMiner",name:"",type:"address"}],stateMutability:"view",type:"function"},"getConvertedAmount(address,uint256)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"getConvertedAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"isToken(address)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"}],name:"isToken",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"lpSwap()":{inputs:[],name:"lpSwap",outputs:[{internalType:"contract ITreasuryLpSwap",name:"",type:"address"}],stateMutability:"view",type:"function"},"removeToken(address)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"}],name:"removeToken",outputs:[],stateMutability:"nonpayable",type:"function"},"setToken(address,uint256,uint8,uint256,uint256,uint256,bytes,bytes)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_rate",type:"uint256"},{internalType:"enum ITreasury.LpStrategy",name:"_lpStrategy",type:"uint8"},{internalType:"uint256",name:"_lpPercentage",type:"uint256"},{internalType:"uint256",name:"_lpMinLimit",type:"uint256"},{internalType:"uint256",name:"_uniswapNFTPositionManagerId",type:"uint256"},{internalType:"bytes",name:"_exchangePathToCUSD",type:"bytes"},{internalType:"bytes",name:"_exchangePathToPACT",type:"bytes"}],name:"setToken",outputs:[],stateMutability:"nonpayable",type:"function"},"tokenListAt(uint256)":{inputs:[{internalType:"uint256",name:"_index",type:"uint256"}],name:"tokenListAt",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"tokenListLength()":{inputs:[],name:"tokenListLength",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"tokens(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"tokens",outputs:[{internalType:"uint256",name:"rate",type:"uint256"},{internalType:"enum ITreasury.LpStrategy",name:"lpStrategy",type:"uint8"},{internalType:"uint256",name:"lpPercentage",type:"uint256"},{internalType:"uint256",name:"lpMinLimit",type:"uint256"},{internalType:"uint256",name:"uniswapNFTPositionManagerId",type:"uint256"},{internalType:"bytes",name:"exchangePathToCUSD",type:"bytes"},{internalType:"bytes",name:"exchangePathToPACT",type:"bytes"}],stateMutability:"view",type:"function"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function"},"updateCommunityAdmin(address)":{inputs:[{internalType:"contract ICommunityAdmin",name:"_communityAdmin",type:"address"}],name:"updateCommunityAdmin",outputs:[],stateMutability:"nonpayable",type:"function"},"updateDonationMiner(address)":{inputs:[{internalType:"contract IDonationMiner",name:"_newDonationMiner",type:"address"}],name:"updateDonationMiner",outputs:[],stateMutability:"nonpayable",type:"function"},"updateLpSwap(address)":{inputs:[{internalType:"contract ITreasuryLpSwap",name:"_lpSwap",type:"address"}],name:"updateLpSwap",outputs:[],stateMutability:"nonpayable",type:"function"},"updatePACT(address)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_newPACT",type:"address"}],name:"updatePACT",outputs:[],stateMutability:"nonpayable",type:"function"},"useFundsForLP()":{inputs:[],name:"useFundsForLP",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/treasuryLpSwap/TreasuryLpSwapImplementation.sol:TreasuryLpSwapImplementation":{source:"contracts/treasuryLpSwap/TreasuryLpSwapImplementation.sol",name:"TreasuryLpSwapImplementation",events:{"AmountConverted(address,uint256,uint256,bytes,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"amountIn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountOutMin",type:"uint256"},{indexed:!1,internalType:"bytes",name:"exchangePath",type:"bytes"},{indexed:!1,internalType:"uint256",name:"amountsOut",type:"uint256"}],name:"AmountConverted",type:"event",params:{amountIn:"Amount changed",amountOutMin:"Minimum amount out",amountsOut:"Value of the final amount out",exchangePath:"Exchange path",tokenAddress:"Address of the token"},notice:"Triggered when a token has been set"},"FeesCollected(uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"uniswapNFTPositionManagerId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"pactFee",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokenFee",type:"uint256"}],name:"FeesCollected",type:"event",params:{pactFee:"pactFee",tokenFee:"tokenFee",uniswapNFTPositionManagerId:"Position manager tokenId"},notice:"Triggered when the fees of an LP has been decreased"},"LiquidityDecreased(uint256,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"uniswapNFTPositionManagerId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"liquidityDecreased",type:"uint256"},{indexed:!1,internalType:"uint256",name:"liquidityLeft",type:"uint256"},{indexed:!1,internalType:"uint256",name:"pactDecreased",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokenDecreased",type:"uint256"}],name:"LiquidityDecreased",type:"event",params:{liquidityDecreased:"Liquidity amount that was decreased from LP",liquidityLeft:"Liquidity amount that was left in LP",pactDecreased:"Amount of PACT that was decreased from LP",tokenDecreased:"Amount of token that was decreased from LP",uniswapNFTPositionManagerId:"Position manager tokenId"},notice:"Triggered when a LP has been decreased"},"LiquidityIncreased(uint256,uint256,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"uniswapNFTPositionManagerId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"pactToAdd",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokenToAdd",type:"uint256"},{indexed:!1,internalType:"uint256",name:"pactSpent",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokenSpent",type:"uint256"}],name:"LiquidityIncreased",type:"event",params:{pactSpent:"Amount of PACT that have been added in LP",pactToAdd:"Amount of PACT that should have been added in LP",tokenSpent:"Amount of token that have been added in LP",tokenToAdd:"Amount of token that should have been added in LP",uniswapNFTPositionManagerId:"Position manager tokenId"},notice:"Triggered when a LP has been increased"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"TransferERC20(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TransferERC20",type:"event",params:{amount:"Amount of the transaction",to:"Address of the receiver",token:"ERC20 token address"},notice:"Triggered when an amount of an ERC20 has been transferred from this contract to an address"}},methods:{"addToLp(address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_erc20Token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"addToLp",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"amount to be added in lp",_erc20Token:"address of the ERC20 token"},notice:"Adds tokens to lp"},"collectFees(uint256)":{inputs:[{internalType:"uint256",name:"_uniswapNFTPositionManagerId",type:"uint256"}],name:"collectFees",outputs:[{internalType:"uint256",name:"amount0",type:"uint256"},{internalType:"uint256",name:"amount1",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{_uniswapNFTPositionManagerId:"id of the lp"},notice:"Collects fees from lp"},"convertAmount(address,uint256,uint256,bytes)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_amountIn",type:"uint256"},{internalType:"uint256",name:"_amountOutMin",type:"uint256"},{internalType:"bytes",name:"_exchangePath",type:"bytes"}],name:"convertAmount",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amountIn:"amount of the token to convert",_amountOutMin:"minimum amount of the token to receive",_exchangePath:"exchange path - if empty, it will use the default exchange path",_tokenAddress:"address of the token to convert"},notice:"Converts an amount of a token to another token"},"decreaseLiquidity(uint256,uint128)":{inputs:[{internalType:"uint256",name:"_uniswapNFTPositionManagerId",type:"uint256"},{internalType:"uint128",name:"_liquidityAmount",type:"uint128"}],name:"decreaseLiquidity",outputs:[{internalType:"uint256",name:"amount0",type:"uint256"},{internalType:"uint256",name:"amount1",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function",notice:"Returns the current implementation version"},"initialize(address,address,address,address)":{inputs:[{internalType:"contract ITreasury",name:"_treasury",type:"address"},{internalType:"contract IUniswapRouter02",name:"_uniswapRouter",type:"address"},{internalType:"contract IQuoter",name:"_uniswapQuoter",type:"address"},{internalType:"contract INonfungiblePositionManager",name:"_uniswapNFTPositionManager",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"amount of the transaction",_to:"address of the receiver",_token:"address of the ERC20 token"},notice:"Transfers an amount of an ERC20 from this contract to an address"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"treasury()":{inputs:[],name:"treasury",outputs:[{internalType:"contract ITreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"uniswapNFTPositionManager()":{inputs:[],name:"uniswapNFTPositionManager",outputs:[{internalType:"contract INonfungiblePositionManager",name:"",type:"address"}],stateMutability:"view",type:"function"},"uniswapQuoter()":{inputs:[],name:"uniswapQuoter",outputs:[{internalType:"contract IQuoter",name:"",type:"address"}],stateMutability:"view",type:"function"},"uniswapRouter()":{inputs:[],name:"uniswapRouter",outputs:[{internalType:"contract IUniswapRouter02",name:"",type:"address"}],stateMutability:"view",type:"function"},"updateTreasury(address)":{inputs:[{internalType:"contract ITreasury",name:"_newTreasury",type:"address"}],name:"updateTreasury",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newTreasury:"address of the new Treasury contract"},notice:"Updates the Treasury contract address"},"updateUniswapNFTPositionManager(address)":{inputs:[{internalType:"contract INonfungiblePositionManager",name:"_newUniswapNFTPositionManager",type:"address"}],name:"updateUniswapNFTPositionManager",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newUniswapNFTPositionManager:"address of the new UniswapNFTPositionManager contract"},notice:"Updates the UniswapNFTPositionManager contract address"},"updateUniswapQuoter(address)":{inputs:[{internalType:"contract IQuoter",name:"_newUniswapQuoter",type:"address"}],name:"updateUniswapQuoter",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newUniswapQuoter:"address of the new UniswapQuoter contract"},notice:"Updates the UniswapQuoter contract address"},"updateUniswapRouter(address)":{inputs:[{internalType:"contract IUniswapRouter02",name:"_newUniswapRouter",type:"address"}],name:"updateUniswapRouter",outputs:[],stateMutability:"nonpayable",type:"function",params:{_newUniswapRouter:"address of the new UniswapRouter contract"},notice:"Updates the UniswapRouter contract address"}}},"contracts/treasuryLpSwap/TreasuryLpSwapProxy.sol:TreasuryLpSwapProxy":{source:"contracts/treasuryLpSwap/TreasuryLpSwapProxy.sol",name:"TreasuryLpSwapProxy",constructor:{inputs:[{internalType:"address",name:"_logic",type:"address"},{internalType:"address",name:"_proxyAdmin",type:"address"}],stateMutability:"nonpayable",type:"constructor"},fallback:{stateMutability:"payable",type:"fallback"},receive:{stateMutability:"payable",type:"receive"},events:{"AdminChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"previousAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"AdminChanged",type:"event"},"BeaconUpgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"beacon",type:"address"}],name:"BeaconUpgraded",type:"event"},"Upgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"implementation",type:"address"}],name:"Upgraded",type:"event"}},methods:{"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"admin_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"changeAdmin(address)":{inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"changeAdmin",outputs:[],stateMutability:"nonpayable",type:"function",details:"Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."},"implementation()":{inputs:[],name:"implementation",outputs:[{internalType:"address",name:"implementation_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"},"upgradeTo(address)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"}],name:"upgradeTo",outputs:[],stateMutability:"nonpayable",type:"function",details:"Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."},"upgradeToAndCall(address,bytes)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"upgradeToAndCall",outputs:[],stateMutability:"payable",type:"function",details:"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."}}},"contracts/treasuryLpSwap/interfaces/ITreasuryLpSwap.sol:ITreasuryLpSwap":{source:"contracts/treasuryLpSwap/interfaces/ITreasuryLpSwap.sol",name:"ITreasuryLpSwap",methods:{"addToLp(address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"addToLp",outputs:[],stateMutability:"nonpayable",type:"function"},"collectFees(uint256)":{inputs:[{internalType:"uint256",name:"_uniswapNFTPositionManagerId",type:"uint256"}],name:"collectFees",outputs:[{internalType:"uint256",name:"amount0",type:"uint256"},{internalType:"uint256",name:"amount1",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"convertAmount(address,uint256,uint256,bytes)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_amountIn",type:"uint256"},{internalType:"uint256",name:"_amountOutMin",type:"uint256"},{internalType:"bytes",name:"_exchangePath",type:"bytes"}],name:"convertAmount",outputs:[],stateMutability:"nonpayable",type:"function"},"decreaseLiquidity(uint256,uint128)":{inputs:[{internalType:"uint256",name:"_uniswapNFTPositionManagerId",type:"uint256"},{internalType:"uint128",name:"_liquidityAmount",type:"uint128"}],name:"decreaseLiquidity",outputs:[{internalType:"uint256",name:"amount0",type:"uint256"},{internalType:"uint256",name:"amount1",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function"},"treasury()":{inputs:[],name:"treasury",outputs:[{internalType:"contract ITreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"uniswapNFTPositionManager()":{inputs:[],name:"uniswapNFTPositionManager",outputs:[{internalType:"contract INonfungiblePositionManager",name:"",type:"address"}],stateMutability:"view",type:"function"},"uniswapQuoter()":{inputs:[],name:"uniswapQuoter",outputs:[{internalType:"contract IQuoter",name:"",type:"address"}],stateMutability:"view",type:"function"},"uniswapRouter()":{inputs:[],name:"uniswapRouter",outputs:[{internalType:"contract IUniswapRouter02",name:"",type:"address"}],stateMutability:"view",type:"function"},"updateTreasury(address)":{inputs:[{internalType:"contract ITreasury",name:"_treasury",type:"address"}],name:"updateTreasury",outputs:[],stateMutability:"nonpayable",type:"function"},"updateUniswapNFTPositionManager(address)":{inputs:[{internalType:"contract INonfungiblePositionManager",name:"_newUniswapNFTPositionManager",type:"address"}],name:"updateUniswapNFTPositionManager",outputs:[],stateMutability:"nonpayable",type:"function"},"updateUniswapQuoter(address)":{inputs:[{internalType:"contract IQuoter",name:"_uniswapQuoter",type:"address"}],name:"updateUniswapQuoter",outputs:[],stateMutability:"nonpayable",type:"function"},"updateUniswapRouter(address)":{inputs:[{internalType:"contract IUniswapRouter02",name:"_uniswapRouter",type:"address"}],name:"updateUniswapRouter",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/treasuryLpSwap/interfaces/TreasuryLpSwapStorageV1.sol:TreasuryLpSwapStorageV1":{source:"contracts/treasuryLpSwap/interfaces/TreasuryLpSwapStorageV1.sol",name:"TreasuryLpSwapStorageV1",title:"Storage for TreasuryLpSwap",notice:"For future upgrades, do not change TreasuryLpSwapStorageV1. Create a new contract which implements TreasuryLpSwapStorageV1 and following the naming convention TreasuryLpSwapStorageVX.",methods:{"addToLp(address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"addToLp",outputs:[],stateMutability:"nonpayable",type:"function"},"collectFees(uint256)":{inputs:[{internalType:"uint256",name:"_uniswapNFTPositionManagerId",type:"uint256"}],name:"collectFees",outputs:[{internalType:"uint256",name:"amount0",type:"uint256"},{internalType:"uint256",name:"amount1",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"convertAmount(address,uint256,uint256,bytes)":{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"uint256",name:"_amountIn",type:"uint256"},{internalType:"uint256",name:"_amountOutMin",type:"uint256"},{internalType:"bytes",name:"_exchangePath",type:"bytes"}],name:"convertAmount",outputs:[],stateMutability:"nonpayable",type:"function"},"decreaseLiquidity(uint256,uint128)":{inputs:[{internalType:"uint256",name:"_uniswapNFTPositionManagerId",type:"uint256"},{internalType:"uint128",name:"_liquidityAmount",type:"uint128"}],name:"decreaseLiquidity",outputs:[{internalType:"uint256",name:"amount0",type:"uint256"},{internalType:"uint256",name:"amount1",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function"},"treasury()":{inputs:[],name:"treasury",outputs:[{internalType:"contract ITreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"uniswapNFTPositionManager()":{inputs:[],name:"uniswapNFTPositionManager",outputs:[{internalType:"contract INonfungiblePositionManager",name:"",type:"address"}],stateMutability:"view",type:"function"},"uniswapQuoter()":{inputs:[],name:"uniswapQuoter",outputs:[{internalType:"contract IQuoter",name:"",type:"address"}],stateMutability:"view",type:"function"},"uniswapRouter()":{inputs:[],name:"uniswapRouter",outputs:[{internalType:"contract IUniswapRouter02",name:"",type:"address"}],stateMutability:"view",type:"function"},"updateTreasury(address)":{inputs:[{internalType:"contract ITreasury",name:"_treasury",type:"address"}],name:"updateTreasury",outputs:[],stateMutability:"nonpayable",type:"function"},"updateUniswapNFTPositionManager(address)":{inputs:[{internalType:"contract INonfungiblePositionManager",name:"_newUniswapNFTPositionManager",type:"address"}],name:"updateUniswapNFTPositionManager",outputs:[],stateMutability:"nonpayable",type:"function"},"updateUniswapQuoter(address)":{inputs:[{internalType:"contract IQuoter",name:"_uniswapQuoter",type:"address"}],name:"updateUniswapQuoter",outputs:[],stateMutability:"nonpayable",type:"function"},"updateUniswapRouter(address)":{inputs:[{internalType:"contract IUniswapRouter02",name:"_uniswapRouter",type:"address"}],name:"updateUniswapRouter",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/vesting/ImpactLabsVestingImplementation.sol:ImpactLabsVestingImplementation":{source:"contracts/vesting/ImpactLabsVestingImplementation.sol",name:"ImpactLabsVestingImplementation",events:{"AdvancePaymentDecreased(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"advancePaymentLeft",type:"uint256"}],name:"AdvancePaymentDecreased",type:"event",params:{advancePaymentLeft:"Value of the advancePayment left",amount:"Value of the decrease"},notice:"Triggered when advancePayment has been decreased"},"Claimed(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Claimed",type:"event",params:{amount:"Value of the claim"},notice:"Triggered when ImpactLabs has claimed"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Paused(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Paused",type:"event"},"TransferERC20(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TransferERC20",type:"event",params:{amount:"Amount of the transaction",to:"Address of the receiver",token:"ERC20 token address"},notice:"Triggered when an amount of an ERC20 has been transferred from this contract to an address"},"Unpaused(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Unpaused",type:"event"}},methods:{"PACT()":{inputs:[],name:"PACT",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"advancePayment()":{inputs:[],name:"advancePayment",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"claim()":{inputs:[],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Transfers PACT to ImpactLabs it will not be transferred PACTs to ImpactLabs until the entire amount payed in advance will be covered"},"donationMiner()":{inputs:[],name:"donationMiner",outputs:[{internalType:"contract IDonationMiner",name:"",type:"address"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function",notice:"Returns the current implementation version"},"impactLabs()":{inputs:[],name:"impactLabs",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"initialize(address,address,address,uint256)":{inputs:[{internalType:"address",name:"_impactLabs",type:"address"},{internalType:"contract IERC20Upgradeable",name:"_PACT",type:"address"},{internalType:"contract IDonationMiner",name:"_donationMiner",type:"address"},{internalType:"uint256",name:"_advancePayment",type:"uint256"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function",params:{_PACT:"Address of the PACT Token",_advancePayment:"The amount of PACT that will be given in advance to ImpactLabs",_impactLabs:"Address of the ImpactLabs"},notice:"Used to initialize a new ImpactLabsVesting contract !!! before calling this method, you must ensure that there is enough PACTs on the contract address"},"nextRewardPeriod()":{inputs:[],name:"nextRewardPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"paused()":{inputs:[],name:"paused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns true if the contract is paused, and false otherwise."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function",params:{_amount:"amount of the transaction",_to:"address of the receiver",_token:"address of the ERC20 token"},notice:"Transfers an amount of an ERC20 from this contract to an address"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"updateImpactLabs(address)":{inputs:[{internalType:"address",name:"_impactLabs",type:"address"}],name:"updateImpactLabs",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Updates the address of impactLabs"}}},"contracts/vesting/ImpactLabsVestingProxy.sol:ImpactLabsVestingProxy":{source:"contracts/vesting/ImpactLabsVestingProxy.sol",name:"ImpactLabsVestingProxy",constructor:{inputs:[{internalType:"address",name:"_logic",type:"address"},{internalType:"address",name:"_proxyAdmin",type:"address"}],stateMutability:"nonpayable",type:"constructor"},fallback:{stateMutability:"payable",type:"fallback"},receive:{stateMutability:"payable",type:"receive"},events:{"AdminChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"previousAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"AdminChanged",type:"event"},"BeaconUpgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"beacon",type:"address"}],name:"BeaconUpgraded",type:"event"},"Upgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"implementation",type:"address"}],name:"Upgraded",type:"event"}},methods:{"admin()":{inputs:[],name:"admin",outputs:[{internalType:"address",name:"admin_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"changeAdmin(address)":{inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"changeAdmin",outputs:[],stateMutability:"nonpayable",type:"function",details:"Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."},"implementation()":{inputs:[],name:"implementation",outputs:[{internalType:"address",name:"implementation_",type:"address"}],stateMutability:"nonpayable",type:"function",details:"Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"},"upgradeTo(address)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"}],name:"upgradeTo",outputs:[],stateMutability:"nonpayable",type:"function",details:"Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."},"upgradeToAndCall(address,bytes)":{inputs:[{internalType:"address",name:"newImplementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"upgradeToAndCall",outputs:[],stateMutability:"payable",type:"function",details:"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."}}},"contracts/vesting/interfaces/IImpactLabsVesting.sol:IImpactLabsVesting":{source:"contracts/vesting/interfaces/IImpactLabsVesting.sol",name:"IImpactLabsVesting",methods:{"PACT()":{inputs:[],name:"PACT",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"advancePayment()":{inputs:[],name:"advancePayment",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"claim()":{inputs:[],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function"},"donationMiner()":{inputs:[],name:"donationMiner",outputs:[{internalType:"contract IDonationMiner",name:"",type:"address"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"impactLabs()":{inputs:[],name:"impactLabs",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"nextRewardPeriod()":{inputs:[],name:"nextRewardPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function"},"updateImpactLabs(address)":{inputs:[{internalType:"address",name:"_impactLabs",type:"address"}],name:"updateImpactLabs",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/vesting/interfaces/ImpactLabsVestingStorageV1.sol:ImpactLabsVestingStorageV1":{source:"contracts/vesting/interfaces/ImpactLabsVestingStorageV1.sol",name:"ImpactLabsVestingStorageV1",title:"Storage for ImpactLabsVesting",notice:"For future upgrades, do not change ImpactLabsVestingStorageV1. Create a new contract which implements ImpactLabsVestingStorageV1 and following the naming convention ImpactLabsVestingStorageVx.",methods:{"PACT()":{inputs:[],name:"PACT",outputs:[{internalType:"contract IERC20Upgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},"advancePayment()":{inputs:[],name:"advancePayment",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"claim()":{inputs:[],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function"},"donationMiner()":{inputs:[],name:"donationMiner",outputs:[{internalType:"contract IDonationMiner",name:"",type:"address"}],stateMutability:"view",type:"function"},"getVersion()":{inputs:[],name:"getVersion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"impactLabs()":{inputs:[],name:"impactLabs",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"nextRewardPeriod()":{inputs:[],name:"nextRewardPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transfer(address,address,uint256)":{inputs:[{internalType:"contract IERC20Upgradeable",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function"},"updateImpactLabs(address)":{inputs:[{internalType:"address",name:"_impactLabs",type:"address"}],name:"updateImpactLabs",outputs:[],stateMutability:"nonpayable",type:"function"}}}};new Xn({el:"#app",router:new Cd({routes:[{path:"/",component:Wd,props:()=>({json:Qd})},{path:"*",component:$d,props:e=>({json:Qd[e.path.slice(1)]})}]}),mounted(){document.dispatchEvent(new Event("render-event"))},render:e=>e(Pd)})})()})();